/***************************************************************************************
 * This shader was generated by a tool; any changes made to this file may be lost
 * Axiom Fixed Function Emulation Layer
 * Vertex Program Entry Point : VS
 * Fragment Program Entry Point : FP
 * Vertex Buffer Delcaration : Float3 Position0;
Float3 Normal0;
Float2 TexCoords0;

 * Fixed Function State : Axiom.RenderSystems.Xna.FixedFunctionEmulation.FixedFunctionState
 ***************************************************************************************/

float4x4  World;
float4x4  View;
float4x4  Projection;
float4x4  ViewIT;
float4x4  WorldViewIT;
shared float4x4  TextureMatrix0; //technique: None
float4 BaseLightAmbient;
float4 Light0_Ambient;
float4 Light0_Diffuse;
float4 Light0_Specular;
float3 Light0_Direction;
float4 MaterialAmbient=float4(1,1,1,1);
float4 MaterialDiffuse=float4(1,1,1,1);
float4 MaterialSpecular=(float4)0;

struct VS_OUTPUT
{
	float4 Pos : POSITION;
	float2 Texcoord0 : TEXCOORD0;
	float4 Color: COLOR0;
	float4 ColorSpec: COLOR1;
};

sampler2D Texture0 : register(s0);

float4 main_fp( VS_OUTPUT input ) : COLOR
{
	float4 finalColor= input.Color + input.ColorSpec;
	{
		float4 texColor=float4(1.0,1.0,1.0,1.0);
		texColor  = tex2D(Texture0, input.Texcoord0);
		float4 source1 = texColor;
		float4 source2 = finalColor;
		finalColor = source1 * source2;
	}
	return finalColor;
}
