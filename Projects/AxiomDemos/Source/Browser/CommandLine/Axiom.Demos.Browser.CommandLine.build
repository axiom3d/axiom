<?xml version="1.0"?>
<project name="Axiom.Demos.Browser.CommandLine" default="build">

	<!--
		Required properties:
			* axiom.demos.build.dir - (path) root level to build to
			* axiom3d.assemblies.dir     - (path) location of Axiom assemblies
			* build.debug           - (true|false) debug build?
			* current.build.defines - framework-specific build defines
	-->


	<target name="references.setup" description="Sets up file references for the project's tasks" unless="${target::has-executed('references.setup')}">

		<fileset id="axiom.demos.build.references">
			<include name="System.dll"/>
			<include name="System.Data.dll"/>
			<include name="System.Drawing.dll"/>
			<include name="System.Xml.dll"/>

			<include name="${axiom.assemblies.dir}/Axiom.dll"/>

			<include name="${axiom.demos.build.dir}/Axiom.Demos.dll"/>
		</fileset>

		<fileset id="axiom.demos.runtime.references">
			<include name="${axiom.assemblies.dir}/Axiom.dll"/>
			<include name="${axiom.assemblies.dir}/Axiom.Plugins.CgProgramManager.dll"/>
			<include name="${axiom.assemblies.dir}/Axiom.Plugins.ParticleFX.dll"/>
			<include name="${axiom.assemblies.dir}/Axiom.Plugins.DevILCodecs.dll"/>
			<include name="${axiom.assemblies.dir}/Axiom.SceneManagers.Bsp.dll"/>
			<include name="${axiom.assemblies.dir}/Axiom.SceneManagers.Octree.dll"/>
			<include unless="${platform::is-win32()}" name="${axiom.assemblies.dir}/Axiom.RenderSystems.OpenGL.Sdl.dll"/>
			<include if="${platform::is-win32()}"     name="${axiom.assemblies.dir}/Axiom.RenderSystems.OpenGL.Win32.dll"/>

			<include name="${axiom.demos.build.dir}/Axiom.Demos.dll"/>

			<include if="${platform::is-win32()}" name="${axiom.assemblies.dir}/Axiom.Platforms.Win32.dll"/>
			<include if="${platform::is-win32()}" name="${axiom.assemblies.dir}/Axiom.RenderSystems.DirectX9.dll"/>
			<include unless="${platform::is-win32()}" name="${axiom.assemblies.dir}/Axiom.Platforms.SDL.dll"/>

			<include name="${ICSharpCode.SharpZipLib.dll}"/>

			<include name="${Tao.DevIl.dll}"/>
			<include if="${platform::is-unix()}" name="${Tao.DevIl.dll.configs}"/>

			<include name="${Tao.Cg.dll}"/>
			<include if="${platform::is-unix()}" name="${Tao.Cg.dll.configs}"/>

			<include name="${Tao.OpenGl.dll}"/>
			<include if="${platform::is-unix()}" name="${Tao.OpenGl.dll.configs}"/>

      <!--
			<include name="${Tao.OpenGl.ExtensionLoader.dll}"/>
			<include if="${platform::is-unix()}" name="${Tao.OpenGl.ExtensionLoader.dll.configs}"/>

			<include name="${Tao.OpenGl.Glu.dll}"/>
			<include if="${platform::is-unix()}" name="${Tao.OpenGl.Glu.dll.configs}"/>
      -->
    
			<include if="${platform::is-win32()}" name="${Tao.Platform.Windows.dll}"/>

			<include unless="${platform::is-win32()}" name="${Tao.Sdl.dll}"/>
			<include unless="${platform::is-win32()}" name="${Tao.Sdl.dll.configs}"/>

			<!-- Dump all the native dependencies into the build directory if on Windows -->
			<!-- NOTE: This is a little sloppy - should really only reference the deps we need -->
			<include if="${platform::is-win32()}" name="${libs.native.win32.dir}/*.dll"/>
			
			<!-- Note that all the Linux native deps should be installed by the distribution, 
			so they aren't handled here.  We just assume they are there -->
		</fileset>
			
	</target>

	<target name="build.setup" description="Sets up the build directory for debugging and running" depends="references.setup" unless="${target::has-executed('build.setup')}">
	
		<!-- ensure build directory exists -->
		<mkdir dir="${axiom.demos.build.dir}" />
		
		<!-- Copy any essential files over -->
		<copy todir="${axiom.demos.build.dir}">
			<fileset>
				<include name="App.config" />
				<include name="EngineConfig.xml" />
				<include name="Terrain.xml" />
			</fileset>
		</copy>
		<copy todir="${axiom.demos.build.dir}">
			<!-- Copy references - we'll need these at runtime -->
			<fileset refid="axiom.demos.runtime.references" />
		</copy>
		
	</target>
	
	<target name="build" depends="build.setup, references.setup" unless="${target::has-executed('build')}">

		<property name="unsafe" value="true" />
		<property name="warnaserror" value="false"/>
		<property name="warninglevel" value="1" />
		<property name="verbose" value="false" />
	
		<!-- build it -->
		<csc target="exe" define="${current.build.defines}" warnaserror="${warnaserror}" warninglevel="${warninglevel}" debug="${build.debug}" unsafe="${unsafe}" verbose="${verbose}" output="${axiom.demos.build.dir}/${project::get-name()}.exe" doc="${axiom.demos.build.dir}/${project::get-name()}.xml">
			<nowarn>
				<!-- do not report warnings for missing XML comments -->
				<warning number="1591" />
				<!-- do not report deprecation warnings -->
				<warning number="0618" />
				<warning number="1572" />
				<warning number="1573" />
				<warning number="219"/>
				<warning number="168"/>
				<warning number="414"/>
			</nowarn>
			<sources failonempty="true">
				<include name="**/*.cs" />
				<!-- common assembly-level attributes -->
				<!-- <include name="../CommonAssemblyInfo.cs" /> -->
			</sources>
			<!--
			<resources prefix="Axiom.Demos" dynamicprefix="true">
				<include name="Resources/**/*" />
			</resources>
			-->
			<references refid="axiom.demos.build.references" />
		</csc>
	</target>
	
	<target name="run" description="Run the Axiom Demos" depends="build">
		<echo message="Running Axiom Demos commandline browser!"/>
		<exec program="${axiom.demos.build.dir}/${project::get-name()}.exe" useruntimeengine="true" workingdir="${axiom.demos.build.dir}" />
	</target>

</project>
