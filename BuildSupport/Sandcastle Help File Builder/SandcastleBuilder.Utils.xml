<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SandcastleBuilder.Utils</name>
    </assembly>
    <members>
        <member name="T:SandcastleBuilder.Utils.TocEntry">
            <summary>
            This represents a table of content entry.  This is used to build the
            table of content entries for additional content items.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.TocEntry.CompareTo(SandcastleBuilder.Utils.TocEntry)">
            <summary>
            Compares this instance to another instance and returns an
            indication of their relative values.
            </summary>
            <param name="other">A TocEntry object to compare</param>
            <returns>Returns -1 if this instance is less than the
            value, 0 if they are equal, or 1 if this instance is
            greater than the value or the value is null.</returns>
            <remarks>The <see cref="P:SandcastleBuilder.Utils.TocEntry.SortOrder"/> property is compared first.
            If equal, the <see cref="P:SandcastleBuilder.Utils.TocEntry.Title"/> property is used.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.TocEntry.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.TocEntry.ToString">
            <summary>
            Convert the table of content entry and its children to a string
            </summary>
            <returns>The entries in HTML 1.x help format</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.TocEntry.ToString(SandcastleBuilder.Utils.HelpFileFormat)">
            <summary>
            Convert the table of content entry and its children to a string
            in the specified help file format.
            </summary>
            <param name="format">The help file format to use</param>
            <returns>The entries in specified help format</returns>
            <exception cref="T:System.ArgumentException">This is thrown if the
            format is not <b>HtmlHelp1x</b> or <b>HtmlHelp2x</b>.</exception>
        </member>
        <member name="M:SandcastleBuilder.Utils.TocEntry.ConvertToString(SandcastleBuilder.Utils.HelpFileFormat,System.Text.StringBuilder)">
            <summary>
            This is used to convert the collection to a string and append it
            to the specified string builder.
            </summary>
            <param name="format">The help file format to use</param>
            <param name="sb">The string builder to which the information is
            appended.</param>
        </member>
        <member name="P:SandcastleBuilder.Utils.TocEntry.Children">
            <summary>
            This returns the child table of content collection for this entry
            </summary>
            <value>If empty, this is a single item in the table of content.
            If it has children, they are listed below this one.  A file may
            or may not be associated with this entry if it is a root node.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.TocEntry.SourceFile">
            <summary>
            This is used to get or set the entry's source file path.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.TocEntry.DestinationFile">
            <summary>
            This is used to get or set the entry's destination file path.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.TocEntry.Title">
            <summary>
            This is used to get or set the entry's title in the table of
            content.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.TocEntry.IncludePage">
            <summary>
            This is used to get or set whether or not the page will appear in
            the table of content.
            </summary>
            <remarks>For root entries that have children, the node will appear
            in the table of content but will have no page associated with it.
            The other options such as <see cref="P:SandcastleBuilder.Utils.TocEntry.SortOrder"/> will still have
            an effect.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.TocEntry.IsDefaultTopic">
            <summary>
            This is used to get or set whether or not the item is the default
            topic for the help file.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.TocEntry.HasLinks">
            <summary>
            This is used to get or set whether or not the topic has links that
            need to be resolved when the file is copied.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.TocEntry.NeedsColorizing">
            <summary>
            This is used to get or set whether or not the topic has
            <c>&lt;pre&gt;</c> blocks that have a <c>lang</c>
            attribute to indicate that they should be colorized.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.TocEntry.HasCodeBlocks">
            <summary>
            This is used to get or set whether or not the topic has
            <c>&lt;code /&gt;</c> blocks that need expanding.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.TocEntry.HasProjectTags">
            <summary>
            This is used to get or set whether or not the topic has tags
            that should be resolved to project options.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.TocEntry.SortOrder">
            <summary>
            This is used to get or set the sort order for the entry within
            its group.
            </summary>
            <value>Entries with identical sort order values will sort by
            title as well.  Items with not specific sort order will sort
            below those with a defined sort order.</value>
        </member>
        <member name="T:SandcastleBuilder.Utils.Gac.AssemblyLoader">
            <summary>
            This class is used to load assemblies in a separate application
            domain in order to obtain a list of namespaces within them.  It also
            contains a utility method used to get a list of assemblies in the GAC.
            </summary>
            <remarks>By loading them in a separate application domain, we can
            unload the application domain when done and not hold a reference
            to the assemblies.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.Gac.AssemblyLoader.CreateAssemblyLoader(SandcastleBuilder.Utils.SandcastleProject)">
            <summary>
            This is used to create the assembly loader instance.
            </summary>
            <param name="project">The project from which to get the
            necessary dependency information.</param>
            <returns>Returns the assembly loader instance</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Gac.AssemblyLoader.ReleaseAssemblyLoader">
            <summary>
            This is used to release the assembly loader instance.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Gac.AssemblyLoader.#ctor">
            <summary>
            Private constructor
            </summary>
            <remarks>Use <see cref="M:SandcastleBuilder.Utils.Gac.AssemblyLoader.CreateAssemblyLoader(SandcastleBuilder.Utils.SandcastleProject)"/> to create
            an instance.  Use <see cref="M:SandcastleBuilder.Utils.Gac.AssemblyLoader.ReleaseAssemblyLoader"/> when
            done with it.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.Gac.AssemblyLoader.GetAssemblyLocation(System.String)">
            <summary>
            This is used to get the location of the specified GAC assembly
            </summary>
            <param name="fullName">The assembly name in long form</param>
            <returns>Returns the full file path for the GAC assembly</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Gac.AssemblyLoader.AddDependency(System.String)">
            <summary>
            Add a dependency to the dependencies collection
            </summary>
            <param name="dependencyPath">The path to the dependency</param>
            <remarks>We must add the dependency within the instance as you
            cannot add them in the calling code as they won't be seen
            here in the application domain in which the instance is hosted.
            </remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.Gac.AssemblyLoader.GetNamespaces(System.String)">
            <summary>
            Load the named assembly file and get a list of all of its
            namespaces.
            </summary>
            <param name="assemblyFilename">The name of the assembly</param>
            <returns>Returns a string collection containing the namespace
            names.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Gac.AssemblyLoader.CurrentDomain_AssemblyResolve(System.Object,System.ResolveEventArgs)">
            <summary>
            This is handled to resolve dependent assemblies and load them
            when necessary.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="args">The event arguments</param>
            <returns>The loaded assembly</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.Gac.AssemblyLoader.GacList">
            <summary>
            This static property is used to obtain a list containing the
            fully qualified names of all assemblies in the GAC.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Gac.AssemblyLoader.AppDomain">
            <summary>
            Set or get the application domain for this instance
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.DocumentAssembly">
            <summary>
            This represents an assembly and an XML file to use for building the
            help file.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.DocumentAssembly.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.DocumentAssembly.WriteXml(System.Xml.XmlTextWriter)">
            <summary>
            This is used to save the document assembly information to
            the project file.
            </summary>
            <param name="xw">The XML text writer to which the information
            is written.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.DocumentAssembly.ReadXml(System.Xml.XmlTextReader,System.Version)">
            <summary>
            This is used to load the document assembly information from the
            project file.
            </summary>
            <param name="xr">The XML text reader from which the information
            is loaded.</param>
            <param name="schemaVersion">The schema version</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.DocumentAssembly.Equals(System.Object)">
            <summary>
            See if specified item equals this one
            </summary>
            <param name="obj">The object to compare to this one</param>
            <returns>True if equal, false if not</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.DocumentAssembly.GetHashCode">
            <summary>
            Get a hash code for this item
            </summary>
            <returns>Returns the hash code for the assembly path and
            XML comments path.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.DocumentAssembly.ToString">
            <summary>
            Return a string representation of the item
            </summary>
            <returns>Returns the assembly path and XML comments path separated
            by a comma.</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.DocumentAssembly.AssemblyPath">
            <summary>
            This is used to set or get the assembly file path
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.DocumentAssembly.XmlCommentsPath">
            <summary>
            This is used to set or get the XML comments file path
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.DocumentAssembly.CommentsOnly">
            <summary>
            Set or get whether or not this entry represents an XML comments
            file without an associated assembly.
            </summary>
            <value>Set to false if the comments file has an associated
            assembly (the default) or true if it only contains comments (i.e
            for the project or namespaces).</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.DocumentAssembly.AssemblyDescription">
            <summary>
            This returns a description of the entry suitable for display in a
            bound list control.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.DependencyItemEditorDlg">
            <summary>
            This form is used to edit the dependency item collection
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.Design.DependencyItemEditorDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.DependencyItemEditorDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.DependencyItemEditorDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.DependencyItemEditorDlg.#ctor(SandcastleBuilder.Utils.DependencyItemCollection)">
            <summary>
            Constructor
            </summary>
            <param name="dependencyItems">The item collection to edit</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.DependencyItemEditorDlg.btnClose_Click(System.Object,System.EventArgs)">
            <summary>
            Refresh the collection and close the form
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.DependencyItemEditorDlg.btnAddFolder_Click(System.Object,System.EventArgs)">
            <summary>
            Add a new folder dependency item
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.DependencyItemEditorDlg.btnAddFile_Click(System.Object,System.EventArgs)">
            <summary>
            Add a new single file dependency item
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.DependencyItemEditorDlg.btnAddFromGAC_Click(System.Object,System.EventArgs)">
            <summary>
            Add one or more dependencies from the GAC
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.DependencyItemEditorDlg.btnDelete_Click(System.Object,System.EventArgs)">
            <summary>
            Delete a dependency item
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.DependencyItemEditorDlg.lbDependencyItems_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Update the dependency path text box with the selected item
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.DependencyItemEditorDlg.pgProps_PropertyValueChanged(System.Object,System.Windows.Forms.PropertyValueChangedEventArgs)">
            <summary>
            Refresh the list box item when a property changes
            </summary>
            <param name="s">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:SandcastleBuilder.Utils.VisibleItems">
            <summary>
            This public enumerated type defines the optional visible items in the
            help file.
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.VisibleItems.None">
            <summary>None of the optional items are visible.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.VisibleItems.Attributes">
            <summary>Document attributes.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.VisibleItems.ExplicitInterfaceImplementations">
            <summary>Document explicit interface implementations.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.VisibleItems.InheritedMembers">
            <summary>Document inherited members.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.VisibleItems.InheritedFrameworkMembers">
            <summary>Document inherited framework members.  For this to work,
            <b>InheritedMembers</b> must also be enabled.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.VisibleItems.Internals">
            <summary>Document internal members.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.VisibleItems.Privates">
            <summary>Document private members.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.VisibleItems.Protected">
            <summary>Document protected members.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.VisibleItems.ProtectedInternalAsProtected">
            <summary>Document "protected internal" members as "protected"
            only.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.VisibleItems.SealedProtected">
            <summary>Document protected members of sealed classes.  For this
            to work, <b>Protected</b> must also be enabled.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.VisibleItems.PrivateFields">
            <summary>Document private fields.  For this to work,
            <b>Privates</b> must also be enabled.</summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.BuilderException">
            <summary>
            This exception class is thrown by the application if it encounters an
            unrecoverable error.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuilderException.#ctor">
            <summary>
            Default constructor.
            </summary>
            <overloads>There are three overloads for the constructor</overloads>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuilderException.#ctor(System.String)">
            <summary>
            This constructor takes a message string.
            </summary>
            <param name="message">The exception message</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuilderException.#ctor(System.String,System.Exception)">
            <summary>
            This constructor takes a message string and an inner exception.
            </summary>
            <param name="message">The exception message</param>
            <param name="inner">The inner exception</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuilderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor for use with
            <see cref="T:System.Runtime.Serialization.ISerializable"/>.
            </summary>
            <param name="info">The serialization info object</param>
            <param name="context">The streaming context object</param>
        </member>
        <member name="T:SandcastleBuilder.Utils.Controls.StatusBarTextProvider">
            <summary>
            This is an <see cref="T:System.ComponentModel.IExtenderProvider"/> component that allows you
            to add status bar text for menu items and form controls.  When built
            for use with .NET 2.0, it also supports adding status bar text for
            menu strip, tool strip, and status strip components.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.#ctor">
            <summary>
            Default constructor
            </summary>
            <overloads>There are two overloads for the constructor</overloads>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Constructor.  This one takes a reference to a container.
            </summary>
            <param name="container">The container for the component</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">True to release both managed and unmanaged
            resources, false to just release unmanaged resources.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.CanExtend(System.Object)">
            <summary>
            This is implemented to determine if the component can be extended
            with the extra properties.
            </summary>
            <param name="extendee">The object to check</param>
            <returns>True if it can be extended, false if not</returns>
            <remarks><see cref="T:System.Windows.Forms.MenuItem"/> components and everything derived
            from <b>ToolStripItem</b> (.NET 2.0) and
            <see cref="T:System.Windows.Forms.Control"/> are extended with the <b>StatusBarText</b>
            and <b>ShowAsBlank</b> properties with the following exceptions:
            <b>Form</b>, <b>Label</b>, <b>PictureBox</b>, <b>ProgressBar</b>,
            <b>ScrollBar</b>, <b>Splitter</b>, <b>StatusBar</b>,
            <b>ToolBar</b>, <b>ToolStrip</b> (.NET 2.0) and controls derived
            from them.  The <b>Form</b> contain controls and the other controls
            cannot receive the focus needed to display the text so there is no
            point in giving them status bar text.  The exception to the above
            rule is <b>LinkLabel</b> which can receive the focus and thus can
            be extended.  <b>ToolStripItem</b> components are only supported
            when built for use with .NET 2.0.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.GetStatusBarText(System.ComponentModel.Component)">
            <summary>
            This is used to retrieve the status bar text for a component.
            </summary>
            <param name="comp">The component for which to get the status bar
            text</param>
            <returns>The message string if found or null if not found</returns>
            <exception cref="T:System.ArgumentException">This is thrown if the component
            is null or if it is not a menu item, control, or a tool strip item.
            </exception>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.SetStatusBarText(System.ComponentModel.Component,System.String)">
            <summary>
            This stores the status bar text for the specified component.
            </summary>
            <param name="comp">The component associated with the message</param>
            <param name="message">The status bar text for the component</param>
            <remarks>The designer converts strings containing nothing but
            spaces to empty strings and won't serialize them to code.  If you
            want a blank string to display, use <see cref="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.SetShowAsBlank(System.ComponentModel.Component,System.Boolean)"/>
            to set the "show as blank" flag to true instead.</remarks>
            <exception cref="T:System.ArgumentException">This is thrown if the component
            is null or if it is not a menu item, control, or a tool strip item.
            </exception>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.GetShowAsBlank(System.ComponentModel.Component)">
            <summary>
            This is used to retrieve the "show as blank" flag for a menu item
            or control.
            </summary>
            <param name="comp">The item for which to get the flag</param>
            <returns>True if it will show a blank status bar message or false
            if not.</returns>
            <exception cref="T:System.ArgumentException">This is thrown if the component
            is null or if it is not a menu item, control, or a tool strip item.
            </exception>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.SetShowAsBlank(System.ComponentModel.Component,System.Boolean)">
            <summary>
            This stores the "show as blank" flag for the specified component.
            </summary>
            <param name="comp">The component associated with the property</param>
            <param name="showBlank">The flag value for the component</param>
            <remarks>The designer converts strings containing nothing but
            spaces to empty strings and this equates to the default and the
            value is not serialized to code. If you want a blank string to
            display, set this property to true instead.  This property takes
            precedence over the <b>StatusBarText</b> property.</remarks>
            <exception cref="T:System.ArgumentException">This is thrown if the component
            is null or if it is not a menu item, control, or a tool strip item.
            </exception>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InitializeProgressBar(System.Int32)">
            <summary>
            This can be used to initialize the status strip progress bar
            controls.
            </summary>
            <param name="maximum">The maximum value</param>
            <overloads>There are six overloads for this method.</overloads>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InitializeProgressBar(System.Int32,System.String)">
            <summary>
            This can be used to initialize the status strip progress bar
            controls.
            </summary>
            <param name="maximum">The maximum value</param>
            <param name="progressNote">A note for the progress note status
            label control.  If null, the current text is left alone.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InitializeProgressBar(System.Int32,System.Int32)">
            <summary>
            This can be used to initialize the status strip progress bar
            controls.
            </summary>
            <param name="minimum">The minimum value</param>
            <param name="maximum">The maximum value</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InitializeProgressBar(System.Int32,System.Int32,System.Int32)">
            <summary>
            This can be used to initialize the status strip progress bar
            controls.
            </summary>
            <param name="minimum">The minimum value</param>
            <param name="maximum">The maximum value</param>
            <param name="current">The current value</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InitializeProgressBar(System.Int32,System.Int32,System.String)">
            <summary>
            This can be used to initialize the status strip progress bar
            controls.
            </summary>
            <param name="minimum">The minimum value</param>
            <param name="maximum">The maximum value</param>
            <param name="progressNote">A note for the progress note status
            label control.  If null, the current text is left alone.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InitializeProgressBar(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            This can be used to initialize the status strip progress bar
            controls.
            </summary>
            <param name="minimum">The minimum value</param>
            <param name="maximum">The maximum value</param>
            <param name="current">The current value</param>
            <param name="step">The step value for the progress bar</param>
            <param name="progressNote">A note for the progress note status
            label control.  If null, the current text is left alone.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.UpdateProgress">
            <summary>
            This can be used to update the progress bar with a new value
            </summary>
            <remarks>This version updates the progress by the step
            value.</remarks>
            <overloads>There are four overloads for this method</overloads>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.UpdateProgress(System.String)">
            <summary>
            This can be used to update the progress bar with a new value
            </summary>
            <param name="progressNote">A note for the progress note status
            label control.</param>
            <remarks>This version updates the progress by the step
            value and updates the progress note.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.UpdateProgress(System.Int32)">
            <summary>
            This can be used to update the progress bar with a new value
            </summary>
            <param name="current">The current value</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.UpdateProgress(System.Int32,System.String)">
            <summary>
            This can be used to update the progress bar with a new value
            </summary>
            <param name="current">The current value</param>
            <param name="progressNote">A note for the progress note status
            label control.  If null, the current text is left alone.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.ResetProgressBar">
            <summary>
            This can be used to reset the status strip progress bar
            to its minimum value.
            </summary>
            <remarks>This version resets the progress bar to zero and
            clears the progress note.</remarks>
            <overloads>There are two overloads for this method.</overloads>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.ResetProgressBar(System.String)">
            <summary>
            This can be used to reset the status strip progress bar
            to its minimum value and display a new progress message.
            </summary>
            <param name="progressNote">The progress note to display in
            the progress note status label.  If set to null, the
            message is cleared.</param>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.ApplicationStatusBar">
             <summary>
             This is used to set or get the default status bar component to use
             for displaying the status bar text messages.
             </summary>
             <value>This property is static and must be set at some point
             during application initialization.  This component will be used
             unless the <see cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InstanceStatusBar"/> property is set to
             override it.
             </value>
             <seealso cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.ApplicationDisplayPanel"/>
             <seealso cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InstanceStatusBar"/>
             <seealso cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InstanceDisplayPanel"/>
             <example>
             <code>
             // Define the default status bar to use in the main form's
             // constructor
             public MainForm()
             {
                 InitializeComponent();
            
                 //=========
                 // .NET 1.1
                 //=========
                 // Tell the StatusBarTextProvider component the status bar
                 // to use.
                 StatusBarTextProvider.ApplicationStatusBar = sbStatusBar;
            
                 // You can also use any panel you like.  The default is zero
                 // (the left-most panel).  For the demo, we'll use the one
                 // in the middle.
                 StatusBarTextProvider.ApplicationDisplayPanel = 1;
            
                 //=========
                 // .NET 2.0
                 //=========
                 // Tell the StatusBarTextProvider component the component
                 // to use to display the text.  When using a tool strip
                 // component, the ApplicationDisplayPanel property is ignored.
                 StatusBarTextProvider.ApplicationStatusBar = tslStatusText;
            
                 // Define the status label and progress bar too.  This allows
                 // easy access to those items from anywhere within the
                 // application.
                 StatusBarTextProvider.StatusLabel = tslProgressNote;
                 StatusBarTextProvider.ProgressBar = tspbProgressBar;
             }
             </code>
             <code lang="vbnet">
             ' Define the default status bar to use in the main form's
             ' constructor
             Public Sub New()
                 MyBase.New()
            
                 InitializeComponent()
            
                 '=========
                 ' .NET 1.1
                 '=========
                 ' Tell the StatusBarTextProvider component the status bar
                 ' to use.
                 StatusBarTextProvider.ApplicationStatusBar = sbStatusBar;
            
                 ' You can also use any panel you like.  The default is zero
                 ' (the left-most panel).  For the demo, we'll use the one
                 ' in the middle.
                 StatusBarTextProvider.ApplicationDisplayPanel = 1;
            
                 '=========
                 ' .NET 2.0
                 '=========
                 ' Tell the StatusBarTextProvider component the component
                 ' to use to display the text.  When using a tool strip
                 ' component, the ApplicationDisplayPanel property is ignored.
                 StatusBarTextProvider.ApplicationStatusBar = tslStatusText;
            
                 ' Define the status label and progress bar too.  This allows
                 ' easy access to those items from anywhere within the
                 ' application.
                 StatusBarTextProvider.StatusLabel = tslProgressNote;
                 StatusBarTextProvider.ProgressBar = tspbProgressBar;
             End Sub
             </code>
             </example>
             <exception cref="T:System.ArgumentException">This is thrown if the object
             is not a status bar control or a tool strip item.</exception>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.ApplicationDisplayPanel">
            <summary>
            This is used to set or get the status bar panel in which to
            display the messages in the common application status bar.
            </summary>
            <value>This property is static and must be set at some point
            during application initialization.  This display panel will be
            used unless the <see cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InstanceStatusBar"/> property is set
            to override the status bar used.  In that case, the
            <see cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InstanceDisplayPanel"/> is used instead.
            <p/>The default is zero (the first panel).  If the status bar does
            not have panels, the index exceeds the panel count, or the status
            bar's <see cref="P:System.Windows.Forms.StatusBar.ShowPanels"/>
            property is false, messages will be shown in the status bar's
            <b>Text</b> property instead.  This property is ignored if using a
            tool strip item to display the text.</value>
            <seealso cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.ApplicationStatusBar"/>
            <seealso cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InstanceStatusBar"/>
            <seealso cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InstanceDisplayPanel"/>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.ApplicationDefaultText">
            <summary>
            This is used to set or get the default text to show when no item
            has the focus or no status text for the application status bar.
            </summary>
            <value>By default, it will be set to the text in the selected
            status bar component.  If you set it to a different value, set
            this property after specifying the status bar control to use.
            </value>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.StatusLabel">
            <summary>
            This is used to get or set the tool strip status label component
            that can be used to display a status message in conjunction with
            the <see cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.ProgressBar"/> component.
            </summary>
            <remarks>This property is only available when used with .NET 2.0.
            </remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.ProgressBar">
            <summary>
            This is used to get or set the tool strip progress bar component
            that can be used to display progress through a long running task.
            </summary>
            <remarks>This can be used in conjunction with
            <see cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.StatusLabel"/>.  This property is only available when
            used with .NET 2.0.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InstanceStatusBar">
            <summary>
            This is used to get or set the status bar component to use for this
            instance.
            </summary>
            <value>If not set or set to null, it will use the status bar
            control assigned to the <see cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.ApplicationStatusBar"/>
            property.</value>
            <seealso cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.ApplicationStatusBar"/>
            <seealso cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.ApplicationDisplayPanel"/>
            <seealso cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InstanceDisplayPanel"/>
            <exception cref="T:System.ArgumentException">This is thrown if the object
            is not a status bar control or a tool strip item.</exception>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InstanceDisplayPanel">
            <summary>
            This is used to set or get the status bar panel in which to
            display the messages when the <see cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InstanceStatusBar"/>
            property is set to a status bar.
            </summary>
            <value>The default is zero (the first panel).  If the status
            bar does not have panels, the index exceeds the panel count,
            or the status bar's
            <see cref="P:System.Windows.Forms.StatusBar.ShowPanels"/> property
            is false, messages will be shown in the status bar's <b>Text</b>
            property instead.  If using the <see cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.ApplicationStatusBar"/>,
            this property is ignored.  It is also ignored if using a tool
            strip item to display the text.</value>
            <seealso cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.ApplicationStatusBar"/>
            <seealso cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.ApplicationDisplayPanel"/>
            <seealso cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InstanceStatusBar"/>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InstanceDefaultText">
            <summary>
            This is used to set or get the default text to show when no item
            has the focus or no status text for the instance status bar.
            </summary>
            <value>By default, it will be set to the text in the selected
            status bar component.  If set to a different value, set this
            property after specifying the status bar control to use.
            </value>
        </member>
        <member name="T:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.PropertyOptions">
            <summary>
            This class contains the options for the items that need status bar
            text.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.PropertyOptions.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="msg">The message text to display</param>
            <overloads>There are two overloads for the constructor</overloads>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.PropertyOptions.#ctor(System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="showBlank">The "show as blank" flag</param>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.PropertyOptions.Message">
            <summary>
            Set or get the message text
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.PropertyOptions.ShowAsBlank">
            <summary>
            The "show as blank" flag
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.FolderPath">
            <summary>
            This class is used to represent a folder path.  Support is included for
            treating the path as fixed or relative and for expanding environment
            variables in the path name.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.FilePath">
            <summary>
            This class is used to represent a file path.  Support is included for
            treating the path as fixed or relative and for expanding environment
            variables in the path name.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.FilePath.op_Implicit(SandcastleBuilder.Utils.FilePath)~System.String">
             <summary>
             This is used to handle an implicit conversion from a
             <see cref="T:SandcastleBuilder.Utils.FilePath"/> object to a string.
             </summary>
             <param name="filePath">The <see cref="T:SandcastleBuilder.Utils.FilePath"/> to convert.</param>
             <returns>The file path as a relative or absolute path string
             based on its current settings.</returns>
             <example>
             <code lang="cs">
             FilePath filePath = new FilePath(@"%APPDATA%\TestApp\App.config");
             
             // The FilePath object is automatically converted to a string
             // representing the expanded, fully qualified path.
             string pathString = filePath;
             </code>
             <code lang="vbnet">
             Dim filePath As New FilePath("%APPDATA%\TestApp\App.config")
            
             ' The FilePath object is automatically converted to a string
             ' representing the expanded, fully qualified path.
             Dim pathString As String = filePath
             </code>
             </example>
        </member>
        <member name="M:SandcastleBuilder.Utils.FilePath.op_Equality(SandcastleBuilder.Utils.FilePath,SandcastleBuilder.Utils.FilePath)">
            <summary>
            Overload for equal operator.
            </summary>
            <param name="firstPath">The first object to compare</param>
            <param name="secondPath">The second object to compare</param>
            <returns>True if equal, false if not.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.FilePath.op_Inequality(SandcastleBuilder.Utils.FilePath,SandcastleBuilder.Utils.FilePath)">
            <summary>
            Overload for not equal operator.
            </summary>
            <param name="firstPath">The first object to compare</param>
            <param name="secondPath">The second object to compare</param>
            <returns>True if not equal, false if they are.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.FilePath.GetFullPath(System.String)">
            <summary>
            This returns the fully qualified path for the specified path.
            This version allows wildcards in the filename part if present.
            </summary>
            <param name="path">The path to expand</param>
            <returns>The fully qualified path name</returns>
            <remarks>The <b>System.IO.Path</b> version of
            <see cref="M:System.IO.Path.GetFullPath(System.String)"/> will throw an exception
            if the path contains wildcard characters.  This version does not.
            </remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.FilePath.AbsoluteToRelativePath(System.String,System.String)">
            <summary>
            This helper method can be used to convert an absolute path to one
            that is relative to the given base path.
            </summary>
            <param name="basePath">The base path</param>
            <param name="absolutePath">An absolute path</param>
            <returns>A path to the given absolute path that is relative to the
            given base path.</returns>
            <remarks>If the base path is null or empty, the current working
            folder is used.</remarks>
            <example>
            <code lang="cs">
            string basePath = @"E:\DotNet20\CS\TestProject\Source";
            string absolutePath = @"E:\DotNet20\CS\TestProject\Doc\Help.html";
            
            string relativePath = FilePath.AbsoluteToRelativePath(basePath,
                absolutePath);
            
            Console.WriteLine(relativePath);
            
            // Results in: ..\Doc\Help.html
            </code>
            <code lang="vbnet">
            Dim basePath As String = "E:\DotNet20\CS\TestProject\Source"
            Dim absolutePath As String = "E:\DotNet20\CS\TestProject\Doc\Help.html"
            
            Dim relativePath As String = _
                FilePath.AbsoluteToRelativePath(basePath, absolutePath);
            
            Console.WriteLine(relativePath)
            
            ' Results in: ..\Doc\Help.html
            </code>
            </example>
        </member>
        <member name="M:SandcastleBuilder.Utils.FilePath.RelativeToAbsolutePath(System.String,System.String)">
            <summary>
            This helper method can be used to convert a relative path to an
            absolute path based on the given base path.
            </summary>
            <param name="basePath">The base path</param>
            <param name="relativePath">A relative path</param>
            <returns>An absolute path</returns>
            <remarks>If the base path is null or empty, the current working
            folder is used.</remarks>
            <example>
            <code lang="cs">
            string basePath = @"E:\DotNet20\CS\TestProject\Source";
            string relativePath = @"..\Doc\Help.html";
            
            string absolutePath = FilePath.RelativeToAbsolutePath(basePath,
                relativePath);
            
            Console.WriteLine(absolutePath);
            
            // Results in: E:\DotNet20\CS\TestProject\Doc\Help.html
            </code>
            <code lang="vbnet">
            Dim basePath As String = "E:\DotNet20\CS\TestProject\Source"
            Dim relativePath As String = "..\Doc\Help.html"
            
            Dim absolutePath As String = _
                FilePath.RelativeToAbsolutePath(basePath, relativePath);
            
            Console.WriteLine(absolutePath)
            
            ' Results in: E:\DotNet20\CS\TestProject\Doc\Help.html
            </code>
            </example>
        </member>
        <member name="M:SandcastleBuilder.Utils.FilePath.ShouldSerializePath">
            <summary>
            This is used to prevent the Path property from showing as modified
            in the designer.
            </summary>
            <returns>Always returns false</returns>
            <remarks>The <see cref="P:SandcastleBuilder.Utils.FilePath.Path"/> property is mainly for display
            purposes in the designer but can be used for making changes to
            the expanded path if needed.  The <see cref="P:SandcastleBuilder.Utils.FilePath.PersistablePath"/>
            property is used as the display value in the designer.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.FilePath.#ctor">
            <summary>
            Default constructor.  The file path is undefined.
            </summary>
            <overloads>There are three overloads for the constructor.</overloads>
        </member>
        <member name="M:SandcastleBuilder.Utils.FilePath.#ctor(System.String)">
            <summary>
            Constructor.  Assign the specified path.
            </summary>
            <param name="path">A relative or absolute path.</param>
            <remarks>Unless <see cref="P:SandcastleBuilder.Utils.FilePath.IsFixedPath"/> is set to true,
            the path is always treated as a relative path.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.FilePath.#ctor(System.String,System.Boolean)">
            <summary>
            Constructor.  Assign the specified path and fixed setting.
            </summary>
            <param name="path">A relative or absolute path.</param>
            <param name="isFixed">True to treat the path as fixed, false
            to treat it as a relative path.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.FilePath.ToString">
            <summary>
            Convert the file path to a string
            </summary>
            <returns>A fixed or relative path based on the current
            settings.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.FilePath.GetHashCode">
            <summary>
            Get a hash code for the file path object
            </summary>
            <returns>Returns the hash code for the file path object.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.FilePath.Equals(System.Object)">
            <summary>
            This is overridden to allow proper comparison of file path objects.
            </summary>
            <param name="obj">The object to which this instance is
            compared.</param>
            <returns>Returns true if the object equals this instance, false
            if it does not.</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.FilePath.Path">
             <summary>
             This is used to get or set the path to use.
             </summary>
             <value>When set, if the path is not rooted (a relative path),
             <see cref="P:SandcastleBuilder.Utils.FilePath.IsFixedPath"/> is set to false.  If rooted (an absolute
             path), it is not changed.  This property always returns a fully
             qualified path but without any environment variable expansions.
             <p/>If set to a null or empty string, the file path is cleared and
             is considered to be undefined.</value>
             <example>
             <code lang="cs">
             FilePath path = new FilePath();
            
             // Set it to a relative path
             path.Path = @"..\..\Test.txt";
            
             // Set it to an absolute path
             path.Path = @"C:\My Documents\Info.doc";
            
             // Set it to a path based on an environment variable
             path.Path = @"%HOMEDRIVE%%HOMEPATH%\Favorites\*.*";
             </code>
             <code lang="vbnet">
             Dim path As New FilePath()
            
             ' Set it to a relative path
             path.Path = "..\..\Test.txt"
            
             ' Set it to an absolute path
             path.Path = "C:\My Documents\Info.doc"
            
             ' Set it to a path based on an environment variable
             path.Path = "%HOMEDRIVE%%HOMEPATH%\Favorites\*.*"
             </code>
             </example>
        </member>
        <member name="P:SandcastleBuilder.Utils.FilePath.PersistablePath">
            <summary>
            This is used to retrieve the file path in a format suitable for
            persisting to storage based on the current settings.
            </summary>
            <remarks>If <see cref="P:SandcastleBuilder.Utils.FilePath.IsFixedPath"/> is true, an absolute path
            is always returned.  If false, the path is returned in a form that
            is relative to the path stored in the <see cref="P:SandcastleBuilder.Utils.FilePath.BasePath"/>
            property.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.FilePath.Exists">
            <summary>
            This read-only property can be used to determine whether or not
            the file path exists.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.FilePath.ExpandedPath">
            <summary>
            This read-only property is used to display the fully qualified
            path with environment variable expansions in the designer.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.FilePath.IsFixedPath">
            <summary>
            This is used to indicate whether or not the path will be treated
            as a relative or fixed path when converted retrieved via the
            <see cref="P:SandcastleBuilder.Utils.FilePath.PersistablePath"/> property.
            </summary>
            <value>If true, the path is returned as a fixed path when
            retrieved.  If false, it is returned as a path relative to the
            current value of the <see cref="P:SandcastleBuilder.Utils.FilePath.BasePath"/> property.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.FilePath.BasePath">
             <summary>
             This is used to set or get the base path to use as a reference
             when converting file paths between their fixed and relative form
             and vice versa.
             </summary>
             <value>If not set, the current working folder is used.  Any
             environment variables in the value are expanded.</value>
             <example>
             <code lang="cs">
             // Set the base path to a folder
             FilePath.BasePath = @"C:\ProjectFolder\My Project";
            
             // Set the base path to a folder under a folder defined in an
             // environment variable.
             FilePath.BasePath = @"%CommonProgramFiles%\Company\Product\";
             </code>
             <code lang="vbnet">
             ' Set the base path to a folder
             FilePath.BasePath = "C:\ProjectFolder\My Project"
            
             ' Set the base path to a folder under a folder defined in an
             ' environment variable.
             FilePath.BasePath = "%CommonProgramFiles%\Company\Product\"
             </code>
             </example>
        </member>
        <member name="M:SandcastleBuilder.Utils.FolderPath.IsPathTerminated(System.String)">
            <summary>
            This can be used to find out if a path is terminated with a
            trailing backslash.
            </summary>
            <param name="path">The path to check</param>
            <returns>Returns true if it is, false if it is not.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.FolderPath.TerminatePath(System.String)">
            <summary>
            This can be used to ensure that a path is terminated with a
            trailing backslash.
            </summary>
            <param name="path">The path to check</param>
            <returns>The path with a trailing backslash added if necessary.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.FolderPath.ShouldSerializePath">
            <summary>
            This is used to prevent the Path property from showing as modified
            in the designer.
            </summary>
            <returns>Always returns false</returns>
            <remarks>The <see cref="P:SandcastleBuilder.Utils.FolderPath.Path"/> property is mainly for display
            purposes in the designer but can be used for making changes to
            the expanded path if needed.  The <see cref="P:SandcastleBuilder.Utils.FilePath.PersistablePath"/>
            property is used as the display value in the designer.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.FolderPath.#ctor">
            <summary>
            Default constructor.  The folder path is undefined.
            </summary>
            <overloads>There are three overloads for the constructor.</overloads>
        </member>
        <member name="M:SandcastleBuilder.Utils.FolderPath.#ctor(System.String)">
            <summary>
            Constructor.  Assign the specified path.
            </summary>
            <param name="path">A relative or absolute path.</param>
            <remarks>Unless <see cref="P:SandcastleBuilder.Utils.FilePath.IsFixedPath"/> is set to true,
            the path is always treated as a relative path.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.FolderPath.#ctor(System.String,System.Boolean)">
            <summary>
            Constructor.  Assign the specified path and fixed setting.
            </summary>
            <param name="path">A relative or absolute path.</param>
            <param name="isFixed">True to treat the path as fixed, false
            to treat it as a relative path.</param>
        </member>
        <member name="P:SandcastleBuilder.Utils.FolderPath.Path">
            <summary>
            This is used to get or set the path.
            </summary>
            <value>When set, if the path is not rooted (a relative path),
            <see cref="P:SandcastleBuilder.Utils.FilePath.IsFixedPath"/> is set to false.  If rooted (an
            absolute path), it is not changed.  This property always returns a
            fully qualified path but without any environment variable
            expansions and terminated with a trailing backslash if needed.
            <p/>If set to a null or empty string, the folder path is cleared
            and is considered to be undefined.</value>
            <example>
            <code lang="cs">
            FolderPath path = new FolderPath();
            
            // Set it to a relative path
            path.Path = @"..\..\ProjectFolder";
            
            // Set it to an absolute path
            path.Path = @"C:\My Documents\ProjectDocs\";
            
            // Set it to a path based on an environment variable
            path.Path = @"%HOMEDRIVE%%HOMEPATH%\Favorites\";
            </code>
            <code lang="vbnet">
            Dim path As New FilePath()
            
            ' Set it to a relative path
            path.Path = "..\..\ProjectFolder"
            
            ' Set it to an absolute path
            path.Path = "C:\My Documents\ProjectDocs\"
            
            ' Set it to a path based on an environment variable
            path.Path = "%HOMEDRIVE%%HOMEPATH%\Favorites\"
            </code>
            </example>
        </member>
        <member name="P:SandcastleBuilder.Utils.FolderPath.Exists">
            <summary>
            This read-only property can be used to determine whether or not
            the folder path exists.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.FolderPathTypeConverter">
            <summary>
            This type converter is used to convert a FolderPath object to and from
            a string so that it can be edited in a
            <see cref="T:System.Windows.Forms.PropertyGrid"/>.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FolderPathTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Convert the specified object to the specified type
            </summary>
            <param name="context">A formatter context</param>
            <param name="culture">Culture-specific information</param>
            <param name="value">The object to convert</param>
            <param name="destinationType">The type to which to convert</param>
            <returns>The converted object</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FolderPathTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            This returns whether this converter can convert an object of the
            given type to a <see cref="T:SandcastleBuilder.Utils.FolderPath"/> object using the specified
            context.
            </summary>
            <param name="context">A formatter context</param>
            <param name="sourceType">The type from which to convert</param>
            <returns>True if the conversion can be performed or false if not.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FolderPathTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            This converts the given object to a <see cref="T:SandcastleBuilder.Utils.FolderPath"/>
            object using the specified context and culture information.
            </summary>
            <param name="context">A formatter context</param>
            <param name="culture">Culture-specific information</param>
            <param name="value">The object to convert</param>
        </member>
        <member name="T:SandcastleBuilder.Utils.ContentItemCollection">
            <summary>
            This collection class is used to hold the additional content items
            for a project.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.ContentItemCollection.WriteXml(System.Xml.XmlTextWriter)">
            <summary>
            This is used to save the content item list to the project
            file.
            </summary>
            <param name="xw">The XML text writer to which the information
            is written.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.ContentItemCollection.ReadXml(System.Xml.XmlTextReader,System.Version)">
            <summary>
            This is used to load the content item list from the project
            file.
            </summary>
            <param name="xr">The XML text reader from which the information
            is loaded.</param>
            <param name="schemaVersion">The schema version</param>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.DependencyItemEditor">
            <summary>
            This is a type editor that displays the
            <see cref="T:SandcastleBuilder.Utils.Design.DependencyItemEditorDlg"/> to edit the dependency items
            for a project.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.DependencyItemEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            This is overridden to edit the value using the
            <see cref="T:SandcastleBuilder.Utils.Design.DependencyItemEditorDlg"/> dialog.
            </summary>
            <param name="context">The descriptor context</param>
            <param name="provider">The provider</param>
            <param name="value">The dependency item collection as an object</param>
            <returns>The edited dependency item collection as an object</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.DependencyItemEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            This is overridden to specify the editor's edit style
            </summary>
            <param name="context">The descriptor context</param>
            <returns>Always returns <b>Modal</b> as long as there is a context
            and an instance.  Otherwise, it returns <b>None</b>.</returns>
        </member>
        <member name="T:SandcastleBuilder.Utils.ContentPlacement">
            <summary>
            This public enumerated type defines the placement of the additional
            content items in the table of content if any are defined.
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.ContentPlacement.AboveNamespaces">
            <summary>Additional content appears above the namespaces</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.ContentPlacement.BelowNamespaces">
            <summary>Additional content appears below the namespaces</summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.FrameworkVersionTypeConverter">
            <summary>
            This type converter allows you to select a .NET Framework version from
            those currently installed on the system.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FrameworkVersionTypeConverter.InitializeStandardValues">
            <summary>
            This is used to get the standard values by searching for the
            .NET Framework versions installed on the current system.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FrameworkVersionTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            This is overridden to return the values for the type converter's
            dropdown list.
            </summary>
            <param name="context">The format context object</param>
            <returns>Returns the standard values for the type</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FrameworkVersionTypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            This is overridden to indicate that the values are exclusive
            and values outside the list cannot be entered.
            </summary>
            <param name="context">The format context object</param>
            <returns>Always returns true</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FrameworkVersionTypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            This is overridden to indicate that standard values are supported
            and can be chosen from a list.
            </summary>
            <param name="context">The format context object</param>
            <returns>Always returns true</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FrameworkVersionTypeConverter.IsPresent(System.String)">
            <summary>
            This is used to find out if the specified version of the .NET
            Framework is present on the system.
            </summary>
            <param name="version">The version for which to look</param>
            <returns>True if present, false if not found</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FrameworkVersionTypeConverter.LatestMatching(System.String)">
            <summary>
            This is used to get the latest version that starts with the
            given value.
            </summary>
            <param name="version">The version for which to look</param>
            <returns>The latest version starting with the specified value or
            the most recent version if not found.</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.Design.FrameworkVersionTypeConverter.MostRecentVersion">
            <summary>
            This read-only property returns the version number of the most
            recent copy of the .NET Framework installed on the system.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.NamingMethod">
            <summary>
            This public enumerated type defines the naming method to use for the
            help topic filenames.
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.NamingMethod.Guid">
            <summary>Use the default GUID file naming method.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.NamingMethod.MemberName">
            <summary>Use the member name without parameters as the
            filename.  The characters ":", ".", "#", and "`" in the name are
            replaced with an underscore (i.e. T:CustomType becomes
            T_CustomType, M:CustomType.#ctor becomes M_CustomType__ctor,
            P:CustomType.Property becomes P:CustomType_Property, etc).
            Duplicate names will have an incrementing value appended to the
            end of the name (i.e. M_CustomType_Method,
            M_CustomType.Method_1, M_CustomType_Method_2, etc).</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.NamingMethod.HashedMemberName">
            <summary>Use the hashed member name without parameters as the
            filename.  No character replacements are made for this option
            and the <b>GetHashCode</b> method is used to generate the hash
            value and it is formatted as a hex value.  This is useful for
            extremely long type names that cause the filename to exceed the
            maximum length when the full path is included.  Duplicate names
            will have an incrementing value appended to the name prior to
            creating the hash value as needed.</summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.LanguageResourceConverter">
            <summary>
            This type converter allows you to select a culture from a list
            representing a set of available language resource folders.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.LanguageResourceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            This is overridden to return the values for the type converter's
            dropdown list.
            </summary>
            <param name="context">The format context object</param>
            <returns>Returns the standard values for the type</returns>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.LanguageResourceConverter.CultureInfoComparer">
            <summary>
            This is used to compare two culture info objects by display name
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.LanguageResourceConverter.CultureInfoComparer.Compare(System.Object,System.Object)">
            <summary>
            Compare two items
            </summary>
            <param name="x">The first item to compare</param>
            <param name="y">The second item to compare</param>
            <returns>-1 if item 1 is less than item 2, 0 if they are equal,
            or 1 if item 1 is greater than item 2.</returns>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.FileFolderGacPathTypeConverter">
            <summary>
            This type converter is used to convert a FileFolderGacPath object to
            and from a string so that it can be edited in a
            <see cref="T:System.Windows.Forms.PropertyGrid"/>.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FileFolderGacPathTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Convert the specified object to the specified type
            </summary>
            <param name="context">A formatter context</param>
            <param name="culture">Culture-specific information</param>
            <param name="value">The object to convert</param>
            <param name="destinationType">The type to which to convert</param>
            <returns>The converted object</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FileFolderGacPathTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            This returns whether this converter can convert an object of the
            given type to a <see cref="T:SandcastleBuilder.Utils.FileFolderGacPath"/> object using the specified
            context.
            </summary>
            <param name="context">A formatter context</param>
            <param name="sourceType">The type from which to convert</param>
            <returns>True if the conversion can be performed or false if not.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FileFolderGacPathTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            This converts the given object to a <see cref="T:SandcastleBuilder.Utils.FileFolderGacPath"/>
            object using the specified context and culture information.
            </summary>
            <param name="context">A formatter context</param>
            <param name="culture">Culture-specific information</param>
            <param name="value">The object to convert</param>
        </member>
        <member name="T:SandcastleBuilder.Utils.Controls.CustomPropertyGrid">
            <summary>
            This is a custom property grid that allows you to set the initial
            width of the property name pane and has a context menu that allows
            you to hide the description pane and reset the selected property
            value.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.CustomPropertyGrid.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.CustomPropertyGrid.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">True to release both managed and unmanaged
            resources, false to just release unmanaged resources.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.CustomPropertyGrid.OnCreateControl">
            <summary>
            This is overridden to reset the pane width to the user-preferred
            width after creating the control.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.CustomPropertyGrid.ctxPropGrid_Opening(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            This updates the context menu based on the current property grid
            state before it is displayed.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.CustomPropertyGrid.miReset_OnClick(System.Object,System.EventArgs)">
            <summary>
            Reset the value of the current property
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.CustomPropertyGrid.miShowDescription_OnClick(System.Object,System.EventArgs)">
            <summary>
            Show or hide the property description pane
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.CustomPropertyGrid.PropertyNamePaneWidth">
            <summary>
            This is used to set or get the width of the property name pane
            </summary>
            <remarks>Reflection is used to modify the pane width</remarks>
        </member>
        <member name="T:SandcastleBuilder.Utils.BuildProcess">
            <summary>
            This class is used to handle all aspects of the build process in a
            separate thread.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.OnBuildStepChanged(SandcastleBuilder.Utils.BuildProgressEventArgs)">
            <summary>
            This raises the <see cref="E:SandcastleBuilder.Utils.BuildProcess.BuildStepChanged"/> event.
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.OnBuildProgress(SandcastleBuilder.Utils.BuildProgressEventArgs)">
            <summary>
            This raises the <see cref="E:SandcastleBuilder.Utils.BuildProcess.BuildProgress"/> event.
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.#ctor(SandcastleBuilder.Utils.SandcastleProject)">
            <summary>
            Constructor
            </summary>
            <param name="buildProject">The project to build</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.Build">
            <summary>
            Call this method to perform the build on the project.
            </summary>
            <event cref="E:SandcastleBuilder.Utils.BuildProcess.BuildStepChanged">This event fires when the
            current build step changes.</event>
            <event cref="E:SandcastleBuilder.Utils.BuildProcess.BuildProgress">This event fires to report progress
            information.</event>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.ReportProgress(System.String,System.Object[])">
            <summary>
            This is used to report progress during the build process
            within the current step.
            </summary>
            <param name="message">The message to report</param>
            <param name="args">A list of arguments to format into the
            message text</param>
            <overloads>This method has two overloads.</overloads>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.ReportProgress(SandcastleBuilder.Utils.BuildStep,System.String,System.Object[])">
            <summary>
            This is used to report progress during the build process
            and possible update the current step.
            </summary>
            <param name="step">The current build step</param>
            <param name="message">The message to report</param>
            <param name="args">A list of arguments to format into the
            message text</param>
            <event cref="E:SandcastleBuilder.Utils.BuildProcess.BuildStepChanged">This event fires when the
            current build step changes.</event>
            <event cref="E:SandcastleBuilder.Utils.BuildProcess.BuildProgress">This event fires to report progress
            information.</event>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.FindTools">
            <summary>
            Find the Sandcastle tools and the HTML help compiler
            </summary>
            <exception cref="T:SandcastleBuilder.Utils.BuilderException">This is thrown if any of
            the tools cannot be found.</exception>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.FindOnFixedDrives(System.String)">
            <summary>
            Find a folder by searching the Program Files folders on all fixed
            drives.
            </summary>
            <param name="path">The path for which to search</param>
            <returns>The path if found or an empty string if not found</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.FindSdkExecutable(System.String)">
            <summary>
            This is used to find the named executable in one of the Visual
            Studio SDK installation folders.
            </summary>
            <param name="exeName">The name of the executable to find</param>
            <returns>The path if found or an empty string if not found</returns>
            <remarks>The search looks in all "Visual*" folders under the
            Program Files special folder on all fixed drives.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.ValidateAssemblies">
            <summary>
            Validate the documentation assembly information and copy the
            files to the working folder.
            </summary>
            <exception cref="T:SandcastleBuilder.Utils.BuilderException">This is thrown if any of
            the information is invalid.</exception>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.CopyDependencies">
            <summary>
            This is called to create the DLL dependencies folder in the
            working folder and to copy the project's dependency items into it.
            </summary>
            <remarks>By copying the dependencies ourself, we do not have to
            make the user do it.  They can simply specify the locations of
            the dependencies.  It also allows resolving references to GAC
            assemblies and we also can reference a single location in one
            command line parameter and there is no risk of exceeding any
            command line length limitations with a large number of
            dependencies.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.RunProcess(System.String,System.String)">
            <summary>
            This is used to run a step in the build process
            </summary>
            <param name="fileToRun">The file to execute.  This will be one of
            the template batch files with all the necessary values for the
            paths and options plugged into it.</param>
            <param name="args">The arguments to pass to the file if any.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.ReadStdOut">
            <summary>
            This is the thread procedure used to capture standard ouput text
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.ReadStdErr">
            <summary>
            This is the thread procedure used to capture standard error text
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.ReportToolOutput(System.String)">
            <summary>
            Report the output from the currently running tool
            </summary>
            <param name="line">The line to report</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.GarbageCollect">
            <summary>
            Force garbage collection to reduce memory usage.
            </summary>
            <remarks>The reflection information file and XML comments files
            can be quite large.  To reduce memory usage, we force a garbage
            collection to get rid of all the discarded objects.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.UpdateTableOfContent(SandcastleBuilder.Utils.HelpFileFormat)">
            <summary>
            This is called to determine the default topic for the help file
            and insert any additional table of content entries for the
            additional content files.
            </summary>
            <param name="format">The format of the table of content
            (HtmlHelp1x, HtmlHelp2x, or Website).</param>
            <remarks>In the absence of an additional content item with a
            default topic indicator, the default page is determined by
            extracting the first entry from the generated table of contents
            file.  If an additional content item with a default topic indicator
            has been specified, it will be the used instead.  The default
            topic is not used by HTML Help 2.x files.</remarks>
            <exception cref="T:System.ArgumentException">This is thrown if the
            format is not <b>HtmlHelp1x</b>, <b>HtmlHelp2x</b>, or
            <b>Website</b>.</exception>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.CopyStandardHelpContent">
            <summary>
            This is called to create the help project output folder and copy
            the standard content files (art, media, scripts, and styles) to the
            help project folder.
            </summary>
            <remarks>This creates the folders <b>Output\</b> and
            <b>Output\html</b> under the working folder and copies the stock
            art, icon, media, script, and style sheet files from the
            <b>{@PresentationPath}\art</b>, <b>{@PresentationPath}\icons</b>,
            <b>{@PresentationPath}\media</b>,
            <b>{@PresentationPath}\scripts</b>, and
            <b>{@PresentationPath}\styles</b> folders which are located in the
            Sandcastle installation folder.  The art, icons, and media folders
            may or may not exist based on the style.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.RecursiveCopy(System.String,System.String)">
            <summary>
            This copies files from the specified source folder to the specified
            destination folder.  If any subfolders are found below the source
            folder and the wildcard is "*.*", the subfolders are also copied
            recursively.
            </summary>
            <param name="sourcePath">The source path from which to copy</param>
            <param name="destPath">The destination path to which to copy</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.HelpProjectFileList(System.String,SandcastleBuilder.Utils.HelpFileFormat)">
            <summary>
            This returns a complete list of files for inclusion in the
            compiled help file.
            </summary>
            <param name="folder">The folder to expand</param>
            <param name="format">The HTML help file format</param>
            <returns>The full list of all files for the help project</returns>
            <remarks>The help file list is expanded to ensure that we get
            all additional content including all nested sub-folders.  The
            <b>format</b> parameter determines the format of the returned
            file list.  For HTML 1.x, it returns a list of the filenames.
            For HTML 2.x, it returns the list formatted with the necessary
            XML markup.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.GenerateWebsite">
            <summary>
            This is used to generate the website helper files and copy the
            output to the project output folder ready for use as a website.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.GenerateHtmlToc">
            <summary>
            This is called to generate the HTML table of content when
            creating the website output.
            </summary>
            <returns>The HTML to insert for the table of content.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.AppendTocEntry(System.Xml.XmlNodeList,System.Text.StringBuilder)">
            <summary>
            This is called to recursively append the child nodes to the
            HTML table of content in the specified string builder.
            </summary>
            <param name="entries">The list over which to iterate
            recursively.</param>
            <param name="sb">The string builder to which the entries are
            appended.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.ModifyHelpTopicFilenames">
            <summary>
            This is used to change the filenames assigned to each member
            in the reflection information file.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.CopyAdditionalContent(System.Boolean)">
            <summary>
            This is called to copy the additional content files and build a
            list of them for the help file project.
            </summary>
            <param name="previewing">Pass true to generate the table of content
            collection for previewing without actually copying anything.</param>
            <remarks>Note that for wilcard content items, the folders are
            copied recursively.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.RecursiveContentCopy(System.Boolean,System.String,System.String)">
            <summary>
            This copies additional content files from the specified source
            folder to the specified destination folder and builds table of
            content entries for them.  If any subfolders are found below the
            source folder and the wildcard is "*.*", the subfolders are also
            copied recursively.
            </summary>
            <param name="previewing">Pass true to generate the table of content
            collection for previewing without actually copying anything.</param>
            <param name="sourcePath">The source path from which to copy.</param>
            <param name="destPath">The destination path to which to copy.</param>
            <returns>The table of content entry for the folder and all
            of its children or null if there is nothing to show in the table
            of content for this item.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.GetTocInfo(System.String)">
            <summary>
            This is used to extract table of content information from a file
            that will appear in the help file's table of content.
            </summary>
            <param name="filename">The file from which to extract the 
            information</param>
            <returns>The table of content entry</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.ResolveLinksAndCopy(System.String,System.String,SandcastleBuilder.Utils.TocEntry)">
            <summary>
            This is called to load an additional content file, resolve links
            to namespace content and copy it to the output folder.
            </summary>
            <param name="sourceFile">The source filename to copy</param>
            <param name="destFile">The destination filename</param>
            <param name="entry">The entry being resolved.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.OnLinkMatch(System.Text.RegularExpressions.Match)">
            <summary>
            Replace a link to a namespace item with a link to the HTML page
            for it.
            </summary>
            <param name="match">The match that was found</param>
            <returns>The string to use as the replacement</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.OnContentMatch(System.Text.RegularExpressions.Match)">
            <summary>
            Replace a shared content item with it's value.  Note that these
            may be nested.
            </summary>
            <param name="match">The match that was found</param>
            <returns>The string to use as the replacement</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.OnCodeBlockMatch(System.Text.RegularExpressions.Match)">
            <summary>
            This is used to load a code block from an external file.
            </summary>
            <returns>The HTML encoded block extracted from the file and
            wrapped in a &lt;pre&gt; tag ready for colorizing.</returns>
            <remarks>If a region attribute is found, only the named region
            is returned.  If n region attribute is found, the whole file is
            returned.  Relative paths are assumed to be relative to the
            project folder.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.PurgeDuplicateTopics">
            <summary>
            Purge duplicate topics from the reflection information file.
            </summary>
            <remarks>This is used to purge duplicate topics from the
            Sandcastle reflection.org file when building a help file from
            multiple assemblies that share common code that is compiled into
            each of them.  This prevents duplicate topics from being created
            in the help file table of contents and the namespace
            documentation.
            <p/>This problem was submitted as a bug report for the July CTP
            and, once fixed, this code can be removed as can the related
            project option.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.ApplyVisibilityProperties">
            <summary>
            Apply the project's Visibility category properties to the
            reflection information file.
            </summary>
            <remarks>This is used to remove entries from the reflection
            information file so that it does not appear in the help file.
            See the <b>Document*</b> properties in the
            <see cref="T:SandcastleBuilder.Utils.SandcastleProject"/> class for information on the
            items removed.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.RemoveAttributes(System.Xml.XmlDocument)">
            <summary>
            Remove attribute information
            </summary>
            <param name="sourceFile">The document from which to remove the
            attributes.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.RemoveExplicitInterfaceImplementations(System.Xml.XmlDocument)">
            <summary>
            Remove explicit interface implementation information
            </summary>
            <param name="sourceFile">The document from which to remove the
            implementations.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.RemoveInheritedMembers(System.Xml.XmlDocument,System.Boolean)">
            <summary>
            Remove inherited members information from each type's element list
            </summary>
            <param name="sourceFile">The document from which to remove the
            inherited members.</param>
            <param name="frameworkOnly">True to only remove framework members
            or false to remove all inherited members.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.RemoveMembers(System.Xml.XmlDocument,System.String,System.String)">
            <summary>
            Remove member information matching the specified XPath query.
            </summary>
            <param name="sourceFile">The document from which to remove the
            members.</param>
            <param name="xpath">The XPath query used to find the members.</param>
            <param name="memberDesc">A description of the members removed.</param>
            <returns>The number of members to be removed</returns>
            <remarks>Actual removal of the members is deferred.  On very large
            files, the XPath queries took to long when removing the
            &lt;elemen&gt; members.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.ModifyProtectedInternalVisibility(System.Xml.XmlDocument)">
            <summary>
            Change the visibility of "protected internal" members to
            "protected".
            </summary>
            <param name="sourceFile">The document in which to make the
            change.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.RemoveSealedProtected(System.Xml.XmlDocument)">
            <summary>
            Remove protected members from sealed classes.
            </summary>
            <param name="sourceFile">The document from which to remove the
            members</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.RemoveExcludedMembers(System.Xml.XmlDocument)">
            <summary>
            This is used to remove members from the reflection information file
            that have an <b>&lt;exclude&gt;</b> tag in their comments.
            </summary>
            <param name="sourceFile">The document in which to make the
            change.</param>
            <remarks>This method may eventually go away in favor of using the
            namespace ripping feature of MRefBuilder.  However, as of the
            December 2006 CTP, that feature is currently broken and is
            unusable.  As such, we'll do it the hard way.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.RemoveType(System.Xml.XmlDocument,System.String)">
            <summary>
            Remove all elements for a type
            </summary>
            <param name="sourceFile">The document in which to make the
            change.</param>
            <param name="id">The ID of the element to remove</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.OnExcludeElement(System.Text.RegularExpressions.Match)">
            <summary>
            This is used as the match evaluator for the regular expression
            that finds the &lt;element&gt; entries to remove from the
            reflection information file.
            </summary>
            <param name="m">The match found</param>
            <returns>The string with which to replace the match</returns>
            <remarks>The removals are done this way as it proved to be a very
            slow process to remove the child elements at the time they
            were found with an XPath query on very large files.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.TransformTemplate(System.String,System.String,System.String)">
            <summary>
            Transform the specified template by inserting the necessary
            values into the place holders and saving it to the working folder.
            </summary>
            <param name="template">The template to transform</param>
            <param name="sourceFolder">The folder where the template is
            located</param>
            <param name="destFolder">The folder in which to save the
            transformed file</param>
            <returns>The path to the transformed file</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.ReadWithEncoding(System.String,System.Text.Encoding@)">
            <summary>
            This is used to read in a template file using an appropriate
            encoding method.
            </summary>
            <param name="filename">The template file to load</param>
            <param name="encoding">Pass the default encoding to use.  On
            return, it contains the actual encoding for the file.</param>
            <returns>The contents of the file.</returns>
            <remarks>When reading the file, use the default encoding specified
            but detect the encoding if byte order marks are present.  In
            addition, if the template is an XML file and it contains an
            encoding identifier in the XML tag, the file is read using
            that encoding.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.OnFieldMatch(System.Text.RegularExpressions.Match)">
            <summary>
            Replace a field tag with a value from the project
            </summary>
            <param name="match">The match that was found</param>
            <returns>The string to use as the replacement</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.MergeComponentConfigurations">
            <summary>
            This is used to merge the component configurations from the
            project with the <b>sandcastle.config</b> file.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.GenerateNamespaceSummaries">
            <summary>
            This is called to generate the namespace summary file and to purge
            the unwanted namespaces from the reflection information file.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProcess.AddNamespaceComments(System.Xml.XmlNode,System.String)">
            <summary>
            Add project or namespace comments
            </summary>
            <param name="member">The member node to modify.</param>
            <param name="summaryText">The summary text to add.</param>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildProcess.OutputFolder">
            <summary>
            This returns the output folder where the log file and help file
            can be found after the build process has finished.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildProcess.LogFilename">
            <summary>
            This returns the name of the log file used for saving the
            build progress messages.
            </summary>
        </member>
        <member name="E:SandcastleBuilder.Utils.BuildProcess.BuildStepChanged">
            <summary>
            This event is raised to report a change in the build step
            </summary>
        </member>
        <member name="E:SandcastleBuilder.Utils.BuildProcess.BuildProgress">
            <summary>
            This event is raised to report progress information throughout
            each build step.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildProcess.TableOfContent">
            <summary>
            This is used to generate a table of content for previewing
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.FilePathObjectEditor">
            <summary>
            This is a type editor that can display a file dialog to allow
            selection of a file path at design time for a <see cref="T:SandcastleBuilder.Utils.FilePath"/>
            object.
            </summary>
            <remarks>It is used in conjunction with the
            <see cref="T:SandcastleBuilder.Utils.Design.FileDialogAttribute"/> to specify the file dialog title,
            filter, and type</remarks>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.FilePathStringEditor">
            <summary>
            This is a type editor that can display a file dialog to allow
            selection of a file path at design time for a string object.
            </summary>
            <remarks>It is used in conjunction with the
            <see cref="T:SandcastleBuilder.Utils.Design.FileDialogAttribute"/> to specify the file dialog title,
            filter, and type</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FilePathStringEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            This is overridden to edit the value using a file dialog.
            </summary>
            <param name="context">The descriptor context</param>
            <param name="provider">The provider</param>
            <param name="value">The file path as an object</param>
            <returns>The selected file path as an object</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FilePathStringEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            This is overridden to specify the editor's edit style
            </summary>
            <param name="context">The descriptor context</param>
            <returns>Always returns <b>Modal</b> as long as there is a context
            and an instance.  Otherwise, it returns <b>None</b>.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FilePathObjectEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            This is overridden to edit the value using a file dialog.
            </summary>
            <param name="context">The descriptor context</param>
            <param name="provider">The provider</param>
            <param name="value">The file path as an object</param>
            <returns>The selected file path as an object</returns>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.ComponentConfigurationEditorDlg">
            <summary>
            This is used to edit the component configurations.
            </summary>
            <remarks>To be editable, the component must be a third party
            component with a unique ID in the help file builder's
            <b>sandcastle.config</b> file.  In addition, the component must
            expose a public <b>ConfigureComponent</b> method that accepts
            a string containing the current XML configuration information and
            returns a string containing the modified XML configuration
            information.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ComponentConfigurationEditorDlg.#ctor(SandcastleBuilder.Utils.ComponentConfigurationDictionary)">
            <summary>
            Constructor
            </summary>
            <param name="configs">The current configurations</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ComponentConfigurationEditorDlg.btnClose_Click(System.Object,System.EventArgs)">
            <summary>
            Close this form
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ComponentConfigurationEditorDlg.btnConfigure_Click(System.Object,System.EventArgs)">
            <summary>
            Try to load the selected component assembly and edit the
            specified component.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ComponentConfigurationEditorDlg.CurrentDomain_AssemblyResolve(System.Object,System.ResolveEventArgs)">
            <summary>
            This is handled to resolve dependent assemblies and load them
            when necessary.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="args">The event arguments</param>
            <returns>The loaded assembly</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ComponentConfigurationEditorDlg.btnReset_Click(System.Object,System.EventArgs)">
            <summary>
            Reset the configuration of the selected component
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ComponentConfigurationEditorDlg.lbComponents_DrawItem(System.Object,System.Windows.Forms.DrawItemEventArgs)">
            <summary>
            Show components with a configuration in bold
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event argument</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ComponentConfigurationEditorDlg.lbComponents_MeasureItem(System.Object,System.Windows.Forms.MeasureItemEventArgs)">
            <summary>
            Returns the size of the items in the list box
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event argument</param>
        </member>
        <member name="F:SandcastleBuilder.Utils.Design.ComponentConfigurationEditorDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ComponentConfigurationEditorDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ComponentConfigurationEditorDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Design.ComponentConfigurationEditorDlg.SandcastlePath">
            <summary>
            This is used to set or get the Sandcastle installation folder
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.BuildProgressEventArgs">
            <summary>
            This is a custom event arguments class for the
            <see cref="E:SandcastleBuilder.Utils.BuildProcess.BuildProgress"/> event.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildProgressEventArgs.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildProgressEventArgs.BuildStep">
            <summary>
            Get the current build step of the build process
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildProgressEventArgs.Message">
            <summary>
            Get the message associated with the progress report
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildProgressEventArgs.HasCompleted">
            <summary>
            Get a flag indicating whether or not the build has completed
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.FolderDialogAttribute">
            <summary>
            This attribute is used to associate folder dialog parameters with a
            class property for use in editing it in a property grid.
            </summary>
            <seealso cref="T:SandcastleBuilder.Utils.Design.FolderPathStringEditor"/>
            <seealso cref="T:SandcastleBuilder.Utils.Design.FolderPathObjectEditor"/>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FolderDialogAttribute.#ctor(System.String,System.Boolean,System.Environment.SpecialFolder,System.Environment.SpecialFolder)">
            <summary>
            Constructor
            </summary>
            <param name="description">The description for the folder dialog</param>
            <param name="showNewFolderButton">True to show the New Folder
            button or false to hide it.</param>
            <param name="rootFolder">The root folder used to limit browsing.</param>
            <param name="defaultFolder">The default folder from which to
            start browsing.</param>
            <overloads>There are three overloads for the constructor.</overloads>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FolderDialogAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="description">The description for the folder dialog</param>
            <remarks>The New Folder button is hidden and browsing starts
            at the desktop.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FolderDialogAttribute.#ctor(System.String,System.Environment.SpecialFolder)">
            <summary>
            Constructor
            </summary>
            <param name="description">The description for the folder dialog</param>
            <param name="defaultFolder">The default folder from which to
            start browsing.</param>
            <remarks>The New Folder button is hidden and browsing starts
            at the desktop.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.Design.FolderDialogAttribute.Description">
            <summary>
            This is used to get the folder dialog description
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Design.FolderDialogAttribute.ShowNewFolderButton">
            <summary>
            This is used to get whether or not to show the New Folder button
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Design.FolderDialogAttribute.RootFolder">
            <summary>
            This is used to get the root folder used to limit browsing
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Design.FolderDialogAttribute.DefaultFolder">
            <summary>
            This is used to get the default folder from which to start browsing
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.ProjectLinkType">
            <summary>
            This public enumerated type defines the type of links used to reference
            other help topics referring to items in the documented assemblies.
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.ProjectLinkType.None">
            <summary>No active links.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.ProjectLinkType.Local">
            <summary>Local links within the project using anchor tags.  This
            is the default.  This type is compatible with HTML 1.x and HTML
            2.x help files.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.ProjectLinkType.Index">
            <summary>MS-Help style links for use within an HTML 2.x help
            file.</summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.SdkLinkType">
            <summary>
            This public enumerated type defines the type of links used to reference
            other help topics referring to framework (SDK) help topics.
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.SdkLinkType.None">
            <summary>No active links.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.SdkLinkType.Index">
            <summary>MS-Help style links for use within an HTML 2.x help
            file.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.SdkLinkType.Msdn">
            <summary>Links to framework topics on MSDN.  This is the
            default.  This type is compatible with HTML 1.x and HTML
            2.x help files.</summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.FileFolderGacPathObjectEditor">
            <summary>
            This is a type editor that can display a file browser dialog to
            allow selection of a folder path at design time.
            </summary>
            <remarks>This can be used in conjunction with the
            <see cref="T:SandcastleBuilder.Utils.Design.FileDialogAttribute"/> to specify the file browser
            dialog's properties.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FileFolderGacPathObjectEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            This is overridden to edit the value using a file browser dialog.
            </summary>
            <param name="context">The descriptor context</param>
            <param name="provider">The provider</param>
            <param name="value">The folder path as an object</param>
            <returns>The selected folder path as an object</returns>
        </member>
        <member name="T:SandcastleBuilder.Utils.ComponentConfigurationDictionary">
            <summary>
            This collection class is used to hold the additional content items
            for a project.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.ComponentConfigurationDictionary.OnDictionaryChanged(System.ComponentModel.ListChangedEventArgs)">
            <summary>
            This raises the <see cref="E:SandcastleBuilder.Utils.ComponentConfigurationDictionary.DictionaryChanged"/> event.
            </summary>
            <param name="e">The event arguments</param>
            <remarks>The dictionary doesn't raise events automatically so
            this is raised manually as needed.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.ComponentConfigurationDictionary.#ctor">
            <summary>
            Default constructor
            </summary>
            <overloads>There are two overloads for the constructor</overloads>
        </member>
        <member name="M:SandcastleBuilder.Utils.ComponentConfigurationDictionary.WriteXml(System.Xml.XmlTextWriter)">
            <summary>
            This is used to save the component configuration list to the
            project file.
            </summary>
            <param name="xw">The XML text writer to which the information
            is written.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.ComponentConfigurationDictionary.ReadXml(System.Xml.XmlTextReader,System.Version)">
            <summary>
            This is used to load the component configuration list from the
            project file.
            </summary>
            <param name="xr">The XML text reader from which the information
            is loaded.</param>
            <param name="schemaVersion">The schema version</param>
        </member>
        <member name="E:SandcastleBuilder.Utils.ComponentConfigurationDictionary.DictionaryChanged">
            <summary>
            This event is raised when the dictionary is modified
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.NamespaceSummaryItem">
            <summary>
            This represents a a namespace summary item that can be used to add
            comments to a namespace in the help file or exclude it completely
            from the help file.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.NamespaceSummaryItem.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.NamespaceSummaryItem.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="itemName">The namespace's name</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.NamespaceSummaryItem.WriteXml(System.Xml.XmlTextWriter)">
            <summary>
            This is used to save the namespace summary item information to the
            project file.
            </summary>
            <param name="xw">The XML text writer to which the information
            is written.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.NamespaceSummaryItem.ReadXml(System.Xml.XmlTextReader,System.Version)">
            <summary>
            This is used to load the namespace summary item information from
            the project file.
            </summary>
            <param name="xr">The XML text reader from which the information
            is loaded.</param>
            <param name="schemaVersion">The schema version</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.NamespaceSummaryItem.ToString">
            <summary>
            Return the namespace name as the string representation of the
            object.
            </summary>
            <returns>The namespace name</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.NamespaceSummaryItem.IsDocumented">
            <summary>
            This is used to get or set whether or not the namespace is included
            in the help file.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.NamespaceSummaryItem.Summary">
            <summary>
            This is used to get or set the namespace summary comments
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.NamespaceSummaryItem.Name">
            <summary>
            This read-only property is used to get the namespace name
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.DependencyItemCollection">
            <summary>
            This collection class is used to hold the dependency items for a
            project.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.DependencyItemCollection.WriteXml(System.Xml.XmlTextWriter)">
            <summary>
            This is used to save the dependency item list to the project
            file.
            </summary>
            <param name="xw">The XML text writer to which the information
            is written.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.DependencyItemCollection.ReadXml(System.Xml.XmlTextReader,System.Version)">
            <summary>
            This is used to load the dependency item list from the project
            file.
            </summary>
            <param name="xr">The XML text reader from which the information
            is loaded.</param>
            <param name="schemaVersion">The schema version</param>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.PresentationStyleTypeConverter">
            <summary>
            This type converter allows you to select a presentation style folder
            from those currently installed in the <b>.\Presentation</b> folder
            found in the main installation folder of Sandcastle.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.PresentationStyleTypeConverter.InitializeStandardValues">
            <summary>
            This is used to get the standard values by searching for the
            .NET Framework versions installed on the current system.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.PresentationStyleTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            This is overridden to return the values for the type converter's
            dropdown list.
            </summary>
            <param name="context">The format context object</param>
            <returns>Returns the standard values for the type</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.PresentationStyleTypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            This is overridden to indicate that the values are exclusive
            and values outside the list cannot be entered.
            </summary>
            <param name="context">The format context object</param>
            <returns>Always returns true</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.PresentationStyleTypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            This is overridden to indicate that standard values are supported
            and can be chosen from a list.
            </summary>
            <param name="context">The format context object</param>
            <returns>Always returns true</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.PresentationStyleTypeConverter.IsPresent(System.String)">
            <summary>
            This is used to find out if the specified style is present on the
            system.
            </summary>
            <param name="style">The style for which to look</param>
            <returns>True if present, false if not found</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.PresentationStyleTypeConverter.FirstMatching(System.String)">
            <summary>
            This is used to get the first style that matches case-insensitively
            or, failing that, starts with or contains the given value
            case-insensitively.
            </summary>
            <param name="style">The style for which to look</param>
            <returns>The best match or the first style if not found.</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.Design.PresentationStyleTypeConverter.DefaultStyle">
            <summary>
            This returns the default style
            </summary>
            <value>Returns <b>Prototype</b> if present.  If not, it returns the
            first best match or, failing that, the first style in the list.</value>
        </member>
        <member name="T:SandcastleBuilder.Utils.Controls.DividerGroupBox">
            <summary>
            This is a simple derived group box control that draws the label text
            followed by a dividing line to the right of the text but no other
            surrounding border.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.DividerGroupBox.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.DividerGroupBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            This is overridden to draw the text and the dividing line
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:SandcastleBuilder.Utils.BuildStep">
            <summary>
            This public enumerated type defines the build steps used when reporting
            progress during a build.
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildStep.None">
            <summary>The build has not yet started.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildStep.Initializing">
            <summary>Initializing to prepare for build.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildStep.ClearWorkFolder">
            <summary>The working folder is about to be created or cleared.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildStep.FindingTools">
            <summary>The builder is searching for Sandcastle and the
            HTML help compiler.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildStep.ValidatingAssemblies">
            <summary>The documentation assembly information is being validated.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildStep.CreateConfig">
            <summary>The <b>sandcastle.config</b> file is being created.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildStep.CopyDependencies">
            <summary>The document assembly dependencies are being copied.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildStep.GenerateSharedContent">
            <summary>The shared content files are being generated.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildStep.GenerateReflectionInfo">
            <summary>The reflection information is being generated by
            <b>MRefBuilder</b>.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildStep.PurgeDuplicateTopics">
            <summary>Duplicate topic information is being purged from the
            reflection information file.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildStep.ApplyVisibilityProperties">
            <summary>The Visibility category properties are being applied to
            the reflection information file to remove unwanted items.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildStep.GenerateNamespaceSummaries">
            <summary>Namespace summary information is being generated.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildStep.TransformReflectionInfo">
            <summary>The reflection information is being transformed by
            <b>XslTransform</b>.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildStep.ModifyHelpTopicFilenames">
            <summary>Help topic filenames are being altered.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildStep.CopyStandardContent">
            <summary>The standard help file content (art, scripts, and styles)
            is being copied to the help project folder.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildStep.CopyAdditionalContent">
            <summary>The additional content files are being copied to the
            help project folder.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildStep.BuildHelpTopics">
            <summary>Help file topics are being generated by
            <b>BuildAssembler</b>.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildStep.GenerateTableOfContent">
            <summary>The table of content is being generated by
            <b>XslTransform</b>.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildStep.UpdateTableOfContent">
            <summary>The table of content is being updated with additional
            content items and the default page is being determined.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildStep.GenerateHelpFileIndex">
            <summary>The help file index is being generated.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildStep.GenerateHelpProject">
            <summary>The help project file is being generated.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildStep.CompilingHelpFile">
            <summary>The help file project is being compiled.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildStep.CopyingWebsiteFiles">
            <summary>The website files are being copied to the output path.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildStep.CleanIntermediates">
            <summary>The temporary help project files are being removed.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildStep.Completed">
            <summary>The build has completed successfully.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildStep.Canceled">
            <summary>The build was canceled by user request.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildStep.Failed">
            <summary>The build failed with an unexpected error.</summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.NamespaceSummaryItemCollection">
            <summary>
            This collection class is used to hold the namespace summary items
            for a project.
            </summary>
            <remarks>Namespaces that appear in the assemblies but not in this
            list are documented by default and will appear without a namespace
            summary.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.NamespaceSummaryItemCollection.WriteXml(System.Xml.XmlTextWriter)">
            <summary>
            This is used to save the namespace summary item list to the project
            file.
            </summary>
            <param name="xw">The XML text writer to which the information
            is written.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.NamespaceSummaryItemCollection.ReadXml(System.Xml.XmlTextReader,System.Version)">
            <summary>
            This is used to load the namespace summary item list from the
            project file.
            </summary>
            <param name="xr">The XML text reader from which the information
            is loaded.</param>
            <param name="schemaVersion">The schema version</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.NamespaceSummaryItemCollection.Contains(System.String)">
            <summary>
            This is used to see if the collection contains an entry for the
            specified namespace.
            </summary>
            <param name="name">The namespace for which to search</param>
            <returns>True if found, false if not</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.NamespaceSummaryItemCollection.IsDocumented(System.String)">
            <summary>
            This is used to see if the collection contains an entry for the
            specified namespace and returns whether or not it is documented.
            </summary>
            <param name="name">The namespace for which to search</param>
            <returns>True if found and it is to be documented or if not found,
            false if found and it is not to be documented.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.NamespaceSummaryItemCollection.Sort">
            <summary>
            This is used to sort the namespace items by name
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.NamespaceSummaryItemCollection.HasDefinitions">
            <summary>
            This read-only property returns true if the collection has
            summary items with summary text or items marked as not to be
            documented.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.NamespaceSummaryItemCollection.Item(System.String)">
            <summary>
            Indexer.  This can be used to retrieve the summary information
            for the specified namespace.
            </summary>
            <param name="name">The namespace for which to search</param>
            <returns>The namespace summary information if found or null if
            not found.</returns>
        </member>
        <member name="T:SandcastleBuilder.Utils.DocumentAssemblyCollection">
            <summary>
            This collection class is used to hold the documentation assembly
            information.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.DocumentAssemblyCollection.WriteXml(System.Xml.XmlTextWriter)">
            <summary>
            This is used to save the document assembly list to the project
            file.
            </summary>
            <param name="xw">The XML text writer to which the information
            is written.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.DocumentAssemblyCollection.ReadXml(System.Xml.XmlTextReader,System.Version)">
            <summary>
            This is used to load the document assembly list from the project
            file.
            </summary>
            <param name="xr">The XML text reader from which the information
            is loaded.</param>
            <param name="schemaVersion">The schema version</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.DocumentAssemblyCollection.CommentFileList(System.String)">
            <summary>
            Returns a list of the comment file paths in a format suitable
            for inserting into a Sandcastle Configuration file.
            </summary>
            <param name="workingFolder">The working folder path</param>
            <returns>The comment file list XML tags</returns>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.PreviewTocDlg">
            <summary>
            This form is used to preview the table of content based on the
            currently defined set of additional content items.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.PreviewTocDlg.#ctor(SandcastleBuilder.Utils.SandcastleProject)">
            <summary>
            Constructor
            </summary>
            <param name="project">The temporary project from which to get
            the additional content items</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.PreviewTocDlg.LoadTree">
            <summary>
            Load the tree view with the table of content nodes
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.PreviewTocDlg.AddChildren(SandcastleBuilder.Utils.TocEntryCollection,System.Windows.Forms.TreeNode)">
            <summary>
            Add a root node and its children to the tree view recursively
            </summary>
            <param name="children">The collection of entries to add</param>
            <param name="root">The root to which they are added</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.PreviewTocDlg.UpdateTocEntry(System.Windows.Forms.TreeNode,System.Int32)">
            <summary>
            Update the file related to the specified tree node with its new
            sort order and/or default topic indicator.
            </summary>
            <param name="tn">The tree node containing the TOC entry</param>
            <param name="sortOrder">The new sort order</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.PreviewTocDlg.UpdateChildNodes(System.Windows.Forms.TreeNodeCollection)">
            <summary>
            Update the files related to the children of a tree node
            </summary>
            <param name="children">The children to update</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.PreviewTocDlg.btnClose_Click(System.Object,System.EventArgs)">
            <summary>
            Close the form.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.PreviewTocDlg.tvTOC_AfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            Update the state of the move up/down buttons based on the
            current selection
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.PreviewTocDlg.btnDefaultTopic_Click(System.Object,System.EventArgs)">
            <summary>
            Set the selected node as the default topic
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The sender of the event</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.PreviewTocDlg.btnMoveNode_Click(System.Object,System.EventArgs)">
            <summary>
            Move the selected node up or down within the group
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The sender of the event</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.PreviewTocDlg.btnSave_Click(System.Object,System.EventArgs)">
            <summary>
            Save changes to the default topic and order by adding or
            removing the comment tags in the files.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The sender of the event</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.PreviewTocDlg.PreviewTocDlg_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            Ask to save changes if modifications were made
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:SandcastleBuilder.Utils.Design.PreviewTocDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.PreviewTocDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.PreviewTocDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.ContentItemEditorDlg">
            <summary>
            This form is used to edit the additional content item collection
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.Design.ContentItemEditorDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ContentItemEditorDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ContentItemEditorDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ContentItemEditorDlg.#ctor(SandcastleBuilder.Utils.ContentItemCollection)">
            <summary>
            Constructor
            </summary>
            <param name="contentItems">The item collection to edit</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ContentItemEditorDlg.btnClose_Click(System.Object,System.EventArgs)">
            <summary>
            Refresh the collection and close the form
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ContentItemEditorDlg.lbContentItems_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Set the current item as the property grid's object when the
            selection changes.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ContentItemEditorDlg.pgProps_PropertyValueChanged(System.Object,System.Windows.Forms.PropertyValueChangedEventArgs)">
            <summary>
            Refresh the list box item when a property changes
            </summary>
            <param name="s">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ContentItemEditorDlg.btnAddFolder_Click(System.Object,System.EventArgs)">
            <summary>
            Add a new folder content item
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ContentItemEditorDlg.btnAddFile_Click(System.Object,System.EventArgs)">
            <summary>
            Add a new single file content item
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ContentItemEditorDlg.btnDelete_Click(System.Object,System.EventArgs)">
            <summary>
            Delete a content item
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ContentItemEditorDlg.btnPreviewTOC_Click(System.Object,System.EventArgs)">
            <summary>
            Preview the table of content based on the current settings
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="P:SandcastleBuilder.Utils.Design.ContentItemEditorDlg.ProjectPath">
            <summary>
            This is used to set or get the current project folder to use with
            the preview form so that it can resolve relative paths on
            additional content items.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.FolderPathObjectEditor">
            <summary>
            This is a type editor that can display a folder browser dialog to
            allow selection of a folder path at design time.
            </summary>
            <remarks>This can be used in conjunction with the
            <see cref="T:SandcastleBuilder.Utils.Design.FolderDialogAttribute"/> to specify the folder browser
            dialog's properties.</remarks>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.FolderPathStringEditor">
            <summary>
            This is a type editor that can display a folder browser dialog to
            allow selection of a folder path at design time.
            </summary>
            <remarks>This can be used in conjunction with the
            <see cref="T:SandcastleBuilder.Utils.Design.FolderDialogAttribute"/> to specify the folder browser
            dialog's properties.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FolderPathStringEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            This is overridden to edit the value using a folder browser dialog.
            </summary>
            <param name="context">The descriptor context</param>
            <param name="provider">The provider</param>
            <param name="value">The folder path as an object</param>
            <returns>The selected folder path as an object</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FolderPathStringEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            This is overridden to specify the editor's edit style
            </summary>
            <param name="context">The descriptor context</param>
            <returns>Always returns <b>Modal</b> as long as there is a context
            and an instance.  Otherwise, it returns <b>None</b>.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FolderPathObjectEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            This is overridden to edit the value using a folder browser dialog.
            </summary>
            <param name="context">The descriptor context</param>
            <param name="provider">The provider</param>
            <param name="value">The folder path as an object</param>
            <returns>The selected folder path as an object</returns>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.SelectGacEntriesDlg">
            <summary>
            This form is used to let the user select the GAC entries to add as
            dependencies for the project.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.SelectGacEntriesDlg.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.SelectGacEntriesDlg.SelectGacEntriesDlg_Activated(System.Object,System.EventArgs)">
            <summary>
            Load the GAC list when activated
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.Utils.Design.SelectGacEntriesDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.SelectGacEntriesDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.SelectGacEntriesDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Design.SelectGacEntriesDlg.SelectedEntries">
            <summary>
            This is used to return the list of selected dependencies
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.ContentItemEditor">
            <summary>
            This is a type editor that displays the
            <see cref="T:SandcastleBuilder.Utils.Design.ContentItemEditorDlg"/> to edit the additional content
            items for a project.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ContentItemEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            This is overridden to edit the value using the
            <see cref="T:SandcastleBuilder.Utils.Design.ContentItemEditorDlg"/> dialog.
            </summary>
            <param name="context">The descriptor context</param>
            <param name="provider">The provider</param>
            <param name="value">The content item collection as an object</param>
            <returns>The edited content item collection as an object</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ContentItemEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            This is overridden to specify the editor's edit style
            </summary>
            <param name="context">The descriptor context</param>
            <returns>Always returns <b>Modal</b> as long as there is a context
            and an instance.  Otherwise, it returns <b>None</b>.</returns>
        </member>
        <member name="T:SandcastleBuilder.Utils.Controls.DividerLabel">
            <summary>
            This is a simple derived label control that draws the label text
            followed by a dividing line to the right of the text.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.DividerLabel.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.DividerLabel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            This is overridden to draw the text and the dividing line
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.RefreshableItemListBox">
            <summary>
            This is a a simple derived list box in which you can refresh a
            specified item to show updates to the text displayed in the list box
            for the item.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.RefreshableItemListBox.Refresh(System.Int32)">
            <summary>
            Refresh the specified item in the list box
            </summary>
            <param name="index">The index of the item to refresh</param>
        </member>
        <member name="T:SandcastleBuilder.Utils.ContentItem">
            <summary>
            This represents a content item that can be added to the help file that
            is not part of the XML comments (i.e. additional HTML pages, images,
            replacement stylesheets, etc).
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.ContentItem.ShouldSerializeSourcePath">
            <summary>
            This is used to see if the <see cref="P:SandcastleBuilder.Utils.ContentItem.SourcePath"/> property
            should be serialized.
            </summary>
            <returns>True to serialize it, false if it matches the default
            and should not be serialized.  This property cannot be reset
            as it should always have a value.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.ContentItem.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.ContentItem.WriteXml(System.Xml.XmlTextWriter)">
            <summary>
            This is used to save the content item information to the
            project file.
            </summary>
            <param name="xw">The XML text writer to which the information
            is written.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.ContentItem.ReadXml(System.Xml.XmlTextReader,System.Version)">
            <summary>
            This is used to load the content item information from the
            project file.
            </summary>
            <param name="xr">The XML text reader from which the information
            is loaded.</param>
            <param name="schemaVersion">The schema version</param>
        </member>
        <member name="P:SandcastleBuilder.Utils.ContentItem.SourcePath">
            <summary>
            This is used to get or set the source path to the additional
            content.
            </summary>
            <value>This can be a reference to a single file or a wildcard
            to include multiple files.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.ContentItem.DestinationPath">
            <summary>
            This is used to get or set the destination path for the content
            files (their relative location within the help file).
            </summary>
            <value>This should always be a relative path.  If not specified,
            the content will be placed in the root of the help project build
            folder.  If specified, the folder will be relative to the help
            project build folder.  Also, if set to a non-empty path,
            <see cref="P:SandcastleBuilder.Utils.ContentItem.ExcludeItems"/> is automatically set to false.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.ContentItem.ExcludeItems">
            <summary>
            This is used to get or set whether or not to exclude rather than
            include items in the specified source path.
            </summary>
            <value>If false (the default), files will be copied to the
            destination folder.  If set to true, files and folders matching
            the <see cref="P:SandcastleBuilder.Utils.ContentItem.SourcePath"/> wildcard will be ignored and are not
            copied.  The <see cref="P:SandcastleBuilder.Utils.ContentItem.DestinationPath"/> property is ignored.
            When set to true, <see cref="P:SandcastleBuilder.Utils.ContentItem.DestinationPath"/> is automatically
            cleared.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.ContentItem.ListDescription">
            <summary>
            This returns a description of the entry suitable for display in a
            bound list control.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.Gac.ASM_CACHE_FLAGS">
            <summary>
            This defines the different cache types that can be used
            </summary>
            <exclude/>
        </member>
        <member name="T:SandcastleBuilder.Utils.Gac.ASM_DISPLAY_FLAGS">
            <summary>
            This defines the items that GetDisplayName returns
            </summary>
            <exclude/>
        </member>
        <member name="T:SandcastleBuilder.Utils.Gac.ASM_CMP_FLAGS">
            <summary>
            This defines the parts to use when comparing assembly information
            </summary>
            <exclude/>
        </member>
        <member name="T:SandcastleBuilder.Utils.Gac.ASM_NAME">
            <summary>
            This defines the various ID values used for assembly properties
            </summary>
            <exclude/>
        </member>
        <member name="T:SandcastleBuilder.Utils.Gac.IAssemblyName">
            <summary>
            This is used to represent an assembly name
            </summary>
            <exclude/>
        </member>
        <member name="T:SandcastleBuilder.Utils.Gac.IAssemblyEnum">
            <summary>
            This is used to enumerate the assemblies in the GAC
            </summary>
            <exclude/>
        </member>
        <member name="T:SandcastleBuilder.Utils.Gac.NativeMethods">
            <summary>
            This defines the one and only method we need in the help file builder
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Gac.NativeMethods.#ctor">
            <summary>
            Private constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Gac.NativeMethods.CreateAssemblyEnum(SandcastleBuilder.Utils.Gac.IAssemblyEnum@,System.IntPtr,SandcastleBuilder.Utils.Gac.IAssemblyName,SandcastleBuilder.Utils.Gac.ASM_CACHE_FLAGS,System.IntPtr)">
            <summary>
            This is used to obtain an instance of the assembly enumerator
            </summary>
            <param name="ppEnum">A reference that will end up containing the
            IAssemblyEnum interface.</param>
            <param name="pUnkReserved">Reserved.  Must always be null.</param>
            <param name="pName">An assembly name that is used to filter the
            enumeration.  This can be null to enumerate all assemblies in the
            GAC.</param>
            <param name="dwFlags">Specify one (and only one) ASM_CACHE_FLAGS
            value.</param>
            <param name="pvReserved">Reserved.  Must always be null.</param>
        </member>
        <member name="T:SandcastleBuilder.Utils.FileFolderGacPath">
            <summary>
            This class is used to represent a folder path.  Support is included for
            treating the path as fixed or relative and for expanding environment
            variables in the path name.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.FileFolderGacPath.ShouldSerializePath">
            <summary>
            This is used to prevent the Path property from showing as modified
            in the designer.
            </summary>
            <returns>Always returns false</returns>
            <remarks>The <see cref="P:SandcastleBuilder.Utils.FileFolderGacPath.Path"/> property is mainly for display
            purposes in the designer but can be used for making changes to
            the expanded path if needed.  The <see cref="P:SandcastleBuilder.Utils.FilePath.PersistablePath"/>
            property is used as the display value in the designer.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.FileFolderGacPath.#ctor">
            <summary>
            Default constructor.  The folder path is undefined.
            </summary>
            <overloads>There are three overloads for the constructor.</overloads>
        </member>
        <member name="M:SandcastleBuilder.Utils.FileFolderGacPath.#ctor(System.String)">
            <summary>
            Constructor.  Assign the specified path.
            </summary>
            <param name="path">A relative or absolute path.</param>
            <remarks>Unless <see cref="P:SandcastleBuilder.Utils.FilePath.IsFixedPath"/> is set to true,
            the path is always treated as a relative path.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.FileFolderGacPath.#ctor(System.String,System.Boolean)">
            <summary>
            Constructor.  Assign the specified path and fixed setting.
            </summary>
            <param name="path">A relative or absolute path.</param>
            <param name="isFixed">True to treat the path as fixed, false
            to treat it as a relative path.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.FileFolderGacPath.ToString">
            <summary>
            Convert the file path to a string
            </summary>
            <returns>A fixed, relative, or GAC path based on the current
            settings.</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.FileFolderGacPath.Path">
            <summary>
            This is used to get or set the file, folder, or GAC path.
            </summary>
            <value>When set, if the path is not rooted (a relative path),
            <see cref="P:SandcastleBuilder.Utils.FilePath.IsFixedPath"/> is set to false.  If rooted (an
            absolute path), it is not changed.  This property always returns a
            fully qualified path but without any environment variable
            expansions and terminated with a trailing backslash if needed.
            <p/>If set to a null or empty string, the folder path is cleared
            and is considered to be undefined.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.FileFolderGacPath.PersistablePath">
            <summary>
            This is used to retrieve the file path in a format suitable for
            persisting to storage based on the current settings.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.FileFolderGacPath.Exists">
            <summary>
            This read-only property can be used to determine whether or not
            the folder path exists.
            </summary>
            <value>This has no meaning for a GAC path.</value>
        </member>
        <member name="T:SandcastleBuilder.Utils.MissingTags">
            <summary>
            This public enumerated type defines the missing documentation tags for
            which to search.
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.MissingTags.None">
            <summary>Do not search for any missing tags.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.MissingTags.Summary">
            <summary>Search for missing &lt;summary&gt; tags.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.MissingTags.Parameter">
            <summary>Search for missing &lt;param&gt; tags.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.MissingTags.Returns">
            <summary>Search for missing &lt;returns&gt; tags.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.MissingTags.Value">
            <summary>Search for missing &lt;value&gt; tags.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.MissingTags.Remarks">
            <summary>Search for missing &lt;remarks&gt; tags.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.MissingTags.AutoDocumentCtors">
            <summary>Automatically document constructors if they are missing a
            &lt;summary&gt; tag.</summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.FilePathTypeConverter">
            <summary>
            This type converter is used to convert a FilePath object to and from
            a string so that it can be edited in a
            <see cref="T:System.Windows.Forms.PropertyGrid"/>.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FilePathTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Convert the specified object to the specified type
            </summary>
            <param name="context">A formatter context</param>
            <param name="culture">Culture-specific information</param>
            <param name="value">The object to convert</param>
            <param name="destinationType">The type to which to convert</param>
            <returns>The converted object</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FilePathTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            This returns whether this converter can convert an object of the
            given type to a <see cref="T:SandcastleBuilder.Utils.FilePath"/> object using the specified
            context.
            </summary>
            <param name="context">A formatter context</param>
            <param name="sourceType">The type from which to convert</param>
            <returns>True if the conversion can be performed or false if not.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FilePathTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            This converts the given object to a <see cref="T:SandcastleBuilder.Utils.FilePath"/>
            object using the specified context and culture information.
            </summary>
            <param name="context">A formatter context</param>
            <param name="culture">Culture-specific information</param>
            <param name="value">The object to convert</param>
        </member>
        <member name="T:SandcastleBuilder.Utils.XmlCommentsFileCollection">
            <summary>
            This collection class is used to hold the XML comments files
            during the build process.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.XmlCommentsFileCollection.Save">
            <summary>
            Save the comments files
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.XmlCommentsFileCollection.FindMember(System.String)">
            <summary>
            Search all comments files for the specified member.  If not found,
            add the blank member to the first file.
            </summary>
            <param name="memberName">The member name for which to search.</param>
            <returns>The XML node of the found or added member</returns>
        </member>
        <member name="T:SandcastleBuilder.Utils.TocEntryCollection">
            <summary>
            This collection class is used to hold the table of content entries for
            additional content items.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.TocEntryCollection.Sort">
            <summary>
            This is used to sort the collection
            </summary>
            <remarks>All top level items and their children are sorted</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.TocEntryCollection.ToString">
            <summary>
            Convert the table of content entry and its children to a string
            </summary>
            <returns>The entries in HTML 1.x help format</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.TocEntryCollection.ToString(SandcastleBuilder.Utils.HelpFileFormat)">
            <summary>
            Convert the table of content entry and its children to a string
            in the specified help file format.
            </summary>
            <param name="format">The help file format to use</param>
            <returns>The entries in specified help format</returns>
            <exception cref="T:System.ArgumentException">This is thrown if the
            format is not <b>HtmlHelp1x</b> or <b>HtmlHelp2x</b>.</exception>
        </member>
        <member name="M:SandcastleBuilder.Utils.TocEntryCollection.ConvertToString(SandcastleBuilder.Utils.HelpFileFormat,System.Text.StringBuilder)">
            <summary>
            This is used to convert the collection to a string and append it
            to the specified string builder.
            </summary>
            <param name="format">The help file format to use</param>
            <param name="sb">The string builder to which the information is
            appended.</param>
        </member>
        <member name="T:SandcastleBuilder.Utils.SandcastleProject">
            <summary>
            This class represents all of the properties that make up a Sandcastle
            Help File Builder project.
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.SandcastleProject.DefaultName">
            <summary>The default filename for a new project</summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.OnDirtyChanged(System.EventArgs)">
            <summary>
            This raises the <see cref="E:SandcastleBuilder.Utils.SandcastleProject.DirtyChanged"/> event.
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.OnAssembliesChanged(System.EventArgs)">
            <summary>
            This raises the <see cref="E:SandcastleBuilder.Utils.SandcastleProject.AssembliesChanged"/> event.
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.ShouldSerializeFrameworkVersion">
            <summary>
            This is used to see if the <see cref="P:SandcastleBuilder.Utils.SandcastleProject.FrameworkVersion"/> property
            should be serialized.
            </summary>
            <returns>True to serialize it, false if it matches the default
            and should not be serialized.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.ResetFrameworkVersion">
            <summary>
            This is used to reset the <see cref="P:SandcastleBuilder.Utils.SandcastleProject.FrameworkVersion"/> property
            to its default value.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.ShouldSerializePresentationStyle">
            <summary>
            This is used to see if the <see cref="P:SandcastleBuilder.Utils.SandcastleProject.PresentationStyle"/> property
            should be serialized.
            </summary>
            <returns>True to serialize it, false if it matches the default
            and should not be serialized.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.ResetPresentationStyle">
            <summary>
            This is used to reset the <see cref="P:SandcastleBuilder.Utils.SandcastleProject.FrameworkVersion"/> property
            to its default value.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.ShouldSerializeAdditionalContent">
            <summary>
            This is used to see if the <see cref="P:SandcastleBuilder.Utils.SandcastleProject.AdditionalContent"/> property
            should be serialized.
            </summary>
            <returns>True to serialize it, false if it matches the default
            and should not be serialized.</returns>
            <remarks>We do not allow resetting this property as it is a
            collection and we don't want to lose all items accidentally.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.ShouldSerializeDependencies">
            <summary>
            This is used to see if the <see cref="P:SandcastleBuilder.Utils.SandcastleProject.Dependencies"/> property
            should be serialized.
            </summary>
            <returns>True to serialize it, false if it matches the default
            and should not be serialized.</returns>
            <remarks>We do not allow resetting this property as it is a
            collection and we don't want to lose all items accidentally.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.ShouldSerializeComponentConfigurations">
            <summary>
            This is used to see if the <see cref="P:SandcastleBuilder.Utils.SandcastleProject.ComponentConfigurations"/>
            property should be serialized.
            </summary>
            <returns>True to serialize it, false if it matches the default
            and should not be serialized.</returns>
            <remarks>We do not allow resetting this property as it is a
            dictionary and we don't want to lose all items accidentally.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.assemblies_ListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
            <summary>
            This is handled to mark the project as dirty when the list of
            assemblies changes.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event parameters</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.ItemList_ListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
            <summary>
            This is handled to mark the project as dirty when the list of
            additional content or dependencies changes.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event parameters</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.OnCharacterMatch(System.Text.RegularExpressions.Match)">
            <summary>
            Replace a \xNN value in the copyright text with its actual
            character.
            </summary>
            <param name="match">The match that was found</param>
            <returns>The string to use as the replacement</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.WriteProperty(System.Xml.XmlTextWriter,System.Reflection.PropertyInfo)">
            <summary>
            This is called to write a property to the project file if it
            is persistable.
            </summary>
            <param name="xw">The XML text writer to which it is written</param>
            <param name="property">The property to persist</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.ResetProject">
            <summary>
            This is used to reset the project to its default state
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.SaveProject">
            <summary>
            This is used to save the project file
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.LoadProject(System.String)">
            <summary>
            This is used to load a project file
            </summary>
            <param name="projectFile">The project file to load</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.SetProperty(System.String,System.String)">
            <summary>
            This is used to set the named property to the specified value
            using Reflection.
            </summary>
            <param name="name">The name of the property to set</param>
            <param name="value">The value to which it is set</param>
            <remarks>Property name matching is case insensitive as are the
            values themselves.  This is used to allow setting of simple project
            properties (non-collection) using command line parameters in the
            console mode builder.</remarks>
            <exception cref="T:System.ArgumentNullException">This is thrown if the
            name parameter is null or an empty string.</exception>
            <exception cref="T:SandcastleBuilder.Utils.BuilderException">This is thrown if an error
            occurs while trying to set the named property.</exception>
            <returns>The parsed object value to which the property was set.</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.Filename">
            <summary>
            This is used to set or get the filename for the project
            </summary>
            <remarks>If set to null or an empty string, it defaults to
            <b>Unnamed.shfb</b>.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.IsDirty">
            <summary>
            This is used to set or get the dirty state of the project
            </summary>
            <remarks>If dirty, the project needs to be saved</remarks>
            <event cref="E:SandcastleBuilder.Utils.SandcastleProject.DirtyChanged">This event is raised to let interested
            parties know that the project's dirty state has been changed.</event>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.ProjectSummary">
            <summary>
            This is used to set or get the project summary comments
            </summary>
            <remarks>These notes will appear in the root namespaces page if
            entered.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.Assemblies">
            <summary>
            Returns the list of assemblies to document
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.NamespaceSummaries">
            <summary>
            Returns the list of namespace summaries
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.DecodedCopyrightText">
            <summary>
            This is used to get the copyright notice that appears in the footer
            of each page with any hex value place holders replaced with their
            actual character.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.MissingTags">
            <summary>
            This read-only helper property returns the flags to use when
            looking for missing tags.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.VisibleItems">
            <summary>
            This read-only helper property returns the flags used to indicate
            which optional items to document.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.HtmlHelp1xCompilerPath">
            <summary>
            This is used to set or get the path to the HTML 1.x help compiler
            (HHC.EXE).
            </summary>
            <value>You only need to set this if the builder cannot determine
            the path for itself.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.HtmlHelp2xCompilerPath">
            <summary>
            This is used to set or get the path to the HTML 2.x help compiler
            (HXCOMP.EXE).
            </summary>
            <value>You only need to set this if the builder cannot determine
            the path for itself.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.OutputPath">
            <summary>
            This is used to set or get the path to which the help files
            will be generated.
            </summary>
            <remarks>The default is to create it in a folder called
            <b>Help</b> in the same folder as the project file.
            <p/><b>Warning:</b> If building a web site, the output folder's
            prior content will be erased without warning prior to copying
            the new web site content to it!</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.SandcastlePath">
            <summary>
            This is used to set or get the path to the Sandcastle components
            </summary>
            <value>You only need to set this if the builder cannot determine
            the path for itself.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.WorkingPath">
            <summary>
            This is used to set or get the path to the working folder used
            during the build process to store the intermediate files.
            </summary>
            <value>This can be used to perform the build in a different
            location with a shorter path if you encounter errors due to long
            file path names.  If not specified, it defaults to a folder
            called <b>.\Working</b> under the folder specified by the
            <see cref="P:SandcastleBuilder.Utils.SandcastleProject.OutputPath"/> property.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.CleanIntermediates">
            <summary>
            This is used to set or get whether intermediate files are
            deleted after a successful build.
            </summary>
            <value>The default value is true.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.HelpFileFormat">
            <summary>
            This is used to set or get the help file format generated by the
            build process.
            </summary>
            <value>The default is to produce an HTML Help 1.x format file
            built using HHC.exe.</value>
            <remarks>If building a web site, the output folder will be cleared
            before the new content is copied to it.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.PurgeDuplicateTopics">
            <summary>
            This is used to set or get whether duplicate topics are purged from
            the reflection information file generated by <b>MRefBuilder</b>.
            </summary>
            <value>The default value is true.</value>
            <remarks>When generating documentation into one help file for
            multiple assemblies that contain one or more common classes
            compiled into each of them, duplicate entries occur in the table
            of content for the common classes.  Duplicate entries also appear
            in the namespace help page for each namespace associated with the
            common classes.
            <p/>To fix this problem for now, the builder will remove any
            duplicate topics it finds in the reflection information file when
            this property is set to true.  Set it to false if you think it may
            be causing problems.  Otherwise, leave it set to true.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.CppCommentsFixup">
            <summary>
            This is used to set or get whether to fix-up the XML comments files
            to work around an issue with those generated by the C++ compiler.
            </summary>
            <value>The default value is false.</value>
            <remarks>The C++ compiler generates method signatures that differ
            from the other .NET compilers for methods that take generics as
            parameters.  These methods fail to get documented as they do not
            match the output of <b>MRefBuilder</b>.  The C# and VB.NET
            compilers generate names that do match it and this option is not
            needed for comments files generated by them.  Set this to true if
            the project contains C++ compiler generated XML comments files and
            your project contains methods that take generic types for
            parameters.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.Dependencies">
            <summary>
            This is used to get a collection of dependencies (individual files
            or wildcards) for MRefBuilder if needed.
            </summary>
            <remarks>If you have several dependencies, you may want to copy them
            to a folder and specify the reference to it with a wildcard to get
            all of the files in the folder (i.e. .\Deps\*.dll).</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.ComponentConfigurations">
            <summary>
            This is used to get a dictionary of build component configurations.
            </summary>
            <remarks>This allows you to configure the settings for third
            party build components if they support it.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.FrameworkVersion">
            <summary>
            This is used to set or get the .NET Framework version to which the
            documentation links for system types should point.
            </summary>
            <remarks>If not found, it will default to the most recent version
            of the framework installed.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.BinaryTOC">
            <summary>
            This is used to set or get the path to the Sandcastle components
            </summary>
            <remarks>This can significantly reduce the amount of time
            required to load a very large help document.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.IncludeFavorites">
            <summary>
            This is used to set or get whether or not a Favorites tab will
            appear in the help file.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.Preliminary">
            <summary>
            This is used to set or get whether or not all pages should be
            marked with a "preliminary documentation" warning in the page
            header.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.RootNamespaceContainer">
            <summary>
            This is used to set or get whether or not a root namespace entry
            is added to the table of content to act as a container for the
            namespaces from the documented assemblies.
            </summary>
            <value>If true, a root <b>Namespaces</b> table of content entry
            will be created as the container of the namespaces in the
            documented assemblies.  If false, the default, the namespaces are
            listed in the table of content as root entries.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.RootNamespaceTitle">
            <summary>
            This is used to set or get an alternate title for the root
            namespaces page and the root table of content container that
            appears when <see cref="P:SandcastleBuilder.Utils.SandcastleProject.RootNamespaceContainer"/> is set to true.
            </summary>
            <value>If left blank (the default), the localized version of the
            text "Namespaces" will be used.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.HelpTitle">
            <summary>
            This is used to set or get the help file's title
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.HtmlHelpName">
            <summary>
            This is used to set or get the name of the compiled help file.
            Do not include a path or the extension.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.Language">
            <summary>
            This is used to set or get the language option for the help file
            and to determine which set of presentation resource files to use.
            </summary>
            <value>If a matching set of presentation resources cannot be
            found for the specified language, the US English set will be
            used.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.CopyrightHref">
            <summary>
            This is used to set or get the URL to use as the link for the
            copyright notice.
            </summary>
            <value>If not set, the see cref="CopyrighText"/> (if any) is not
            turned into a clickable link.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.CopyrightText">
            <summary>
            This is used to set or get the copyright notice that appears in
            the footer of each page.
            </summary>
            <remarks>If not set, no copyright note will appear.  If a
            <see cref="P:SandcastleBuilder.Utils.SandcastleProject.CopyrightHref"/> is specified without copyright text,
            the URL appears instead.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.FeedbackEMailAddress">
            <summary>
            This is used to set or get the feedback e-mail address that
            appears in the footer of each page.
            </summary>
            <remarks>If not set, no feedback link will appear.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.HeaderText">
            <summary>
            This is used to set or get additional text that should appear
            in the header of every page.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.FooterText">
            <summary>
            This is used to set or get additional text that should appear
            in the footer of every page.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.ProjectLinkType">
            <summary>
            This is used to set or get the type of links used to reference
            other help topics referring to items within the documented
            assemblies.
            </summary>
            <value>The default is to produce local links.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.SdkLinkType">
            <summary>
            This is used to set or get the type of links used to reference
            other help topics referring to framework (SDK) help topics.
            </summary>
            <value>The default is to produce MSDN links.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.PresentationStyle">
            <summary>
            This is used to set or get the presentation style for the help
            topic pages.
            </summary>
            <value>The default is to use the Prototype style.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.NamingMethod">
            <summary>
            This is used to set or get the naming method used to generate the
            help topic filenames.
            </summary>
            <value>The default is to use GUID values as the filenames.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.SyntaxFilters">
            <summary>
            This is used to set or get the language filters which determines
            which languages appear in the <b>Syntax</b> section of the help
            topics.
            </summary>
            <value>The default is <b>Standard</b> (C#, VB.NET, and C++).</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.AdditionalContent">
            <summary>
            This is used to get the additional content collection.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.ContentPlacement">
            <summary>
            This is used to set or get the placement of any additional
            content items in the table of content.
            </summary>
            <value>The default is to place additional content items above
            the namespaces.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.ShowMissingSummaries">
            <summary>
            This is used to get or set whether or not missing &lt;summary&gt;
            tags are indicated in the help file.
            </summary>
            <value>Set this to true to add a message to the help topic
            to indicate that the &lt;summary&gt; tag is missing.  A message
            is also written to the log file.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.ShowMissingParams">
            <summary>
            This is used to get or set whether or not missing &lt;param&gt;
            tags are indicated in the help file.
            </summary>
            <value>Set this to true to add a message to the help topic
            to indicate that a &lt;param&gt; tag is missing.  A message
            is also written to the log file.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.ShowMissingReturns">
            <summary>
            This is used to get or set whether or not missing &lt;returns&gt;
            tags are indicated in the help file.
            </summary>
            <value>Set this to true to add a message to the help topic
            to indicate that the &lt;returns&gt; tag is missing.  A message
            is also written to the log file.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.ShowMissingValues">
            <summary>
            This is used to get or set whether or not missing &lt;value&gt;
            tags are indicated in the help file.
            </summary>
            <value>Set this to true to add a message to the help topic
            to indicate that the &lt;value&gt; tag is missing.  A message
            is also written to the log file.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.ShowMissingRemarks">
            <summary>
            This is used to get or set whether or not missing &lt;remarks&gt;
            tags are indicated in the help file.
            </summary>
            <value>Set this to true to add a message to the help topic
            to indicate that the &lt;remarks&gt; tag is missing.  A message
            is also written to the log file.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.AutoDocumentConstructors">
            <summary>
            This is used to get or set whether or not constructors are
            automatically documented if they are missing the &lt;summary&gt;
            tag and for classes with compiler generated constructors.
            </summary>
            <value>Set this to true to automatically add default text for the
            &lt;summary&gt; tag on constructors that are missing it and for
            classes with a compiler generated constructor.  If set to false
            and <see cref="P:SandcastleBuilder.Utils.SandcastleProject.ShowMissingSummaries"/> is true, a "missing summary"
            warning will appear instead.  A message is also written to the log
            file.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.DocumentAttributes">
            <summary>
            This is used to get or set whether or not attributes on types and
            members are documented in the syntax portion of the help file.
            </summary>
            <value>Set to true to document attributes or false to hide them</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.DocumentExplicitInterfaceImplementations">
            <summary>
            This is used to get or set whether or not explicit interface
            implementations are documented.
            </summary>
            <value>Set to true to document explicit interface implementations
            or false to hide them.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.DocumentInheritedMembers">
            <summary>
            This is used to get or set whether or not inherited members
            are documented.
            </summary>
            <value>Set to true to document inherited members or false to
            hide them.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.DocumentInheritedFrameworkMembers">
            <summary>
            This is used to get or set whether or not inherited framework
            members are documented.
            </summary>
            <value>Set to true to document inherited framework members or
            false to hide them.  For this to work,
            <see cref="P:SandcastleBuilder.Utils.SandcastleProject.DocumentInheritedMembers"/> must also be enabled.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.DocumentInternals">
            <summary>
            This is used to get or set whether or not internal members are
            documented in the help file.
            </summary>
            <value>Set to true to document internal members or false to hide
            them</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.DocumentPrivates">
            <summary>
            This is used to get or set whether or not private members are
            documented in the help file.
            </summary>
            <value>Set to true to document private members or false to hide
            them</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.DocumentPrivateFields">
            <summary>
            This is used to get or set whether or not private fields are
            documented in the help file.
            </summary>
            <value>Set to true to document private fields or false to hide
            them.  For this to work, <see cref="P:SandcastleBuilder.Utils.SandcastleProject.DocumentPrivates"/> must
            also be enabled.</value>
            <remarks>Private fields are most often used to back properties
            and do not have documentation.  With this set to false, they
            are omitted from the help file to reduce unnecessary clutter.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.DocumentProtected">
            <summary>
            This is used to get or set whether or not protected members are
            documented in the help file.
            </summary>
            <value>Set to true to document protected members or false to hide
            them</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.DocumentProtectedInternalAsProtected">
            <summary>
            This is used to get or set whether or not "protected internal"
            members are documented as "protected" only in the help file.
            </summary>
            <value>Set to true to document "protected internal" members
            as "protected" only or false to document them normally.  This
            option is ignored if <see cref="P:SandcastleBuilder.Utils.SandcastleProject.DocumentProtected"/> is false.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.DocumentSealedProtected">
            <summary>
            This is used to get or set whether or not protected members of
            sealed classes are documented in the help file.
            </summary>
            <value>Set to true to document protected members of sealed classes
            or false to hide them. For this to work,
            <see cref="P:SandcastleBuilder.Utils.SandcastleProject.DocumentProtected"/> must also be enabled.</value>
        </member>
        <member name="E:SandcastleBuilder.Utils.SandcastleProject.DirtyChanged">
            <summary>
            This event is raised when the dirty property changes
            </summary>
        </member>
        <member name="E:SandcastleBuilder.Utils.SandcastleProject.AssembliesChanged">
            <summary>
            This event is raised when the assembly list is modified
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.FileDialogType">
            <summary>
            The type of file dialog to display
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.Design.FileDialogType.FileOpen">
            <summary>Display a File Open dialog box</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.Design.FileDialogType.FileSave">
            <summary>Display a File Save dialog box</summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.FileDialogAttribute">
            <summary>
            This attribute is used to associate file dialog parameters with a
            class property for use in editing it in a property grid.
            </summary>
            <seealso cref="T:SandcastleBuilder.Utils.Design.FilePathStringEditor"/>
            <seealso cref="T:SandcastleBuilder.Utils.Design.FilePathObjectEditor"/>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FileDialogAttribute.#ctor(System.String,System.String,SandcastleBuilder.Utils.Design.FileDialogType)">
            <summary>
            Constructor
            </summary>
            <param name="title">The title for the file dialog</param>
            <param name="filter">The filter to use for the file dialog</param>
            <param name="dialogType">The type of file dialog to display</param>
            <overloads>There are two overloads for the constructor.</overloads>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FileDialogAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="title">The title for the file dialog</param>
            <remarks>The filter defaults to "All Files (*.*)|*.*" and
            the dialog type defaults to <b>FileOpen</b></remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.Design.FileDialogAttribute.Title">
            <summary>
            This is used to get the file dialog title
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Design.FileDialogAttribute.Filter">
            <summary>
            This is used to get the file dialog filter
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Design.FileDialogAttribute.DialogType">
            <summary>
            This is used to get the file dialog type
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.DependencyItem">
            <summary>
            This represents a dependency item that can be used by <b>MRefBuilder</b>
            to locate assembly dependencies for the assemblies being documented.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.DependencyItem.ShouldSerializeDependencyPath">
            <summary>
            This is used to see if the <see cref="P:SandcastleBuilder.Utils.DependencyItem.DependencyPath"/> property
            should be serialized.
            </summary>
            <returns>True to serialize it, false if it matches the default
            and should not be serialized.  This property cannot be reset
            as it should always have a value.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.DependencyItem.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.DependencyItem.WriteXml(System.Xml.XmlTextWriter)">
            <summary>
            This is used to save the dependency item information to the
            project file.
            </summary>
            <param name="xw">The XML text writer to which the information
            is written.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.DependencyItem.ReadXml(System.Xml.XmlTextReader,System.Version)">
            <summary>
            This is used to load the dependency item information from the
            project file.
            </summary>
            <param name="xr">The XML text reader from which the information
            is loaded.</param>
            <param name="schemaVersion">The schema version</param>
        </member>
        <member name="P:SandcastleBuilder.Utils.DependencyItem.DependencyPath">
            <summary>
            This is used to set or path to the dependency
            </summary>
            <value>This can be a reference to a single file, a wildcard to
            include multiple files, or a GAC full name prefixed with "GAC:".
            GAC entries are resolved to an actual assembly at build-time.
            </value>
        </member>
        <member name="T:SandcastleBuilder.Utils.SyntaxFilters">
            <summary>
            This public enumerated type defines the languages to include in the
            help topic <b>Syntax</b> section.
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.SyntaxFilters.None">
            <summary>Do not include the syntax section.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.SyntaxFilters.CSharp">
            <summary>Include C# syntax.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.SyntaxFilters.VisualBasic">
            <summary>Include VB.NET syntax.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.SyntaxFilters.CPlusPlus">
            <summary>Include C++ syntax.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.SyntaxFilters.JSharp">
            <summary>Include the J# syntax.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.SyntaxFilters.Standard">
            <summary>The standard set (C#, VB.NET, and C++).</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.SyntaxFilters.All">
            <summary>Include all languages.</summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.ComponentConfigurationEditor">
            <summary>
            This is a type editor that displays the
            <see cref="T:SandcastleBuilder.Utils.Design.ComponentConfigurationEditorDlg"/> to edit the build
            component configurations.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ComponentConfigurationEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            This is overridden to edit the value using the
            <see cref="T:SandcastleBuilder.Utils.Design.ComponentConfigurationEditorDlg"/> dialog.
            </summary>
            <param name="context">The descriptor context</param>
            <param name="provider">The provider</param>
            <param name="value">The component configuration dictionary as an
            object</param>
            <returns>The edited component configuration dictionary as an
            object</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ComponentConfigurationEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            This is overridden to specify the editor's edit style
            </summary>
            <param name="context">The descriptor context</param>
            <returns>Always returns <b>Modal</b> as long as there is a context
            and an instance.  Otherwise, it returns <b>None</b>.</returns>
        </member>
        <member name="T:SandcastleBuilder.Utils.XmlCommentsFile">
            <summary>
            This represents an XML comment file and is used when searching for and
            adding missing documentation tag information.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.XmlCommentsFile.comments_NodeChanged(System.Object,System.Xml.XmlNodeChangedEventArgs)">
            <summary>
            Mark the file as modified if a node is changed
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.XmlCommentsFile.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="filename">The XML comments filename</param>
            <exception cref="T:System.ArgumentNullException">This is thrown if the
            filename is null or an empty string.</exception>
        </member>
        <member name="M:SandcastleBuilder.Utils.XmlCommentsFile.Save">
            <summary>
            Save the comments file if it was modified
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.XmlCommentsFile.FixupComments">
            <summary>
            This is called to fixup the comments for C++ compiler generated
            XML comments files.
            </summary>
            <remarks>The C++ compiler generates method signatures that differ
            from the other .NET compilers for methods that take generics as
            parameters.  These methods fail to get documented as they do not
            match the output of <b>MRefBuilder</b>.  The C# and VB.NET
            compilers generate names that do match it and this option is not
            needed for comments files generated by them.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.XmlCommentsFile.SourcePath">
            <summary>
            This read-only property is used to get the source path of the file
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.XmlCommentsFile.Comments">
            <summary>
            This is used to load the comments file on first use
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.XmlCommentsFile.Members">
            <summary>
            This read-only property is used to get the root members node
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.HelpFileFormat">
            <summary>
            This public enumerated type defines the type(s) of help file generated
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.HelpFileFormat.HtmlHelp1x">
            <summary>HTML Help 1.x format built with HHC.EXE</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.HelpFileFormat.HtmlHelp2x">
            <summary>HTML Help 2.x format built with HXCOMP.EXE</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.HelpFileFormat.Website">
            <summary>A website with basic frame set viewer page</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.HelpFileFormat.Help1xAndHelp2x">
            <summary>An HTML Help 1.x and an HTML Help 2.x file</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.HelpFileFormat.Help1xAndWebsite">
            <summary>An HTML Help 1.x file and website</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.HelpFileFormat.Help2xAndWebsite">
            <summary>An HTML Help 2.x file and website</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.HelpFileFormat.Help1xAnd2xAndWebsite">
            <summary>An HTML Help 1.x file, HTML Help 2.x file, and a
            website</summary>
        </member>
    </members>
</doc>
