<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.DirectoryServices" version="2.0.0.0" culture="" key="002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293" hash="SHA1">
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.DirectoryServices.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.DirectoryServices.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.DirectoryServices.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.CompilationRelaxationsAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>8</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute" ref="true" />
          <assignment name="WrapNonExceptionThrows">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\RTM\Tools\devdiv\FinalPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Diagnostics.DebuggableAttribute" ref="true" />
          <argument>
            <type api="T:System.Diagnostics.DebuggableAttribute.DebuggingModes" ref="false">
              <type api="T:System.Diagnostics.DebuggableAttribute" ref="true" />
            </type>
            <enumValue>
              <field name="IgnoreSymbolStoreSequencePoints" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>2.0.50727.42</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>2.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>2.0.50727.42</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.FileIOPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="RequestMinimum" />
            </enumValue>
          </argument>
          <assignment name="AllFiles">
            <type api="T:System.Security.Permissions.FileIOPermissionAccess" ref="false" />
            <enumValue>
              <field name="PathDiscovery" />
            </enumValue>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="RequestMinimum" />
            </enumValue>
          </argument>
          <assignment name="UnmanagedCode">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="RequestMinimum" />
            </enumValue>
          </argument>
          <assignment name="SkipVerification">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.EnvironmentPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="RequestMinimum" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Net.DnsPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="RequestMinimum" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="R:Project">
      <apidata group="root" pseudo="true" />
      <elements>
        <element api="N:System.DirectoryServices" />
        <element api="N:System.DirectoryServices.ActiveDirectory" />
      </elements>
    </api>
    <api id="N:System.DirectoryServices">
      <apidata name="System.DirectoryServices" group="namespace" />
      <elements>
        <element api="T:System.DirectoryServices.ActiveDirectoryRights" />
        <element api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" />
        <element api="T:System.DirectoryServices.PropertyAccess" />
        <element api="T:System.DirectoryServices.ActiveDirectorySecurity" />
        <element api="T:System.DirectoryServices.ActiveDirectoryAccessRule" />
        <element api="T:System.DirectoryServices.ListChildrenAccessRule" />
        <element api="T:System.DirectoryServices.CreateChildAccessRule" />
        <element api="T:System.DirectoryServices.DeleteChildAccessRule" />
        <element api="T:System.DirectoryServices.PropertyAccessRule" />
        <element api="T:System.DirectoryServices.PropertySetAccessRule" />
        <element api="T:System.DirectoryServices.ExtendedRightAccessRule" />
        <element api="T:System.DirectoryServices.DeleteTreeAccessRule" />
        <element api="T:System.DirectoryServices.ActiveDirectoryAuditRule" />
        <element api="T:System.DirectoryServices.AuthenticationTypes" />
        <element api="T:System.DirectoryServices.DereferenceAlias" />
        <element api="T:System.DirectoryServices.DSDescriptionAttribute" />
        <element api="T:System.DirectoryServices.DirectoryEntries" />
        <element api="T:System.DirectoryServices.DirectoryEntry" />
        <element api="T:System.DirectoryServices.DirectoryEntryConfiguration" />
        <element api="T:System.DirectoryServices.DirectorySearcher" />
        <element api="T:System.DirectoryServices.DirectoryServicesPermission" />
        <element api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" />
        <element api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" />
        <element api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" />
        <element api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" />
        <element api="T:System.DirectoryServices.DirectorySynchronization" />
        <element api="T:System.DirectoryServices.DirectorySynchronizationOptions" />
        <element api="T:System.DirectoryServices.DirectoryVirtualListView" />
        <element api="T:System.DirectoryServices.DirectoryVirtualListViewContext" />
        <element api="T:System.DirectoryServices.ExtendedDN" />
        <element api="T:System.DirectoryServices.PasswordEncodingMethod" />
        <element api="T:System.DirectoryServices.PropertyCollection" />
        <element api="T:System.DirectoryServices.PropertyValueCollection" />
        <element api="T:System.DirectoryServices.ReferralChasingOption" />
        <element api="T:System.DirectoryServices.ResultPropertyCollection" />
        <element api="T:System.DirectoryServices.ResultPropertyValueCollection" />
        <element api="T:System.DirectoryServices.SchemaNameCollection" />
        <element api="T:System.DirectoryServices.SearchResult" />
        <element api="T:System.DirectoryServices.SearchResultCollection" />
        <element api="T:System.DirectoryServices.SearchScope" />
        <element api="T:System.DirectoryServices.SecurityMasks" />
        <element api="T:System.DirectoryServices.SortDirection" />
        <element api="T:System.DirectoryServices.SortOption" />
        <element api="T:System.DirectoryServices.DirectoryServicesCOMException" />
      </elements>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectoryAccessRule">
      <apidata name="ActiveDirectoryAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.DirectoryServices.ListChildrenAccessRule" ref="true" />
          <type api="T:System.DirectoryServices.CreateChildAccessRule" ref="true" />
          <type api="T:System.DirectoryServices.DeleteChildAccessRule" ref="true" />
          <type api="T:System.DirectoryServices.PropertyAccessRule" ref="true" />
          <type api="T:System.DirectoryServices.PropertySetAccessRule" ref="true" />
          <type api="T:System.DirectoryServices.ExtendedRightAccessRule" ref="true" />
          <type api="T:System.DirectoryServices.DeleteTreeAccessRule" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType">
          <apidata name="ObjectType" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Guid" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType">
          <apidata name="InheritedObjectType" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Guid" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags">
          <apidata name="ObjectFlags" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.AccessControl.ObjectAceFlags" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType">
          <apidata name="AccessControlType" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference">
          <apidata name="IdentityReference" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.Principal.IdentityReference" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.AccessMask">
          <apidata name="AccessMask" group="member" subgroup="property" />
          <memberdata visibility="family or assembly" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited">
          <apidata name="IsInherited" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags">
          <apidata name="InheritanceFlags" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.AccessControl.InheritanceFlags" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags">
          <apidata name="PropagationFlags" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.AccessControl.PropagationFlags" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="objectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="objectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="objectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights">
      <apidata name="ActiveDirectoryRights" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType">
      <apidata name="InheritanceType" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectoryAuditRule">
      <apidata name="ActiveDirectoryAuditRule" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.AccessControl.ObjectAuditRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuditRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAuditRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAuditRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.ObjectAuditRule.ObjectType">
          <apidata name="ObjectType" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Guid" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectAuditRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.ObjectAuditRule.InheritedObjectType">
          <apidata name="InheritedObjectType" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Guid" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectAuditRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.ObjectAuditRule.ObjectFlags">
          <apidata name="ObjectFlags" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.AccessControl.ObjectAceFlags" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectAuditRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuditRule.AuditFlags">
          <apidata name="AuditFlags" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuditRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference">
          <apidata name="IdentityReference" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.Principal.IdentityReference" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.AccessMask">
          <apidata name="AccessMask" group="member" subgroup="property" />
          <memberdata visibility="family or assembly" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited">
          <apidata name="IsInherited" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags">
          <apidata name="InheritanceFlags" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.AccessControl.InheritanceFlags" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags">
          <apidata name="PropagationFlags" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.AccessControl.PropagationFlags" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="auditFlags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="auditFlags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="auditFlags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="auditFlags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
        <parameter name="objectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="auditFlags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
        <parameter name="objectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="auditFlags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
        <parameter name="objectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectoryAuditRule.ActiveDirectoryRights">
      <apidata name="ActiveDirectoryRights" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectoryAuditRule.InheritanceType">
      <apidata name="InheritanceType" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectoryRights">
      <apidata name="ActiveDirectoryRights" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.Delete" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.ReadControl" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.WriteDacl" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.WriteOwner" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.Synchronize" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.AccessSystemSecurity" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.GenericRead" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.GenericWrite" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.GenericExecute" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.GenericAll" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.CreateChild" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.DeleteChild" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.ListChildren" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.Self" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.ReadProperty" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.WriteProperty" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.DeleteTree" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.ListObject" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.ExtendedRight" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.AccessSystemSecurity">
      <apidata name="AccessSystemSecurity" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.CreateChild">
      <apidata name="CreateChild" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.Delete">
      <apidata name="Delete" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.DeleteChild">
      <apidata name="DeleteChild" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.DeleteTree">
      <apidata name="DeleteTree" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.ExtendedRight">
      <apidata name="ExtendedRight" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.GenericAll">
      <apidata name="GenericAll" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.GenericExecute">
      <apidata name="GenericExecute" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.GenericRead">
      <apidata name="GenericRead" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.GenericWrite">
      <apidata name="GenericWrite" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.ListChildren">
      <apidata name="ListChildren" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.ListObject">
      <apidata name="ListObject" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.ReadControl">
      <apidata name="ReadControl" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.ReadProperty">
      <apidata name="ReadProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.Self">
      <apidata name="Self" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.Synchronize">
      <apidata name="Synchronize" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.WriteDacl">
      <apidata name="WriteDacl" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.WriteOwner">
      <apidata name="WriteOwner" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.WriteProperty">
      <apidata name="WriteProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectorySecurity">
      <apidata name="ActiveDirectorySecurity" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.AccessControl.DirectoryObjectSecurity" ref="true" />
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.#ctor" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)">
          <apidata name="AddAccessRule" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <parameters>
            <parameter name="rule">
              <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.DirectoryObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(System.Security.AccessControl.ObjectAccessRule)">
          <apidata name="SetAccessRule" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <parameters>
            <parameter name="rule">
              <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.DirectoryObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)">
          <apidata name="ResetAccessRule" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <parameters>
            <parameter name="rule">
              <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.DirectoryObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)">
          <apidata name="RemoveAccessRule" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <parameters>
            <parameter name="rule">
              <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.DirectoryObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)">
          <apidata name="RemoveAccessRuleSpecific" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <parameters>
            <parameter name="rule">
              <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.DirectoryObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(System.Security.AccessControl.ObjectAuditRule)">
          <apidata name="AddAuditRule" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <parameters>
            <parameter name="rule">
              <type api="T:System.Security.AccessControl.ObjectAuditRule" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.DirectoryObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(System.Security.AccessControl.ObjectAuditRule)">
          <apidata name="SetAuditRule" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <parameters>
            <parameter name="rule">
              <type api="T:System.Security.AccessControl.ObjectAuditRule" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.DirectoryObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(System.Security.Principal.IdentityReference)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)">
          <apidata name="RemoveAuditRule" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <parameters>
            <parameter name="rule">
              <type api="T:System.Security.AccessControl.ObjectAuditRule" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.DirectoryObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)">
          <apidata name="RemoveAuditRuleSpecific" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <parameters>
            <parameter name="rule">
              <type api="T:System.Security.AccessControl.ObjectAuditRule" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.DirectoryObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)" />
        <element api="P:System.DirectoryServices.ActiveDirectorySecurity.AccessRightType" />
        <element api="P:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType" />
        <element api="P:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <apidata name="ModifyAccess" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <overrides>
            <member api="M:System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
              <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="modification">
              <type api="T:System.Security.AccessControl.AccessControlModification" ref="false" />
            </parameter>
            <parameter name="rule">
              <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
            </parameter>
            <parameter name="modified" out="true">
              <referenceTo>
                <type api="T:System.Boolean" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.DirectoryObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
          <apidata name="ModifyAudit" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <overrides>
            <member api="M:System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
              <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="modification">
              <type api="T:System.Security.AccessControl.AccessControlModification" ref="false" />
            </parameter>
            <parameter name="rule">
              <type api="T:System.Security.AccessControl.AuditRule" ref="true" />
            </parameter>
            <parameter name="modified" out="true">
              <referenceTo>
                <type api="T:System.Boolean" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.DirectoryObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.ObjectAccessRule)">
          <apidata name="RemoveAccessRuleAll" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <parameters>
            <parameter name="rule">
              <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.DirectoryObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.ObjectAuditRule)">
          <apidata name="RemoveAuditRuleAll" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <parameters>
            <parameter name="rule">
              <type api="T:System.Security.AccessControl.ObjectAuditRule" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.DirectoryObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)">
          <apidata name="GetAccessRules" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <parameters>
            <parameter name="includeExplicit">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
            <parameter name="includeInherited">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
            <parameter name="targetType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Security.AccessControl.AuthorizationRuleCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.DirectoryObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)">
          <apidata name="GetAuditRules" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <parameters>
            <parameter name="includeExplicit">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
            <parameter name="includeInherited">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
            <parameter name="targetType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Security.AccessControl.AuthorizationRuleCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.DirectoryObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.AccessControl.ObjectSecurity.ReadLock">
          <apidata name="ReadLock" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.AccessControl.ObjectSecurity.ReadUnlock">
          <apidata name="ReadUnlock" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.AccessControl.ObjectSecurity.WriteLock">
          <apidata name="WriteLock" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.AccessControl.ObjectSecurity.WriteUnlock">
          <apidata name="WriteUnlock" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)">
          <apidata name="Persist" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="includeSections">
              <type api="T:System.Security.AccessControl.AccessControlSections" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)">
          <apidata name="Persist" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="enableOwnershipPrivilege">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="includeSections">
              <type api="T:System.Security.AccessControl.AccessControlSections" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)">
          <apidata name="Persist" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="handle">
              <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
            </parameter>
            <parameter name="includeSections">
              <type api="T:System.Security.AccessControl.AccessControlSections" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)">
          <apidata name="GetOwner" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <parameters>
            <parameter name="targetType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Security.Principal.IdentityReference" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)">
          <apidata name="SetOwner" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <parameters>
            <parameter name="identity">
              <type api="T:System.Security.Principal.IdentityReference" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)">
          <apidata name="GetGroup" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <parameters>
            <parameter name="targetType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Security.Principal.IdentityReference" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)">
          <apidata name="SetGroup" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <parameters>
            <parameter name="identity">
              <type api="T:System.Security.Principal.IdentityReference" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)">
          <apidata name="SetAccessRuleProtection" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <parameters>
            <parameter name="isProtected">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
            <parameter name="preserveInheritance">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)">
          <apidata name="SetAuditRuleProtection" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <parameters>
            <parameter name="isProtected">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
            <parameter name="preserveInheritance">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)">
          <apidata name="GetSecurityDescriptorSddlForm" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <parameters>
            <parameter name="includeSections">
              <type api="T:System.Security.AccessControl.AccessControlSections" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)">
          <apidata name="SetSecurityDescriptorSddlForm" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <parameters>
            <parameter name="sddlForm">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)">
          <apidata name="SetSecurityDescriptorSddlForm" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <parameters>
            <parameter name="sddlForm">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="includeSections">
              <type api="T:System.Security.AccessControl.AccessControlSections" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm">
          <apidata name="GetSecurityDescriptorBinaryForm" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])">
          <apidata name="SetSecurityDescriptorBinaryForm" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <parameters>
            <parameter name="binaryForm">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)">
          <apidata name="SetSecurityDescriptorBinaryForm" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <parameters>
            <parameter name="binaryForm">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="includeSections">
              <type api="T:System.Security.AccessControl.AccessControlSections" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.ObjectSecurity.OwnerModified">
          <apidata name="OwnerModified" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.ObjectSecurity.GroupModified">
          <apidata name="GroupModified" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.ObjectSecurity.AuditRulesModified">
          <apidata name="AuditRulesModified" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.ObjectSecurity.AccessRulesModified">
          <apidata name="AccessRulesModified" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.ObjectSecurity.IsContainer">
          <apidata name="IsContainer" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.ObjectSecurity.IsDS">
          <apidata name="IsDS" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected">
          <apidata name="AreAccessRulesProtected" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected">
          <apidata name="AreAuditRulesProtected" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical">
          <apidata name="AreAccessRulesCanonical" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical">
          <apidata name="AreAuditRulesCanonical" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectorySecurity.AccessRightType">
      <apidata name="AccessRightType" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="P:System.Security.AccessControl.ObjectSecurity.AccessRightType">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
      <apidata name="AccessRuleFactory" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <overrides>
        <member api="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="identityReference">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="accessMask">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="isInherited">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="inheritanceFlags">
          <type api="T:System.Security.AccessControl.InheritanceFlags" ref="false" />
        </parameter>
        <parameter name="propagationFlags">
          <type api="T:System.Security.AccessControl.PropagationFlags" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)">
      <apidata name="AccessRuleFactory" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <overrides>
        <member api="M:System.Security.AccessControl.DirectoryObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)">
          <type api="T:System.Security.AccessControl.DirectoryObjectSecurity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="identityReference">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="accessMask">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="isInherited">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="inheritanceFlags">
          <type api="T:System.Security.AccessControl.InheritanceFlags" ref="false" />
        </parameter>
        <parameter name="propagationFlags">
          <type api="T:System.Security.AccessControl.PropagationFlags" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="objectGuid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritedObjectGuid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType">
      <apidata name="AccessRuleType" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="P:System.Security.AccessControl.ObjectSecurity.AccessRuleType">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)">
      <apidata name="AddAccessRule" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)">
      <apidata name="AddAuditRule" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
      <apidata name="AuditRuleFactory" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <overrides>
        <member api="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="identityReference">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="accessMask">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="isInherited">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="inheritanceFlags">
          <type api="T:System.Security.AccessControl.InheritanceFlags" ref="false" />
        </parameter>
        <parameter name="propagationFlags">
          <type api="T:System.Security.AccessControl.PropagationFlags" ref="false" />
        </parameter>
        <parameter name="flags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.AccessControl.AuditRule" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)">
      <apidata name="AuditRuleFactory" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <overrides>
        <member api="M:System.Security.AccessControl.DirectoryObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)">
          <type api="T:System.Security.AccessControl.DirectoryObjectSecurity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="identityReference">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="accessMask">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="isInherited">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="inheritanceFlags">
          <type api="T:System.Security.AccessControl.InheritanceFlags" ref="false" />
        </parameter>
        <parameter name="propagationFlags">
          <type api="T:System.Security.AccessControl.PropagationFlags" ref="false" />
        </parameter>
        <parameter name="flags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
        <parameter name="objectGuid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritedObjectGuid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.AccessControl.AuditRule" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType">
      <apidata name="AuditRuleType" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="P:System.Security.AccessControl.ObjectSecurity.AuditRuleType">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
      <apidata name="ModifyAccessRule" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="modification">
          <type api="T:System.Security.AccessControl.AccessControlModification" ref="false" />
        </parameter>
        <parameter name="rule">
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
        </parameter>
        <parameter name="modified" out="true">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
      <apidata name="ModifyAuditRule" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="modification">
          <type api="T:System.Security.AccessControl.AccessControlModification" ref="false" />
        </parameter>
        <parameter name="rule">
          <type api="T:System.Security.AccessControl.AuditRule" ref="true" />
        </parameter>
        <parameter name="modified" out="true">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)">
      <apidata name="PurgeAccessRules" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)">
      <apidata name="PurgeAuditRules" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)">
      <apidata name="RemoveAccess" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)">
      <apidata name="RemoveAccessRule" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)">
      <apidata name="RemoveAccessRuleSpecific" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(System.Security.Principal.IdentityReference)">
      <apidata name="RemoveAudit" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)">
      <apidata name="RemoveAuditRule" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)">
      <apidata name="RemoveAuditRuleSpecific" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)">
      <apidata name="ResetAccessRule" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)">
      <apidata name="SetAccessRule" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)">
      <apidata name="SetAuditRule" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectorySecurityInheritance">
      <apidata name="ActiveDirectorySecurityInheritance" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.None" />
        <element api="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.All" />
        <element api="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.Descendents" />
        <element api="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.SelfAndChildren" />
        <element api="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.Children" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.All">
      <apidata name="All" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.Children">
      <apidata name="Children" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.Descendents">
      <apidata name="Descendents" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.None">
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.SelfAndChildren">
      <apidata name="SelfAndChildren" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.AuthenticationTypes">
      <apidata name="AuthenticationTypes" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.AuthenticationTypes.None" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.Secure" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.Encryption" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.SecureSocketsLayer" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.ReadonlyServer" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.Anonymous" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.FastBind" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.Signing" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.Sealing" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.Delegation" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.ServerBind" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.Anonymous">
      <apidata name="Anonymous" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.Delegation">
      <apidata name="Delegation" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.Encryption">
      <apidata name="Encryption" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.FastBind">
      <apidata name="FastBind" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.None">
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.ReadonlyServer">
      <apidata name="ReadonlyServer" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.Sealing">
      <apidata name="Sealing" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.Secure">
      <apidata name="Secure" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.SecureSocketsLayer">
      <apidata name="SecureSocketsLayer" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.ServerBind">
      <apidata name="ServerBind" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.Signing">
      <apidata name="Signing" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.CreateChildAccessRule">
      <apidata name="CreateChildAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
        <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)" />
        <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType">
          <apidata name="ObjectType" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Guid" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType">
          <apidata name="InheritedObjectType" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Guid" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags">
          <apidata name="ObjectFlags" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.AccessControl.ObjectAceFlags" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType">
          <apidata name="AccessControlType" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference">
          <apidata name="IdentityReference" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.Principal.IdentityReference" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.AccessMask">
          <apidata name="AccessMask" group="member" subgroup="property" />
          <memberdata visibility="family or assembly" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited">
          <apidata name="IsInherited" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags">
          <apidata name="InheritanceFlags" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.AccessControl.InheritanceFlags" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags">
          <apidata name="PropagationFlags" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.AccessControl.PropagationFlags" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.CreateChildAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.CreateChildAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.CreateChildAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="childType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.CreateChildAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="childType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.CreateChildAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="childType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.CreateChildAccessRule" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.DeleteChildAccessRule">
      <apidata name="DeleteChildAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
        <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)" />
        <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType">
          <apidata name="ObjectType" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Guid" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType">
          <apidata name="InheritedObjectType" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Guid" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags">
          <apidata name="ObjectFlags" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.AccessControl.ObjectAceFlags" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType">
          <apidata name="AccessControlType" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference">
          <apidata name="IdentityReference" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.Principal.IdentityReference" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.AccessMask">
          <apidata name="AccessMask" group="member" subgroup="property" />
          <memberdata visibility="family or assembly" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited">
          <apidata name="IsInherited" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags">
          <apidata name="InheritanceFlags" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.AccessControl.InheritanceFlags" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags">
          <apidata name="PropagationFlags" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.AccessControl.PropagationFlags" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteChildAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteChildAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteChildAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="childType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteChildAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="childType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteChildAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="childType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteChildAccessRule" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.DeleteTreeAccessRule">
      <apidata name="DeleteTreeAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
        <element api="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType">
          <apidata name="ObjectType" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Guid" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType">
          <apidata name="InheritedObjectType" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Guid" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags">
          <apidata name="ObjectFlags" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.AccessControl.ObjectAceFlags" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType">
          <apidata name="AccessControlType" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference">
          <apidata name="IdentityReference" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.Principal.IdentityReference" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.AccessMask">
          <apidata name="AccessMask" group="member" subgroup="property" />
          <memberdata visibility="family or assembly" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited">
          <apidata name="IsInherited" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags">
          <apidata name="InheritanceFlags" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.AccessControl.InheritanceFlags" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags">
          <apidata name="PropagationFlags" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.AccessControl.PropagationFlags" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteTreeAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteTreeAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteTreeAccessRule" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.DereferenceAlias">
      <apidata name="DereferenceAlias" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.DereferenceAlias.Never" />
        <element api="F:System.DirectoryServices.DereferenceAlias.InSearching" />
        <element api="F:System.DirectoryServices.DereferenceAlias.FindingBaseObject" />
        <element api="F:System.DirectoryServices.DereferenceAlias.Always" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.DereferenceAlias.Always">
      <apidata name="Always" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.DereferenceAlias.FindingBaseObject">
      <apidata name="FindingBaseObject" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.DereferenceAlias.InSearching">
      <apidata name="InSearching" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.DereferenceAlias.Never">
      <apidata name="Never" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.DirectoryEntries">
      <apidata name="DirectoryEntries" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.DirectoryServices.DirectoryEntries.Add(System.String,System.String)" />
        <element api="M:System.DirectoryServices.DirectoryEntries.Find(System.String)" />
        <element api="M:System.DirectoryServices.DirectoryEntries.Find(System.String,System.String)" />
        <element api="M:System.DirectoryServices.DirectoryEntries.Remove(System.DirectoryServices.DirectoryEntry)" />
        <element api="M:System.DirectoryServices.DirectoryEntries.GetEnumerator" />
        <element api="P:System.DirectoryServices.DirectoryEntries.SchemaFilter" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntries.Add(System.String,System.String)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="schemaClassName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntries" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntries.Find(System.String)">
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntries" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntries.Find(System.String,System.String)">
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="schemaClassName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntries" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntries.GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntries" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntries.Remove(System.DirectoryServices.DirectoryEntry)">
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="entry">
          <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntries" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntries.SchemaFilter">
      <apidata name="SchemaFilter" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntries" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.DirectoryEntry">
      <apidata name="DirectoryEntry" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Component" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.DirectoryEntry.#ctor" />
        <element api="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String)" />
        <element api="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String)" />
        <element api="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String,System.DirectoryServices.AuthenticationTypes)" />
        <element api="M:System.DirectoryServices.DirectoryEntry.#ctor(System.Object)" />
        <element api="M:System.DirectoryServices.DirectoryEntry.Close" />
        <element api="M:System.DirectoryServices.DirectoryEntry.CommitChanges" />
        <element api="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry)" />
        <element api="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry,System.String)" />
        <element api="M:System.DirectoryServices.DirectoryEntry.DeleteTree" />
        <element api="M:System.DirectoryServices.DirectoryEntry.Dispose(System.Boolean)" />
        <element api="M:System.DirectoryServices.DirectoryEntry.Exists(System.String)" />
        <element api="M:System.DirectoryServices.DirectoryEntry.Invoke(System.String,System.Object[])" />
        <element api="M:System.DirectoryServices.DirectoryEntry.InvokeGet(System.String)" />
        <element api="M:System.DirectoryServices.DirectoryEntry.InvokeSet(System.String,System.Object[])" />
        <element api="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry)" />
        <element api="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry,System.String)" />
        <element api="M:System.DirectoryServices.DirectoryEntry.RefreshCache" />
        <element api="M:System.DirectoryServices.DirectoryEntry.RefreshCache(System.String[])" />
        <element api="M:System.DirectoryServices.DirectoryEntry.Rename(System.String)" />
        <element api="P:System.DirectoryServices.DirectoryEntry.AuthenticationType" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Children" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Guid" />
        <element api="P:System.DirectoryServices.DirectoryEntry.ObjectSecurity" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Name" />
        <element api="P:System.DirectoryServices.DirectoryEntry.NativeGuid" />
        <element api="P:System.DirectoryServices.DirectoryEntry.NativeObject" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Parent" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Password" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Path" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Properties" />
        <element api="P:System.DirectoryServices.DirectoryEntry.SchemaClassName" />
        <element api="P:System.DirectoryServices.DirectoryEntry.SchemaEntry" />
        <element api="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Username" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Options" />
        <element api="M:System.ComponentModel.Component.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <overrides>
            <member api="M:System.Object.Finalize">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <containers>
            <library assembly="System" module="System" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Component.GetService(System.Type)">
          <apidata name="GetService" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="service">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Component.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
        </element>
        <element api="P:System.ComponentModel.Component.CanRaiseEvents">
          <apidata name="CanRaiseEvents" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
        </element>
        <element api="P:System.ComponentModel.Component.Events">
          <apidata name="Events" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.ComponentModel.EventHandlerList" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
        </element>
        <element api="P:System.ComponentModel.Component.Site">
          <apidata name="Site" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.ComponentModel.ISite" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
              <argument>
                <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
                <enumValue>
                  <field name="Hidden" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.ComponentModel.Component.Container">
          <apidata name="Container" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.ComponentModel.IContainer" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
              <argument>
                <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
                <enumValue>
                  <field name="Hidden" />
                </enumValue>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.ComponentModel.Component.DesignMode">
          <apidata name="DesignMode" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
              <argument>
                <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
                <enumValue>
                  <field name="Hidden" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="E:System.ComponentModel.Component.Disposed">
          <apidata name="Disposed" group="member" subgroup="event" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System" module="System" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                <enumValue>
                  <field name="Advanced" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DirectoryEntryDesc</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="Assert" />
            </enumValue>
          </argument>
          <assignment name="Flags">
            <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
            <enumValue>
              <field name="UnmanagedCode" />
            </enumValue>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.EnvironmentPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="Assert" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.#ctor(System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="adsObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String,System.DirectoryServices.AuthenticationTypes)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="authenticationType">
          <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.AuthenticationType">
      <apidata name="AuthenticationType" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
            <enumValue>
              <field name="Secure" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSAuthenticationType</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.Children">
      <apidata name="Children" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntries" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSChildren</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.Close">
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.CommitChanges">
      <apidata name="CommitChanges" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="newParent">
          <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry,System.String)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="newParent">
          <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
        </parameter>
        <parameter name="newName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.DeleteTree">
      <apidata name="DeleteTree" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <type api="T:System.ComponentModel.Component" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.Exists(System.String)">
      <apidata name="Exists" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.Guid">
      <apidata name="Guid" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSGuid</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.Invoke(System.String,System.Object[])">
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="methodName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.InvokeGet(System.String)">
      <apidata name="InvokeGet" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.InvokeSet(System.String,System.Object[])">
      <apidata name="InvokeSet" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry)">
      <apidata name="MoveTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="newParent">
          <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry,System.String)">
      <apidata name="MoveTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="newParent">
          <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
        </parameter>
        <parameter name="newName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSName</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.NativeGuid">
      <apidata name="NativeGuid" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSNativeGuid</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.NativeObject">
      <apidata name="NativeObject" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSNativeObject</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.ObjectSecurity">
      <apidata name="ObjectSecurity" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSObjectSecurity</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.Options">
      <apidata name="Options" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSOptions</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.Parent">
      <apidata name="Parent" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSParent</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.Password">
      <apidata name="Password" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSPassword</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.Path">
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.SettingsBindableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSPath</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.Properties">
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSProperties</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.RefreshCache">
      <apidata name="RefreshCache" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.RefreshCache(System.String[])">
      <apidata name="RefreshCache" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="propertyNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.Rename(System.String)">
      <apidata name="Rename" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="newName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.SchemaClassName">
      <apidata name="SchemaClassName" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSSchemaClassName</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.SchemaEntry">
      <apidata name="SchemaEntry" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSSchemaEntry</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache">
      <apidata name="UsePropertyCache" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSUsePropertyCache</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.Username">
      <apidata name="Username" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSUsername</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.DirectoryServices.DirectoryEntryConfiguration">
      <apidata name="DirectoryEntryConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.DirectoryEntryConfiguration.GetCurrentServerName" />
        <element api="M:System.DirectoryServices.DirectoryEntryConfiguration.IsMutuallyAuthenticated" />
        <element api="M:System.DirectoryServices.DirectoryEntryConfiguration.SetUserNameQueryQuota(System.String)" />
        <element api="P:System.DirectoryServices.DirectoryEntryConfiguration.Referral" />
        <element api="P:System.DirectoryServices.DirectoryEntryConfiguration.SecurityMasks" />
        <element api="P:System.DirectoryServices.DirectoryEntryConfiguration.PageSize" />
        <element api="P:System.DirectoryServices.DirectoryEntryConfiguration.PasswordPort" />
        <element api="P:System.DirectoryServices.DirectoryEntryConfiguration.PasswordEncoding" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntryConfiguration.GetCurrentServerName">
      <apidata name="GetCurrentServerName" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntryConfiguration.IsMutuallyAuthenticated">
      <apidata name="IsMutuallyAuthenticated" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntryConfiguration.PageSize">
      <apidata name="PageSize" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntryConfiguration.PasswordEncoding">
      <apidata name="PasswordEncoding" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.PasswordEncodingMethod" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntryConfiguration.PasswordPort">
      <apidata name="PasswordPort" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntryConfiguration.Referral">
      <apidata name="Referral" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntryConfiguration.SecurityMasks">
      <apidata name="SecurityMasks" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntryConfiguration.SetUserNameQueryQuota(System.String)">
      <apidata name="SetUserNameQueryQuota" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="accountName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.DirectorySearcher">
      <apidata name="DirectorySearcher" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Component" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.DirectorySearcher.#ctor" />
        <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)" />
        <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)" />
        <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])" />
        <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String)" />
        <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])" />
        <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)" />
        <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)" />
        <element api="M:System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)" />
        <element api="M:System.DirectoryServices.DirectorySearcher.FindOne" />
        <element api="M:System.DirectoryServices.DirectorySearcher.FindAll" />
        <element api="P:System.DirectoryServices.DirectorySearcher.CacheResults" />
        <element api="P:System.DirectoryServices.DirectorySearcher.ClientTimeout" />
        <element api="P:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly" />
        <element api="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <element api="P:System.DirectoryServices.DirectorySearcher.PageSize" />
        <element api="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <element api="P:System.DirectoryServices.DirectorySearcher.ReferralChasing" />
        <element api="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
        <element api="P:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit" />
        <element api="P:System.DirectoryServices.DirectorySearcher.ServerTimeLimit" />
        <element api="P:System.DirectoryServices.DirectorySearcher.SizeLimit" />
        <element api="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <element api="P:System.DirectoryServices.DirectorySearcher.Sort" />
        <element api="P:System.DirectoryServices.DirectorySearcher.Asynchronous" />
        <element api="P:System.DirectoryServices.DirectorySearcher.Tombstone" />
        <element api="P:System.DirectoryServices.DirectorySearcher.AttributeScopeQuery" />
        <element api="P:System.DirectoryServices.DirectorySearcher.DerefAlias" />
        <element api="P:System.DirectoryServices.DirectorySearcher.SecurityMasks" />
        <element api="P:System.DirectoryServices.DirectorySearcher.ExtendedDN" />
        <element api="P:System.DirectoryServices.DirectorySearcher.DirectorySynchronization" />
        <element api="P:System.DirectoryServices.DirectorySearcher.VirtualListView" />
        <element api="M:System.ComponentModel.Component.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <overrides>
            <member api="M:System.Object.Finalize">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <containers>
            <library assembly="System" module="System" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Component.GetService(System.Type)">
          <apidata name="GetService" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="service">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Component.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
        </element>
        <element api="P:System.ComponentModel.Component.CanRaiseEvents">
          <apidata name="CanRaiseEvents" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
        </element>
        <element api="P:System.ComponentModel.Component.Events">
          <apidata name="Events" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.ComponentModel.EventHandlerList" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
        </element>
        <element api="P:System.ComponentModel.Component.Site">
          <apidata name="Site" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.ComponentModel.ISite" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
              <argument>
                <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
                <enumValue>
                  <field name="Hidden" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.ComponentModel.Component.Container">
          <apidata name="Container" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.ComponentModel.IContainer" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
              <argument>
                <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
                <enumValue>
                  <field name="Hidden" />
                </enumValue>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.ComponentModel.Component.DesignMode">
          <apidata name="DesignMode" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
              <argument>
                <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
                <enumValue>
                  <field name="Hidden" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="E:System.ComponentModel.Component.Disposed">
          <apidata name="Disposed" group="member" subgroup="event" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System" module="System" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                <enumValue>
                  <field name="Advanced" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DirectorySearcherDesc</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="searchRoot">
          <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="searchRoot">
          <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
        </parameter>
        <parameter name="filter">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="searchRoot">
          <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
        </parameter>
        <parameter name="filter">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertiesToLoad">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="searchRoot">
          <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
        </parameter>
        <parameter name="filter">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertiesToLoad">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="scope">
          <type api="T:System.DirectoryServices.SearchScope" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="filter">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="filter">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertiesToLoad">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="filter">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertiesToLoad">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="scope">
          <type api="T:System.DirectoryServices.SearchScope" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.Asynchronous">
      <apidata name="Asynchronous" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSAsynchronous</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.AttributeScopeQuery">
      <apidata name="AttributeScopeQuery" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSAttributeQuery</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.CacheResults">
      <apidata name="CacheResults" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSCacheResults</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.ClientTimeout">
      <apidata name="ClientTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSClientTimeout</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.DerefAlias">
      <apidata name="DerefAlias" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSDerefAlias</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.DirectorySynchronization">
      <apidata name="DirectorySynchronization" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSDirectorySynchronization</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <type api="T:System.ComponentModel.Component" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.ExtendedDN">
      <apidata name="ExtendedDN" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ExtendedDN" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.DirectoryServices.ExtendedDN" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSExtendedDn</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.Filter">
      <apidata name="Filter" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>(objectClass=*)</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.SettingsBindableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSFilter</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.FindAll">
      <apidata name="FindAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.FindOne">
      <apidata name="FindOne" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.SearchResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.PageSize">
      <apidata name="PageSize" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSPageSize</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad">
      <apidata name="PropertiesToLoad" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSPropertiesToLoad</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Content" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Windows.Forms.Design.StringCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly">
      <apidata name="PropertyNamesOnly" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSPropertyNamesOnly</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.ReferralChasing">
      <apidata name="ReferralChasing" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSReferralChasing</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
            <enumValue>
              <field name="External" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.SearchRoot">
      <apidata name="SearchRoot" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSSearchRoot</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.SearchScope">
      <apidata name="SearchScope" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.SearchScope" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.SettingsBindableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.DirectoryServices.SearchScope" ref="false" />
            <enumValue>
              <field name="Subtree" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSSearchScope</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.SecurityMasks">
      <apidata name="SecurityMasks" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSSecurityMasks</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit">
      <apidata name="ServerPageTimeLimit" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSServerPageTimeLimit</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.ServerTimeLimit">
      <apidata name="ServerTimeLimit" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSServerTimeLimit</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.SizeLimit">
      <apidata name="SizeLimit" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSSizeLimit</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.Sort">
      <apidata name="Sort" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.SortOption" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Content" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ComponentModel.ExpandableObjectConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSSort</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.Tombstone">
      <apidata name="Tombstone" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSTombstone</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.VirtualListView">
      <apidata name="VirtualListView" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSVirtualListView</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.DirectoryServices.DirectoryServicesCOMException">
      <apidata name="DirectoryServicesCOMException" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Runtime.InteropServices.COMException" ref="true" />
          <type api="T:System.Runtime.InteropServices.ExternalException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor" />
        <element api="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.String)" />
        <element api="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.String,System.Exception)" />
        <element api="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.DirectoryServices.DirectoryServicesCOMException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.DirectoryServices.DirectoryServicesCOMException.ExtendedError" />
        <element api="P:System.DirectoryServices.DirectoryServicesCOMException.ExtendedErrorMessage" />
        <element api="M:System.Runtime.InteropServices.COMException.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <overrides>
            <member api="M:System.Exception.ToString">
              <type api="T:System.Exception" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Runtime.InteropServices" />
            <type api="T:System.Runtime.InteropServices.COMException" ref="true" />
          </containers>
        </element>
        <element api="P:System.Runtime.InteropServices.ExternalException.ErrorCode">
          <apidata name="ErrorCode" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Runtime.InteropServices" />
            <type api="T:System.Runtime.InteropServices.ExternalException" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.String,System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryServicesCOMException.ExtendedError">
      <apidata name="ExtendedError" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryServicesCOMException.ExtendedErrorMessage">
      <apidata name="ExtendedErrorMessage" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesCOMException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.DirectoryServicesPermission">
      <apidata name="DirectoryServicesPermission" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.Permissions.ResourcePermissionBase" ref="true" />
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.DirectoryServicesPermission.#ctor" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.Security.Permissions.PermissionState)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionAccess,System.String)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionEntry[])" />
        <element api="P:System.DirectoryServices.DirectoryServicesPermission.PermissionEntries" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)">
          <apidata name="AddPermissionAccess" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <parameters>
            <parameter name="entry">
              <type api="T:System.Security.Permissions.ResourcePermissionBaseEntry" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System" module="System" />
            <namespace api="N:System.Security.Permissions" />
            <type api="T:System.Security.Permissions.ResourcePermissionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <containers>
            <library assembly="System" module="System" />
            <namespace api="N:System.Security.Permissions" />
            <type api="T:System.Security.Permissions.ResourcePermissionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Copy">
          <apidata name="Copy" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <overrides>
            <member api="M:System.Security.CodeAccessPermission.Copy">
              <type api="T:System.Security.CodeAccessPermission" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Security.IPermission" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" />
            <namespace api="N:System.Security.Permissions" />
            <type api="T:System.Security.Permissions.ResourcePermissionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Permissions.ResourcePermissionBase.GetPermissionEntries">
          <apidata name="GetPermissionEntries" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Security.Permissions.ResourcePermissionBaseEntry" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System" module="System" />
            <namespace api="N:System.Security.Permissions" />
            <type api="T:System.Security.Permissions.ResourcePermissionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)">
          <apidata name="FromXml" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <overrides>
            <member api="M:System.Security.CodeAccessPermission.FromXml(System.Security.SecurityElement)">
              <type api="T:System.Security.CodeAccessPermission" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="securityElement">
              <type api="T:System.Security.SecurityElement" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System" module="System" />
            <namespace api="N:System.Security.Permissions" />
            <type api="T:System.Security.Permissions.ResourcePermissionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)">
          <apidata name="Intersect" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <overrides>
            <member api="M:System.Security.CodeAccessPermission.Intersect(System.Security.IPermission)">
              <type api="T:System.Security.CodeAccessPermission" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="target">
              <type api="T:System.Security.IPermission" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Security.IPermission" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" />
            <namespace api="N:System.Security.Permissions" />
            <type api="T:System.Security.Permissions.ResourcePermissionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)">
          <apidata name="IsSubsetOf" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <overrides>
            <member api="M:System.Security.CodeAccessPermission.IsSubsetOf(System.Security.IPermission)">
              <type api="T:System.Security.CodeAccessPermission" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="target">
              <type api="T:System.Security.IPermission" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" />
            <namespace api="N:System.Security.Permissions" />
            <type api="T:System.Security.Permissions.ResourcePermissionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Permissions.ResourcePermissionBase.IsUnrestricted">
          <apidata name="IsUnrestricted" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" />
            <namespace api="N:System.Security.Permissions" />
            <type api="T:System.Security.Permissions.ResourcePermissionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)">
          <apidata name="RemovePermissionAccess" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <parameters>
            <parameter name="entry">
              <type api="T:System.Security.Permissions.ResourcePermissionBaseEntry" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System" module="System" />
            <namespace api="N:System.Security.Permissions" />
            <type api="T:System.Security.Permissions.ResourcePermissionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Permissions.ResourcePermissionBase.ToXml">
          <apidata name="ToXml" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <overrides>
            <member api="M:System.Security.CodeAccessPermission.ToXml">
              <type api="T:System.Security.CodeAccessPermission" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Security.SecurityElement" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" />
            <namespace api="N:System.Security.Permissions" />
            <type api="T:System.Security.Permissions.ResourcePermissionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)">
          <apidata name="Union" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <overrides>
            <member api="M:System.Security.CodeAccessPermission.Union(System.Security.IPermission)">
              <type api="T:System.Security.CodeAccessPermission" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="target">
              <type api="T:System.Security.IPermission" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Security.IPermission" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" />
            <namespace api="N:System.Security.Permissions" />
            <type api="T:System.Security.Permissions.ResourcePermissionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.Permissions.ResourcePermissionBase.PermissionAccessType">
          <apidata name="PermissionAccessType" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" />
            <namespace api="N:System.Security.Permissions" />
            <type api="T:System.Security.Permissions.ResourcePermissionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.Permissions.ResourcePermissionBase.TagNames">
          <apidata name="TagNames" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.String" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System" module="System" />
            <namespace api="N:System.Security.Permissions" />
            <type api="T:System.Security.Permissions.ResourcePermissionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.CodeAccessPermission.Demand">
          <apidata name="Demand" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security" />
            <type api="T:System.Security.CodeAccessPermission" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.CodeAccessPermission.Assert">
          <apidata name="Assert" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security" />
            <type api="T:System.Security.CodeAccessPermission" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.CodeAccessPermission.Deny">
          <apidata name="Deny" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security" />
            <type api="T:System.Security.CodeAccessPermission" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.CodeAccessPermission.PermitOnly">
          <apidata name="PermitOnly" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security" />
            <type api="T:System.Security.CodeAccessPermission" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.CodeAccessPermission.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security" />
            <type api="T:System.Security.CodeAccessPermission" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.CodeAccessPermission.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security" />
            <type api="T:System.Security.CodeAccessPermission" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Security.CodeAccessPermission.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security" />
            <type api="T:System.Security.CodeAccessPermission" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermission.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionAccess,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="permissionAccess">
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
        </parameter>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionEntry[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="permissionAccessEntries">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.Security.Permissions.PermissionState)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="state">
          <type api="T:System.Security.Permissions.PermissionState" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermission" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryServicesPermission.PermissionEntries">
      <apidata name="PermissionEntries" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermission" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.DirectoryServicesPermissionAccess">
      <apidata name="DirectoryServicesPermissionAccess" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.DirectoryServicesPermissionAccess.None" />
        <element api="F:System.DirectoryServices.DirectoryServicesPermissionAccess.Browse" />
        <element api="F:System.DirectoryServices.DirectoryServicesPermissionAccess.Write" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.DirectoryServices.DirectoryServicesPermissionAccess.Browse">
      <apidata name="Browse" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.DirectoryServicesPermissionAccess.None">
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.DirectoryServicesPermissionAccess.Write">
      <apidata name="Write" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.DirectoryServicesPermissionAttribute">
      <apidata name="DirectoryServicesPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.Permissions.CodeAccessSecurityAttribute" ref="true" />
          <type api="T:System.Security.Permissions.SecurityAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionAttribute.CreatePermission" />
        <element api="P:System.DirectoryServices.DirectoryServicesPermissionAttribute.Path" />
        <element api="P:System.DirectoryServices.DirectoryServicesPermissionAttribute.PermissionAccess" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Action">
          <apidata name="Action" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.Permissions" />
            <type api="T:System.Security.Permissions.SecurityAttribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.Permissions.SecurityAttribute.Unrestricted">
          <apidata name="Unrestricted" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.Permissions" />
            <type api="T:System.Security.Permissions.SecurityAttribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <apidata name="System.Runtime.InteropServices._Attribute.GetTypeInfoCount" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="pcTInfo" out="true">
              <referenceTo>
                <type api="T:System.UInt32" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="System.Runtime.InteropServices._Attribute.GetTypeInfo" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="iTInfo">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="ppTInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="System.Runtime.InteropServices._Attribute.GetIDsOfNames" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="rgszNames">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="cNames">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="rgDispId">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <apidata name="System.Runtime.InteropServices._Attribute.Invoke" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="dispIdMember">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="wFlags">
              <type api="T:System.Int16" ref="false" />
            </parameter>
            <parameter name="pDispParams">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pVarResult">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pExcepInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="puArgErr">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Assembly" />
              <field name="Class" />
              <field name="Struct" />
              <field name="Constructor" />
              <field name="Method" />
              <field name="Event" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionAttribute.CreatePermission">
      <apidata name="CreatePermission" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Security.Permissions.SecurityAttribute.CreatePermission">
          <type api="T:System.Security.Permissions.SecurityAttribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryServicesPermissionAttribute.Path">
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryServicesPermissionAttribute.PermissionAccess">
      <apidata name="PermissionAccess" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.DirectoryServicesPermissionEntry">
      <apidata name="DirectoryServicesPermissionEntry" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntry.#ctor(System.DirectoryServices.DirectoryServicesPermissionAccess,System.String)" />
        <element api="P:System.DirectoryServices.DirectoryServicesPermissionEntry.Path" />
        <element api="P:System.DirectoryServices.DirectoryServicesPermissionEntry.PermissionAccess" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntry.#ctor(System.DirectoryServices.DirectoryServicesPermissionAccess,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" />
      <parameters>
        <parameter name="permissionAccess">
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
        </parameter>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryServicesPermissionEntry.Path">
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryServicesPermissionEntry.PermissionAccess">
      <apidata name="PermissionAccess" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection">
      <apidata name="DirectoryServicesPermissionEntryCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.CollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Add(System.DirectoryServices.DirectoryServicesPermissionEntry)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntry[])" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntryCollection)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Contains(System.DirectoryServices.DirectoryServicesPermissionEntry)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.CopyTo(System.DirectoryServices.DirectoryServicesPermissionEntry[],System.Int32)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.IndexOf(System.DirectoryServices.DirectoryServicesPermissionEntry)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Insert(System.Int32,System.DirectoryServices.DirectoryServicesPermissionEntry)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Remove(System.DirectoryServices.DirectoryServicesPermissionEntry)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnClear" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="P:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Item(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
          <apidata name="RemoveAt" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="System.Collections.ICollection.CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)">
          <apidata name="System.Collections.IList.Contains" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.Contains(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
          <apidata name="System.Collections.IList.Add" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.Add(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <apidata name="System.Collections.IList.Remove" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IList.Remove(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)">
          <apidata name="System.Collections.IList.IndexOf" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.IndexOf(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <apidata name="System.Collections.IList.Insert" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IList.Insert(System.Int32,System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <apidata name="OnValidate" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <apidata name="OnSetComplete" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="oldValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="newValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <apidata name="OnInsertComplete" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.OnClearComplete">
          <apidata name="OnClearComplete" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <apidata name="OnRemoveComplete" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.InnerList">
          <apidata name="InnerList" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.List">
          <apidata name="List" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.IList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.Capacity">
          <apidata name="Capacity" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Collections.CollectionBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly">
          <apidata name="System.Collections.IList.IsReadOnly" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.IsReadOnly">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize">
          <apidata name="System.Collections.IList.IsFixedSize" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.IsFixedSize">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
          <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
          <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
          <apidata name="System.Collections.IList.Item" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.Item(System.Int32)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Add(System.DirectoryServices.DirectoryServicesPermissionEntry)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntry[])">
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntryCollection)">
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Contains(System.DirectoryServices.DirectoryServicesPermissionEntry)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.CopyTo(System.DirectoryServices.DirectoryServicesPermissionEntry[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.IndexOf(System.DirectoryServices.DirectoryServicesPermissionEntry)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Insert(System.Int32,System.DirectoryServices.DirectoryServicesPermissionEntry)">
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnClear">
      <apidata name="OnClear" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClear">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnInsert(System.Int32,System.Object)">
      <apidata name="OnInsert" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnRemove(System.Int32,System.Object)">
      <apidata name="OnRemove" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)">
      <apidata name="OnSet" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="oldValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Remove(System.DirectoryServices.DirectoryServicesPermissionEntry)">
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.DirectorySynchronization">
      <apidata name="DirectorySynchronization" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.DirectorySynchronization.#ctor" />
        <element api="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronizationOptions)" />
        <element api="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronization)" />
        <element api="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.Byte[])" />
        <element api="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronizationOptions,System.Byte[])" />
        <element api="M:System.DirectoryServices.DirectorySynchronization.GetDirectorySynchronizationCookie" />
        <element api="M:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie" />
        <element api="M:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie(System.Byte[])" />
        <element api="M:System.DirectoryServices.DirectorySynchronization.Copy" />
        <element api="P:System.DirectoryServices.DirectorySynchronization.Option" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectorySynchronization.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.Byte[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="cookie">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronization)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="sync">
          <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronizationOptions)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="option">
          <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronizationOptions,System.Byte[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="option">
          <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
        </parameter>
        <parameter name="cookie">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectorySynchronization.Copy">
      <apidata name="Copy" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectorySynchronization.GetDirectorySynchronizationCookie">
      <apidata name="GetDirectorySynchronizationCookie" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectorySynchronization.Option">
      <apidata name="Option" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSDirectorySynchronizationFlag</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie">
      <apidata name="ResetDirectorySynchronizationCookie" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie(System.Byte[])">
      <apidata name="ResetDirectorySynchronizationCookie" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="cookie">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.DirectorySynchronizationOptions">
      <apidata name="DirectorySynchronizationOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int64" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.DirectorySynchronizationOptions.None" />
        <element api="F:System.DirectoryServices.DirectorySynchronizationOptions.ObjectSecurity" />
        <element api="F:System.DirectoryServices.DirectorySynchronizationOptions.ParentsFirst" />
        <element api="F:System.DirectoryServices.DirectorySynchronizationOptions.PublicDataOnly" />
        <element api="F:System.DirectoryServices.DirectorySynchronizationOptions.IncrementalValues" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.DirectoryServices.DirectorySynchronizationOptions.IncrementalValues">
      <apidata name="IncrementalValues" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.DirectorySynchronizationOptions.None">
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.DirectorySynchronizationOptions.ObjectSecurity">
      <apidata name="ObjectSecurity" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.DirectorySynchronizationOptions.ParentsFirst">
      <apidata name="ParentsFirst" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.DirectorySynchronizationOptions.PublicDataOnly">
      <apidata name="PublicDataOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.DirectoryVirtualListView">
      <apidata name="DirectoryVirtualListView" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor" />
        <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32)" />
        <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.Int32)" />
        <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.String)" />
        <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.Int32,System.DirectoryServices.DirectoryVirtualListViewContext)" />
        <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.String,System.DirectoryServices.DirectoryVirtualListViewContext)" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.BeforeCount" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.AfterCount" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.Offset" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.TargetPercentage" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.Target" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.ApproximateTotal" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.DirectoryVirtualListViewContext" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryVirtualListView.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="afterCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="beforeCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="afterCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.Int32,System.DirectoryServices.DirectoryVirtualListViewContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="beforeCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="afterCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="context">
          <type api="T:System.DirectoryServices.DirectoryVirtualListViewContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="beforeCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="afterCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="target">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.String,System.DirectoryServices.DirectoryVirtualListViewContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="beforeCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="afterCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="target">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.DirectoryServices.DirectoryVirtualListViewContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryVirtualListView.AfterCount">
      <apidata name="AfterCount" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSAfterCount</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectoryVirtualListView.ApproximateTotal">
      <apidata name="ApproximateTotal" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSApproximateTotal</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectoryVirtualListView.BeforeCount">
      <apidata name="BeforeCount" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSBeforeCount</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectoryVirtualListView.DirectoryVirtualListViewContext">
      <apidata name="DirectoryVirtualListViewContext" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryVirtualListViewContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSDirectoryVirtualListViewContext</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectoryVirtualListView.Offset">
      <apidata name="Offset" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSOffset</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectoryVirtualListView.Target">
      <apidata name="Target" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSTarget</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectoryVirtualListView.TargetPercentage">
      <apidata name="TargetPercentage" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSTargetPercentage</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.DirectoryServices.DirectoryVirtualListViewContext">
      <apidata name="DirectoryVirtualListViewContext" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.DirectoryVirtualListViewContext.#ctor" />
        <element api="M:System.DirectoryServices.DirectoryVirtualListViewContext.Copy" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryVirtualListViewContext.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListViewContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryVirtualListViewContext.Copy">
      <apidata name="Copy" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryVirtualListViewContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListViewContext" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.DSDescriptionAttribute">
      <apidata name="DSDescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.DescriptionAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.DSDescriptionAttribute.#ctor(System.String)" />
        <element api="P:System.DirectoryServices.DSDescriptionAttribute.Description" />
        <element api="M:System.ComponentModel.DescriptionAttribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <overrides>
            <member api="M:System.Attribute.Equals(System.Object)">
              <type api="T:System.Attribute" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.DescriptionAttribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.DescriptionAttribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <overrides>
            <member api="M:System.Attribute.GetHashCode">
              <type api="T:System.Attribute" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.DescriptionAttribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.DescriptionAttribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <overrides>
            <member api="M:System.Attribute.IsDefaultAttribute">
              <type api="T:System.Attribute" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.DescriptionAttribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.ComponentModel.DescriptionAttribute.DescriptionValue">
          <apidata name="DescriptionValue" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.DescriptionAttribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <apidata name="System.Runtime.InteropServices._Attribute.GetTypeInfoCount" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="pcTInfo" out="true">
              <referenceTo>
                <type api="T:System.UInt32" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="System.Runtime.InteropServices._Attribute.GetTypeInfo" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="iTInfo">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="ppTInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="System.Runtime.InteropServices._Attribute.GetIDsOfNames" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="rgszNames">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="cNames">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="rgDispId">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <apidata name="System.Runtime.InteropServices._Attribute.Invoke" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="dispIdMember">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="wFlags">
              <type api="T:System.Int16" ref="false" />
            </parameter>
            <parameter name="pDispParams">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pVarResult">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pExcepInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="puArgErr">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.DSDescriptionAttribute.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" />
      <parameters>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DSDescriptionAttribute.Description">
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="P:System.ComponentModel.DescriptionAttribute.Description">
          <type api="T:System.ComponentModel.DescriptionAttribute" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ExtendedDN">
      <apidata name="ExtendedDN" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.ExtendedDN.None" />
        <element api="F:System.DirectoryServices.ExtendedDN.HexString" />
        <element api="F:System.DirectoryServices.ExtendedDN.Standard" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ExtendedDN.HexString">
      <apidata name="HexString" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ExtendedDN" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedDN" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ExtendedDN.None">
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ExtendedDN" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedDN" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ExtendedDN.Standard">
      <apidata name="Standard" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ExtendedDN" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedDN" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ExtendedRightAccessRule">
      <apidata name="ExtendedRightAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
        <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)" />
        <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType">
          <apidata name="ObjectType" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Guid" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType">
          <apidata name="InheritedObjectType" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Guid" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags">
          <apidata name="ObjectFlags" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.AccessControl.ObjectAceFlags" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType">
          <apidata name="AccessControlType" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference">
          <apidata name="IdentityReference" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.Principal.IdentityReference" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.AccessMask">
          <apidata name="AccessMask" group="member" subgroup="property" />
          <memberdata visibility="family or assembly" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited">
          <apidata name="IsInherited" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags">
          <apidata name="InheritanceFlags" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.AccessControl.InheritanceFlags" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags">
          <apidata name="PropagationFlags" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.AccessControl.PropagationFlags" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedRightAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedRightAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedRightAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="extendedRightType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedRightAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="extendedRightType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedRightAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="extendedRightType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedRightAccessRule" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ListChildrenAccessRule">
      <apidata name="ListChildrenAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
        <element api="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType">
          <apidata name="ObjectType" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Guid" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType">
          <apidata name="InheritedObjectType" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Guid" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags">
          <apidata name="ObjectFlags" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.AccessControl.ObjectAceFlags" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType">
          <apidata name="AccessControlType" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference">
          <apidata name="IdentityReference" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.Principal.IdentityReference" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.AccessMask">
          <apidata name="AccessMask" group="member" subgroup="property" />
          <memberdata visibility="family or assembly" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited">
          <apidata name="IsInherited" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags">
          <apidata name="InheritanceFlags" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.AccessControl.InheritanceFlags" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags">
          <apidata name="PropagationFlags" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.AccessControl.PropagationFlags" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ListChildrenAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ListChildrenAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ListChildrenAccessRule" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.PasswordEncodingMethod">
      <apidata name="PasswordEncodingMethod" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.PasswordEncodingMethod.PasswordEncodingSsl" />
        <element api="F:System.DirectoryServices.PasswordEncodingMethod.PasswordEncodingClear" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.PasswordEncodingMethod.PasswordEncodingClear">
      <apidata name="PasswordEncodingClear" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.PasswordEncodingMethod" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PasswordEncodingMethod" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.PasswordEncodingMethod.PasswordEncodingSsl">
      <apidata name="PasswordEncodingSsl" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.PasswordEncodingMethod" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PasswordEncodingMethod" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.PropertyAccess">
      <apidata name="PropertyAccess" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.PropertyAccess.Read" />
        <element api="F:System.DirectoryServices.PropertyAccess.Write" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.PropertyAccess.Read">
      <apidata name="Read" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.PropertyAccess.Write">
      <apidata name="Write" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.PropertyAccessRule">
      <apidata name="PropertyAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess)" />
        <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid)" />
        <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType">
          <apidata name="ObjectType" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Guid" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType">
          <apidata name="InheritedObjectType" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Guid" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags">
          <apidata name="ObjectFlags" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.AccessControl.ObjectAceFlags" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType">
          <apidata name="AccessControlType" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference">
          <apidata name="IdentityReference" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.Principal.IdentityReference" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.AccessMask">
          <apidata name="AccessMask" group="member" subgroup="property" />
          <memberdata visibility="family or assembly" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited">
          <apidata name="IsInherited" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags">
          <apidata name="InheritanceFlags" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.AccessControl.InheritanceFlags" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags">
          <apidata name="PropagationFlags" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.AccessControl.PropagationFlags" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
        </parameter>
        <parameter name="propertyType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
        </parameter>
        <parameter name="propertyType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
        </parameter>
        <parameter name="propertyType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccessRule" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.PropertyCollection">
      <apidata name="PropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.IDictionary" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.DirectoryServices.PropertyCollection.Contains(System.String)" />
        <element api="M:System.DirectoryServices.PropertyCollection.CopyTo(System.DirectoryServices.PropertyValueCollection[],System.Int32)" />
        <element api="M:System.DirectoryServices.PropertyCollection.GetEnumerator" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Clear" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Contains(System.Object)" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.DirectoryServices.PropertyCollection.Item(System.String)" />
        <element api="P:System.DirectoryServices.PropertyCollection.Count" />
        <element api="P:System.DirectoryServices.PropertyCollection.PropertyNames" />
        <element api="P:System.DirectoryServices.PropertyCollection.Values" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsFixedSize" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsReadOnly" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Keys" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.PropertyCollection.Contains(System.String)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyCollection.CopyTo(System.DirectoryServices.PropertyValueCollection[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyCollection.GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IDictionaryEnumerator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.Item(System.String)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.PropertyNames">
      <apidata name="PropertyNames" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <apidata name="System.Collections.ICollection.CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized">
      <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot">
      <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <apidata name="System.Collections.IDictionary.Add" group="member" subgroup="method" />
      <memberdata visibility="private" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Clear">
      <apidata name="System.Collections.IDictionary.Clear" group="member" subgroup="method" />
      <memberdata visibility="private" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <implements>
        <member api="M:System.Collections.IDictionary.Clear">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Contains(System.Object)">
      <apidata name="System.Collections.IDictionary.Contains" group="member" subgroup="method" />
      <memberdata visibility="private" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IDictionary.Contains(System.Object)">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsFixedSize">
      <apidata name="System.Collections.IDictionary.IsFixedSize" group="member" subgroup="property" />
      <memberdata visibility="private" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.IsFixedSize">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsReadOnly">
      <apidata name="System.Collections.IDictionary.IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="private" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.IsReadOnly">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)">
      <apidata name="System.Collections.IDictionary.Item" group="member" subgroup="property" />
      <memberdata visibility="private" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.Item(System.Object)">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Keys">
      <apidata name="System.Collections.IDictionary.Keys" group="member" subgroup="property" />
      <memberdata visibility="private" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.Keys">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Remove(System.Object)">
      <apidata name="System.Collections.IDictionary.Remove" group="member" subgroup="method" />
      <memberdata visibility="private" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IDictionary.Remove(System.Object)">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
      <apidata name="System.Collections.IEnumerable.GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.Values">
      <apidata name="Values" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.PropertySetAccessRule">
      <apidata name="PropertySetAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid)" />
        <element api="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType">
          <apidata name="ObjectType" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Guid" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType">
          <apidata name="InheritedObjectType" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Guid" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags">
          <apidata name="ObjectFlags" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.AccessControl.ObjectAceFlags" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType">
          <apidata name="AccessControlType" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference">
          <apidata name="IdentityReference" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.Principal.IdentityReference" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.AccessMask">
          <apidata name="AccessMask" group="member" subgroup="property" />
          <memberdata visibility="family or assembly" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited">
          <apidata name="IsInherited" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags">
          <apidata name="InheritanceFlags" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.AccessControl.InheritanceFlags" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags">
          <apidata name="PropagationFlags" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Security.AccessControl.PropagationFlags" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Security.AccessControl" />
            <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
        </parameter>
        <parameter name="propertySetType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertySetAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
        </parameter>
        <parameter name="propertySetType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertySetAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
        </parameter>
        <parameter name="propertySetType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertySetAccessRule" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.PropertyValueCollection">
      <apidata name="PropertyValueCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.CollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.PropertyValueCollection.Add(System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.AddRange(System.Object[])" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.AddRange(System.DirectoryServices.PropertyValueCollection)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.Contains(System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.CopyTo(System.Object[],System.Int32)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.IndexOf(System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.Insert(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.Remove(System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.OnClearComplete" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="P:System.DirectoryServices.PropertyValueCollection.Item(System.Int32)" />
        <element api="P:System.DirectoryServices.PropertyValueCollection.PropertyName" />
        <element api="P:System.DirectoryServices.PropertyValueCollection.Value" />
        <element api="M:System.Collections.CollectionBase.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
          <apidata name="RemoveAt" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="System.Collections.ICollection.CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)">
          <apidata name="System.Collections.IList.Contains" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.Contains(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
          <apidata name="System.Collections.IList.Add" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.Add(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <apidata name="System.Collections.IList.Remove" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IList.Remove(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)">
          <apidata name="System.Collections.IList.IndexOf" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.IndexOf(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <apidata name="System.Collections.IList.Insert" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IList.Insert(System.Int32,System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <apidata name="OnSet" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="oldValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="newValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <apidata name="OnInsert" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.OnClear">
          <apidata name="OnClear" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <apidata name="OnRemove" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <apidata name="OnValidate" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.InnerList">
          <apidata name="InnerList" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.List">
          <apidata name="List" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.IList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.Capacity">
          <apidata name="Capacity" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Collections.CollectionBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly">
          <apidata name="System.Collections.IList.IsReadOnly" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.IsReadOnly">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize">
          <apidata name="System.Collections.IList.IsFixedSize" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.IsFixedSize">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
          <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
          <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
          <apidata name="System.Collections.IList.Item" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.Item(System.Int32)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.Add(System.Object)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.AddRange(System.DirectoryServices.PropertyValueCollection)">
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.AddRange(System.Object[])">
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.Contains(System.Object)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.CopyTo(System.Object[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.IndexOf(System.Object)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.Insert(System.Int32,System.Object)">
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.PropertyValueCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.OnClearComplete">
      <apidata name="OnClearComplete" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClearComplete">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.OnInsertComplete(System.Int32,System.Object)">
      <apidata name="OnInsertComplete" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.OnRemoveComplete(System.Int32,System.Object)">
      <apidata name="OnRemoveComplete" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <apidata name="OnSetComplete" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="oldValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.PropertyValueCollection.PropertyName">
      <apidata name="PropertyName" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.Remove(System.Object)">
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.PropertyValueCollection.Value">
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ReferralChasingOption">
      <apidata name="ReferralChasingOption" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.ReferralChasingOption.None" />
        <element api="F:System.DirectoryServices.ReferralChasingOption.Subordinate" />
        <element api="F:System.DirectoryServices.ReferralChasingOption.External" />
        <element api="F:System.DirectoryServices.ReferralChasingOption.All" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ReferralChasingOption.All">
      <apidata name="All" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ReferralChasingOption.External">
      <apidata name="External" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ReferralChasingOption.None">
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ReferralChasingOption.Subordinate">
      <apidata name="Subordinate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ResultPropertyCollection">
      <apidata name="ResultPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.DictionaryBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ResultPropertyCollection.Contains(System.String)" />
        <element api="M:System.DirectoryServices.ResultPropertyCollection.CopyTo(System.DirectoryServices.ResultPropertyValueCollection[],System.Int32)" />
        <element api="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.DirectoryServices.ResultPropertyCollection.Item(System.String)" />
        <element api="P:System.DirectoryServices.ResultPropertyCollection.PropertyNames" />
        <element api="P:System.DirectoryServices.ResultPropertyCollection.Values" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)">
          <apidata name="System.Collections.IDictionary.Contains" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IDictionary.Contains(System.Object)">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <apidata name="System.Collections.IDictionary.Add" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.DictionaryBase.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)">
          <apidata name="System.Collections.IDictionary.Remove" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IDictionary.Remove(System.Object)">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.DictionaryBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <returns>
            <type api="T:System.Collections.IDictionaryEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator">
          <apidata name="System.Collections.IEnumerable.GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Collections.IEnumerable.GetEnumerator">
              <type api="T:System.Collections.IEnumerable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)">
          <apidata name="OnGet" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="currentValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)">
          <apidata name="OnSet" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="oldValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="newValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)">
          <apidata name="OnInsert" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.DictionaryBase.OnClear">
          <apidata name="OnClear" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)">
          <apidata name="OnRemove" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)">
          <apidata name="OnValidate" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)">
          <apidata name="OnSetComplete" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="oldValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="newValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)">
          <apidata name="OnInsertComplete" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.DictionaryBase.OnClearComplete">
          <apidata name="OnClearComplete" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)">
          <apidata name="OnRemoveComplete" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.DictionaryBase.InnerHashtable">
          <apidata name="InnerHashtable" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.Hashtable" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.DictionaryBase.Dictionary">
          <apidata name="Dictionary" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.DictionaryBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly">
          <apidata name="System.Collections.IDictionary.IsReadOnly" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IDictionary.IsReadOnly">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize">
          <apidata name="System.Collections.IDictionary.IsFixedSize" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IDictionary.IsFixedSize">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized">
          <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Keys">
          <apidata name="System.Collections.IDictionary.Keys" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.ICollection" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.IDictionary.Keys">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot">
          <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Values">
          <apidata name="System.Collections.IDictionary.Values" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.ICollection" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.IDictionary.Values">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)">
          <apidata name="System.Collections.IDictionary.Item" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.IDictionary.Item(System.Object)">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ResultPropertyCollection.Contains(System.String)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ResultPropertyCollection.CopyTo(System.DirectoryServices.ResultPropertyValueCollection[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ResultPropertyValueCollection" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ResultPropertyCollection.Item(System.String)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ResultPropertyValueCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ResultPropertyCollection.PropertyNames">
      <apidata name="PropertyNames" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ResultPropertyCollection.Values">
      <apidata name="Values" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ResultPropertyValueCollection">
      <apidata name="ResultPropertyValueCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ResultPropertyValueCollection.Contains(System.Object)" />
        <element api="M:System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)" />
        <element api="M:System.DirectoryServices.ResultPropertyValueCollection.CopyTo(System.Object[],System.Int32)" />
        <element api="P:System.DirectoryServices.ResultPropertyValueCollection.Item(System.Int32)" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="System.Collections.ICollection.CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList">
          <apidata name="InnerList" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
          <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
          <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ResultPropertyValueCollection.Contains(System.Object)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ResultPropertyValueCollection.CopyTo(System.Object[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="values">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ResultPropertyValueCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.SchemaNameCollection">
      <apidata name="SchemaNameCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.IList" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.DirectoryServices.SchemaNameCollection.Add(System.String)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.String[])" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.DirectoryServices.SchemaNameCollection)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.Clear" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.Contains(System.String)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.CopyTo(System.String[],System.Int32)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.GetEnumerator" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.IndexOf(System.String)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.Insert(System.Int32,System.String)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.Remove(System.String)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.RemoveAt(System.Int32)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Remove(System.Object)" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.Item(System.Int32)" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.Count" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsReadOnly" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsFixedSize" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.Add(System.String)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.DirectoryServices.SchemaNameCollection)">
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.String[])">
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.Clear">
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.Contains(System.String)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.CopyTo(System.String[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="stringArray">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.SchemaNameCollection.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.IndexOf(System.String)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.Insert(System.Int32,System.String)">
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.SchemaNameCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.Remove(System.String)">
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.RemoveAt(System.Int32)">
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <apidata name="System.Collections.ICollection.CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#IsSynchronized">
      <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot">
      <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Add(System.Object)">
      <apidata name="System.Collections.IList.Add" group="member" subgroup="method" />
      <memberdata visibility="private" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Add(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Contains(System.Object)">
      <apidata name="System.Collections.IList.Contains" group="member" subgroup="method" />
      <memberdata visibility="private" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Contains(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IndexOf(System.Object)">
      <apidata name="System.Collections.IList.IndexOf" group="member" subgroup="method" />
      <memberdata visibility="private" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.IndexOf(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <apidata name="System.Collections.IList.Insert" group="member" subgroup="method" />
      <memberdata visibility="private" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Insert(System.Int32,System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsFixedSize">
      <apidata name="System.Collections.IList.IsFixedSize" group="member" subgroup="property" />
      <memberdata visibility="private" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsFixedSize">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsReadOnly">
      <apidata name="System.Collections.IList.IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="private" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsReadOnly">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Item(System.Int32)">
      <apidata name="System.Collections.IList.Item" group="member" subgroup="property" />
      <memberdata visibility="private" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.Item(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Remove(System.Object)">
      <apidata name="System.Collections.IList.Remove" group="member" subgroup="method" />
      <memberdata visibility="private" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Remove(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.SearchResult">
      <apidata name="SearchResult" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.SearchResult.GetDirectoryEntry" />
        <element api="P:System.DirectoryServices.SearchResult.Path" />
        <element api="P:System.DirectoryServices.SearchResult.Properties" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.SearchResult.GetDirectoryEntry">
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResult" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.SearchResult.Path">
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResult" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.SearchResult.Properties">
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ResultPropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResult" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.SearchResultCollection">
      <apidata name="SearchResultCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.DirectoryServices.SearchResultCollection.Dispose" />
        <element api="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)" />
        <element api="M:System.DirectoryServices.SearchResultCollection.Finalize" />
        <element api="M:System.DirectoryServices.SearchResultCollection.GetEnumerator" />
        <element api="M:System.DirectoryServices.SearchResultCollection.Contains(System.DirectoryServices.SearchResult)" />
        <element api="M:System.DirectoryServices.SearchResultCollection.CopyTo(System.DirectoryServices.SearchResult[],System.Int32)" />
        <element api="M:System.DirectoryServices.SearchResultCollection.IndexOf(System.DirectoryServices.SearchResult)" />
        <element api="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.DirectoryServices.SearchResultCollection.Item(System.Int32)" />
        <element api="P:System.DirectoryServices.SearchResultCollection.Count" />
        <element api="P:System.DirectoryServices.SearchResultCollection.Handle" />
        <element api="P:System.DirectoryServices.SearchResultCollection.PropertiesLoaded" />
        <element api="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.SearchResultCollection.Contains(System.DirectoryServices.SearchResult)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.DirectoryServices.SearchResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SearchResultCollection.CopyTo(System.DirectoryServices.SearchResult[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="results">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.SearchResult" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.SearchResultCollection.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SearchResultCollection.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SearchResultCollection.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SearchResultCollection.GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.SearchResultCollection.Handle">
      <apidata name="Handle" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SearchResultCollection.IndexOf(System.DirectoryServices.SearchResult)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.DirectoryServices.SearchResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.SearchResultCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.SearchResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.SearchResultCollection.PropertiesLoaded">
      <apidata name="PropertiesLoaded" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <apidata name="System.Collections.ICollection.CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#IsSynchronized">
      <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot">
      <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.SearchScope">
      <apidata name="SearchScope" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.SearchScope.Base" />
        <element api="F:System.DirectoryServices.SearchScope.OneLevel" />
        <element api="F:System.DirectoryServices.SearchScope.Subtree" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.SearchScope.Base">
      <apidata name="Base" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SearchScope" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchScope" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.SearchScope.OneLevel">
      <apidata name="OneLevel" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SearchScope" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchScope" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.SearchScope.Subtree">
      <apidata name="Subtree" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SearchScope" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchScope" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.SecurityMasks">
      <apidata name="SecurityMasks" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.SecurityMasks.None" />
        <element api="F:System.DirectoryServices.SecurityMasks.Owner" />
        <element api="F:System.DirectoryServices.SecurityMasks.Group" />
        <element api="F:System.DirectoryServices.SecurityMasks.Dacl" />
        <element api="F:System.DirectoryServices.SecurityMasks.Sacl" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.DirectoryServices.SecurityMasks.Dacl">
      <apidata name="Dacl" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.SecurityMasks.Group">
      <apidata name="Group" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.SecurityMasks.None">
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.SecurityMasks.Owner">
      <apidata name="Owner" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.SecurityMasks.Sacl">
      <apidata name="Sacl" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.SortDirection">
      <apidata name="SortDirection" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.SortDirection.Ascending" />
        <element api="F:System.DirectoryServices.SortDirection.Descending" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.SortDirection.Ascending">
      <apidata name="Ascending" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SortDirection" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SortDirection" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.SortDirection.Descending">
      <apidata name="Descending" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SortDirection" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SortDirection" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.SortOption">
      <apidata name="SortOption" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.SortOption.#ctor" />
        <element api="M:System.DirectoryServices.SortOption.#ctor(System.String,System.DirectoryServices.SortDirection)" />
        <element api="P:System.DirectoryServices.SortOption.PropertyName" />
        <element api="P:System.DirectoryServices.SortOption.Direction" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ComponentModel.ExpandableObjectConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.SortOption.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SortOption" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SortOption.#ctor(System.String,System.DirectoryServices.SortDirection)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.DirectoryServices.SortDirection" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SortOption" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.SortOption.Direction">
      <apidata name="Direction" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.SortDirection" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SortOption" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.DirectoryServices.SortDirection" ref="false" />
            <enumValue>
              <field name="Ascending" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSSortDirection</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.SortOption.PropertyName">
      <apidata name="PropertyName" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SortOption" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSSortName</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="N:System.DirectoryServices.ActiveDirectory">
      <apidata name="System.DirectoryServices.ActiveDirectory" group="namespace" />
      <elements>
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" />
        <element api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <element api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" />
        <element api="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" />
        <element api="T:System.DirectoryServices.ActiveDirectory.PropertyTypes" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" />
        <element api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" />
        <element api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" />
        <element api="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" />
        <element api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" />
        <element api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" />
        <element api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" />
        <element api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.DomainMode" />
        <element api="T:System.DirectoryServices.ActiveDirectory.Domain" />
        <element api="T:System.DirectoryServices.ActiveDirectory.DomainCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" />
        <element api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent" />
        <element api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory" />
        <element api="T:System.DirectoryServices.ActiveDirectory.SyncUpdateCallback" />
        <element api="T:System.DirectoryServices.ActiveDirectory.DomainController" />
        <element api="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException" />
        <element api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ForestMode" />
        <element api="T:System.DirectoryServices.ActiveDirectory.Forest" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" />
        <element api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" />
        <element api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" />
        <element api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.NotificationStatus" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReplicationSpan" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" />
        <element api="T:System.DirectoryServices.ActiveDirectory.AdamRole" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel" />
        <element api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus" />
        <element api="T:System.DirectoryServices.ActiveDirectory.TopLevelName" />
        <element api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.TrustType" />
        <element api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType" />
        <element api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions" />
        <element api="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" />
      </elements>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport">
      <apidata name="ActiveDirectoryInterSiteTransport" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.FindByTransportType(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Save" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Dispose(System.Boolean)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.TransportType" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.IgnoreReplicationSchedule" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.BridgeAllSiteLinks" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.SiteLinks" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.SiteLinkBridges" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.BridgeAllSiteLinks">
      <apidata name="BridgeAllSiteLinks" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.FindByTransportType(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
      <apidata name="FindByTransportType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="transport">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.GetDirectoryEntry">
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.IgnoreReplicationSchedule">
      <apidata name="IgnoreReplicationSchedule" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Save">
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.SiteLinkBridges">
      <apidata name="SiteLinkBridges" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.SiteLinks">
      <apidata name="SiteLinks" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.TransportType">
      <apidata name="TransportType" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">
      <apidata name="ActiveDirectoryObjectExistsException" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor(System.String,System.Exception)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor(System.String,System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">
      <apidata name="ActiveDirectoryObjectNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.String,System.Type,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.String,System.Exception)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.Type" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.Name" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.String,System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.String,System.Type,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.Type">
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">
      <apidata name="ActiveDirectoryOperationException" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" ref="true" />
          <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String,System.Exception,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String,System.Exception)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.ErrorCode" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String,System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String,System.Exception,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="errorCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="errorCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.ErrorCode">
      <apidata name="ErrorCode" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition">
      <apidata name="ActiveDirectoryPartition" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
          <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
          <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.#ctor" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(System.Boolean)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.GetDirectoryEntry" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" static="false" special="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.GetDirectoryEntry">
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="true" virtual="true" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata">
      <apidata name="ActiveDirectoryReplicationMetadata" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.DictionaryBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.Contains(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.CopyTo(System.DirectoryServices.ActiveDirectory.AttributeMetadata[],System.Int32)" />
        <element api="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.Item(System.String)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.AttributeNames" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.Values" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)">
          <apidata name="System.Collections.IDictionary.Contains" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IDictionary.Contains(System.Object)">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <apidata name="System.Collections.IDictionary.Add" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.DictionaryBase.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)">
          <apidata name="System.Collections.IDictionary.Remove" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IDictionary.Remove(System.Object)">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.DictionaryBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <returns>
            <type api="T:System.Collections.IDictionaryEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator">
          <apidata name="System.Collections.IEnumerable.GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Collections.IEnumerable.GetEnumerator">
              <type api="T:System.Collections.IEnumerable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)">
          <apidata name="OnGet" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="currentValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)">
          <apidata name="OnSet" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="oldValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="newValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)">
          <apidata name="OnInsert" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.DictionaryBase.OnClear">
          <apidata name="OnClear" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)">
          <apidata name="OnRemove" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)">
          <apidata name="OnValidate" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)">
          <apidata name="OnSetComplete" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="oldValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="newValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)">
          <apidata name="OnInsertComplete" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.DictionaryBase.OnClearComplete">
          <apidata name="OnClearComplete" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)">
          <apidata name="OnRemoveComplete" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.DictionaryBase.InnerHashtable">
          <apidata name="InnerHashtable" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.Hashtable" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.DictionaryBase.Dictionary">
          <apidata name="Dictionary" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.DictionaryBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly">
          <apidata name="System.Collections.IDictionary.IsReadOnly" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IDictionary.IsReadOnly">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize">
          <apidata name="System.Collections.IDictionary.IsFixedSize" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IDictionary.IsFixedSize">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized">
          <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Keys">
          <apidata name="System.Collections.IDictionary.Keys" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.ICollection" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.IDictionary.Keys">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot">
          <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Values">
          <apidata name="System.Collections.IDictionary.Values" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.ICollection" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.IDictionary.Values">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)">
          <apidata name="System.Collections.IDictionary.Item" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.IDictionary.Item(System.Object)">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.DictionaryBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.AttributeNames">
      <apidata name="AttributeNames" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.Contains(System.String)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="attributeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.CopyTo(System.DirectoryServices.ActiveDirectory.AttributeMetadata[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.Item(System.String)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.Values">
      <apidata name="Values" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole">
      <apidata name="ActiveDirectoryRole" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.SchemaRole" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.NamingRole" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.PdcRole" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.RidRole" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.InfrastructureRole" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.InfrastructureRole">
      <apidata name="InfrastructureRole" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.NamingRole">
      <apidata name="NamingRole" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.PdcRole">
      <apidata name="PdcRole" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.RidRole">
      <apidata name="RidRole" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.SchemaRole">
      <apidata name="SchemaRole" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection">
      <apidata name="ActiveDirectoryRoleCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole[],System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.Item(System.Int32)" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="System.Collections.ICollection.CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList">
          <apidata name="InnerList" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
          <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
          <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="role">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="roles">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="role">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule">
      <apidata name="ActiveDirectorySchedule" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek[],System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule(System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="schedule">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule">
      <apidata name="RawSchedule" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <arrayOf rank="3">
          <type api="T:System.Boolean" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule">
      <apidata name="ResetSchedule" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule(System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)">
      <apidata name="SetDailySchedule" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="fromHour">
          <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
        </parameter>
        <parameter name="fromMinute">
          <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
        </parameter>
        <parameter name="toHour">
          <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
        </parameter>
        <parameter name="toMinute">
          <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)">
      <apidata name="SetSchedule" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="day">
          <type api="T:System.DayOfWeek" ref="false" />
        </parameter>
        <parameter name="fromHour">
          <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
        </parameter>
        <parameter name="fromMinute">
          <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
        </parameter>
        <parameter name="toHour">
          <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
        </parameter>
        <parameter name="toMinute">
          <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek[],System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)">
      <apidata name="SetSchedule" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="days">
          <arrayOf rank="1">
            <type api="T:System.DayOfWeek" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="fromHour">
          <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
        </parameter>
        <parameter name="fromMinute">
          <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
        </parameter>
        <parameter name="toHour">
          <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
        </parameter>
        <parameter name="toMinute">
          <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema">
      <apidata name="ActiveDirectorySchema" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose(System.Boolean)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetSchema(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.RefreshSchema" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindClass(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctClass(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses(System.DirectoryServices.ActiveDirectory.SchemaClassType)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctClasses" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindProperty(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctProperty(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties(System.DirectoryServices.ActiveDirectory.PropertyTypes)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctProperties" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetCurrentSchema" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.SchemaRoleOwner" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(System.Boolean)">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses">
      <apidata name="FindAllClasses" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses(System.DirectoryServices.ActiveDirectory.SchemaClassType)">
      <apidata name="FindAllClasses" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctClasses">
      <apidata name="FindAllDefunctClasses" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctProperties">
      <apidata name="FindAllDefunctProperties" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties">
      <apidata name="FindAllProperties" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties(System.DirectoryServices.ActiveDirectory.PropertyTypes)">
      <apidata name="FindAllProperties" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.DirectoryServices.ActiveDirectory.PropertyTypes" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindClass(System.String)">
      <apidata name="FindClass" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="ldapDisplayName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctClass(System.String)">
      <apidata name="FindDefunctClass" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="commonName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctProperty(System.String)">
      <apidata name="FindDefunctProperty" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="commonName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindProperty(System.String)">
      <apidata name="FindProperty" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="ldapDisplayName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetCurrentSchema">
      <apidata name="GetCurrentSchema" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetDirectoryEntry">
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.GetDirectoryEntry">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetSchema(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <apidata name="GetSchema" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.RefreshSchema">
      <apidata name="RefreshSchema" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.SchemaRoleOwner">
      <apidata name="SchemaRoleOwner" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass">
      <apidata name="ActiveDirectorySchemaClass" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Dispose(System.Boolean)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.GetAllProperties" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Save" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.ToString" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.GetDirectoryEntry" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.CommonName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Oid" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Description" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.IsDefunct" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.PossibleSuperiors" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.PossibleInferiors" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.MandatoryProperties" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.OptionalProperties" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.AuxiliaryClasses" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.SubClassOf" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Type" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.SchemaGuid" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.DefaultObjectSecurityDescriptor" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="ldapDisplayName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.AuxiliaryClasses">
      <apidata name="AuxiliaryClasses" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.CommonName">
      <apidata name="CommonName" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.DefaultObjectSecurityDescriptor">
      <apidata name="DefaultObjectSecurityDescriptor" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Description">
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <apidata name="FindByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="ldapDisplayName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.GetAllProperties">
      <apidata name="GetAllProperties" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.GetDirectoryEntry">
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.IsDefunct">
      <apidata name="IsDefunct" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.MandatoryProperties">
      <apidata name="MandatoryProperties" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Oid">
      <apidata name="Oid" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.OptionalProperties">
      <apidata name="OptionalProperties" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.PossibleInferiors">
      <apidata name="PossibleInferiors" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.PossibleSuperiors">
      <apidata name="PossibleSuperiors" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Save">
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.SchemaGuid">
      <apidata name="SchemaGuid" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.SubClassOf">
      <apidata name="SubClassOf" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Type">
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection">
      <apidata name="ActiveDirectorySchemaClassCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.CollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass[])" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnClearComplete" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnValidate(System.Object)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Item(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
          <apidata name="RemoveAt" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="System.Collections.ICollection.CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)">
          <apidata name="System.Collections.IList.Contains" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.Contains(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
          <apidata name="System.Collections.IList.Add" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.Add(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <apidata name="System.Collections.IList.Remove" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IList.Remove(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)">
          <apidata name="System.Collections.IList.IndexOf" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.IndexOf(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <apidata name="System.Collections.IList.Insert" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IList.Insert(System.Int32,System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <apidata name="OnSet" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="oldValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="newValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <apidata name="OnInsert" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.OnClear">
          <apidata name="OnClear" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <apidata name="OnRemove" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.InnerList">
          <apidata name="InnerList" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.List">
          <apidata name="List" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.IList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.Capacity">
          <apidata name="Capacity" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Collections.CollectionBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly">
          <apidata name="System.Collections.IList.IsReadOnly" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.IsReadOnly">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize">
          <apidata name="System.Collections.IList.IsFixedSize" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.IsFixedSize">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
          <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
          <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
          <apidata name="System.Collections.IList.Item" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.Item(System.Int32)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="schemaClass">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass[])">
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="schemaClasses">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection)">
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="schemaClasses">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection)">
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="schemaClasses">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="schemaClass">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="schemaClasses">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="schemaClass">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="schemaClass">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnClearComplete">
      <apidata name="OnClearComplete" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClearComplete">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnInsertComplete(System.Int32,System.Object)">
      <apidata name="OnInsertComplete" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnRemoveComplete(System.Int32,System.Object)">
      <apidata name="OnRemoveComplete" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <apidata name="OnSetComplete" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="oldValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnValidate(System.Object)">
      <apidata name="OnValidate" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="schemaClass">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty">
      <apidata name="ActiveDirectorySchemaProperty" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Dispose(System.Boolean)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Save" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.ToString" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.GetDirectoryEntry" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.CommonName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Oid" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Syntax" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Description" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsSingleValued" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsIndexed" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsIndexedOverContainer" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsInAnr" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsOnTombstonedObject" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsTupleIndexed" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsInGlobalCatalog" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.RangeLower" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.RangeUpper" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsDefunct" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Link" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.LinkId" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.SchemaGuid" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="ldapDisplayName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.CommonName">
      <apidata name="CommonName" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Description">
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <apidata name="FindByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="ldapDisplayName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.GetDirectoryEntry">
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsDefunct">
      <apidata name="IsDefunct" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsInAnr">
      <apidata name="IsInAnr" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsIndexed">
      <apidata name="IsIndexed" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsIndexedOverContainer">
      <apidata name="IsIndexedOverContainer" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsInGlobalCatalog">
      <apidata name="IsInGlobalCatalog" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsOnTombstonedObject">
      <apidata name="IsOnTombstonedObject" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsSingleValued">
      <apidata name="IsSingleValued" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsTupleIndexed">
      <apidata name="IsTupleIndexed" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Link">
      <apidata name="Link" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.LinkId">
      <apidata name="LinkId" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Oid">
      <apidata name="Oid" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.RangeLower">
      <apidata name="RangeLower" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.RangeUpper">
      <apidata name="RangeUpper" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Save">
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.SchemaGuid">
      <apidata name="SchemaGuid" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Syntax">
      <apidata name="Syntax" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection">
      <apidata name="ActiveDirectorySchemaPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.CollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty[])" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnClearComplete" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnValidate(System.Object)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Item(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
          <apidata name="RemoveAt" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="System.Collections.ICollection.CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)">
          <apidata name="System.Collections.IList.Contains" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.Contains(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
          <apidata name="System.Collections.IList.Add" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.Add(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <apidata name="System.Collections.IList.Remove" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IList.Remove(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)">
          <apidata name="System.Collections.IList.IndexOf" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.IndexOf(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <apidata name="System.Collections.IList.Insert" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IList.Insert(System.Int32,System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <apidata name="OnSet" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="oldValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="newValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <apidata name="OnInsert" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.OnClear">
          <apidata name="OnClear" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <apidata name="OnRemove" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.InnerList">
          <apidata name="InnerList" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.List">
          <apidata name="List" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.IList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.Capacity">
          <apidata name="Capacity" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Collections.CollectionBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly">
          <apidata name="System.Collections.IList.IsReadOnly" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.IsReadOnly">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize">
          <apidata name="System.Collections.IList.IsFixedSize" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.IsFixedSize">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
          <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
          <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
          <apidata name="System.Collections.IList.Item" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.Item(System.Int32)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="schemaProperty">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty[])">
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="properties">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection)">
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="properties">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection)">
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="properties">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="schemaProperty">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="properties">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="schemaProperty">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="schemaProperty">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnClearComplete">
      <apidata name="OnClearComplete" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClearComplete">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnInsertComplete(System.Int32,System.Object)">
      <apidata name="OnInsertComplete" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnRemoveComplete(System.Int32,System.Object)">
      <apidata name="OnRemoveComplete" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <apidata name="OnSetComplete" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="oldValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnValidate(System.Object)">
      <apidata name="OnValidate" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="schemaProperty">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">
      <apidata name="ActiveDirectoryServerDownException" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String,System.Exception,System.Int32,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String,System.Int32,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String,System.Exception)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.ErrorCode" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.Message" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String,System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String,System.Exception,System.Int32,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="errorCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String,System.Int32,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="errorCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.ErrorCode">
      <apidata name="ErrorCode" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.Message">
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="P:System.Exception.Message">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite">
      <apidata name="ActiveDirectorySite" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.GetComputerSite" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Save" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Delete" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.ToString" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Dispose(System.Boolean)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Domains" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Subnets" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Servers" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.AdjacentSites" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.SiteLinks" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.InterSiteTopologyGenerator" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Options" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Location" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.BridgeheadServers" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.PreferredSmtpBridgeheadServers" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.PreferredRpcBridgeheadServers" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.IntraSiteReplicationSchedule" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.AdjacentSites">
      <apidata name="AdjacentSites" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.BridgeheadServers">
      <apidata name="BridgeheadServers" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Delete">
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Domains">
      <apidata name="Domains" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <apidata name="FindByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.GetComputerSite">
      <apidata name="GetComputerSite" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.GetDirectoryEntry">
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.InterSiteTopologyGenerator">
      <apidata name="InterSiteTopologyGenerator" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.IntraSiteReplicationSchedule">
      <apidata name="IntraSiteReplicationSchedule" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Location">
      <apidata name="Location" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Options">
      <apidata name="Options" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.PreferredRpcBridgeheadServers">
      <apidata name="PreferredRpcBridgeheadServers" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.PreferredSmtpBridgeheadServers">
      <apidata name="PreferredSmtpBridgeheadServers" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Save">
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Servers">
      <apidata name="Servers" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.SiteLinks">
      <apidata name="SiteLinks" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Subnets">
      <apidata name="Subnets" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection">
      <apidata name="ActiveDirectorySiteCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.CollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite[])" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnClearComplete" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnValidate(System.Object)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Item(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
          <apidata name="RemoveAt" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="System.Collections.ICollection.CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)">
          <apidata name="System.Collections.IList.Contains" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.Contains(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
          <apidata name="System.Collections.IList.Add" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.Add(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <apidata name="System.Collections.IList.Remove" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IList.Remove(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)">
          <apidata name="System.Collections.IList.IndexOf" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.IndexOf(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <apidata name="System.Collections.IList.Insert" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IList.Insert(System.Int32,System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <apidata name="OnSet" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="oldValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="newValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <apidata name="OnInsert" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.OnClear">
          <apidata name="OnClear" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <apidata name="OnRemove" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.InnerList">
          <apidata name="InnerList" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.List">
          <apidata name="List" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.IList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.Capacity">
          <apidata name="Capacity" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Collections.CollectionBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly">
          <apidata name="System.Collections.IList.IsReadOnly" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.IsReadOnly">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize">
          <apidata name="System.Collections.IList.IsFixedSize" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.IsFixedSize">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
          <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
          <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
          <apidata name="System.Collections.IList.Item" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.Item(System.Int32)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="site">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite[])">
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="sites">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection)">
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="sites">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="site">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="site">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="site">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnClearComplete">
      <apidata name="OnClearComplete" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClearComplete">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnInsertComplete(System.Int32,System.Object)">
      <apidata name="OnInsertComplete" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnRemoveComplete(System.Int32,System.Object)">
      <apidata name="OnRemoveComplete" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <apidata name="OnSetComplete" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="oldValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnValidate(System.Object)">
      <apidata name="OnValidate" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="site">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink">
      <apidata name="ActiveDirectorySiteLink" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Save" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Delete" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.ToString" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Dispose(System.Boolean)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.TransportType" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Sites" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Cost" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.ReplicationInterval" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.ReciprocalReplicationEnabled" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.NotificationEnabled" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.DataCompressionEnabled" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.InterSiteReplicationSchedule" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteLinkName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteLinkName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="transport">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteLinkName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="transport">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
        </parameter>
        <parameter name="schedule">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Cost">
      <apidata name="Cost" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.DataCompressionEnabled">
      <apidata name="DataCompressionEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Delete">
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <apidata name="FindByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteLinkName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
      <apidata name="FindByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteLinkName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="transport">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.GetDirectoryEntry">
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.InterSiteReplicationSchedule">
      <apidata name="InterSiteReplicationSchedule" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.NotificationEnabled">
      <apidata name="NotificationEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.ReciprocalReplicationEnabled">
      <apidata name="ReciprocalReplicationEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.ReplicationInterval">
      <apidata name="ReplicationInterval" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Save">
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Sites">
      <apidata name="Sites" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.TransportType">
      <apidata name="TransportType" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge">
      <apidata name="ActiveDirectorySiteLinkBridge" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Save" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Delete" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.ToString" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Dispose(System.Boolean)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.SiteLinks" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.TransportType" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="bridgeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="bridgeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="transport">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Delete">
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <apidata name="FindByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="bridgeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
      <apidata name="FindByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="bridgeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="transport">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.GetDirectoryEntry">
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Save">
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.SiteLinks">
      <apidata name="SiteLinks" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.TransportType">
      <apidata name="TransportType" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection">
      <apidata name="ActiveDirectorySiteLinkCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.CollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink[])" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnClearComplete" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnValidate(System.Object)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Item(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
          <apidata name="RemoveAt" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="System.Collections.ICollection.CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)">
          <apidata name="System.Collections.IList.Contains" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.Contains(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
          <apidata name="System.Collections.IList.Add" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.Add(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <apidata name="System.Collections.IList.Remove" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IList.Remove(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)">
          <apidata name="System.Collections.IList.IndexOf" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.IndexOf(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <apidata name="System.Collections.IList.Insert" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IList.Insert(System.Int32,System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <apidata name="OnSet" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="oldValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="newValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <apidata name="OnInsert" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.OnClear">
          <apidata name="OnClear" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <apidata name="OnRemove" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.InnerList">
          <apidata name="InnerList" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.List">
          <apidata name="List" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.IList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.Capacity">
          <apidata name="Capacity" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Collections.CollectionBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly">
          <apidata name="System.Collections.IList.IsReadOnly" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.IsReadOnly">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize">
          <apidata name="System.Collections.IList.IsFixedSize" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.IsFixedSize">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
          <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
          <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
          <apidata name="System.Collections.IList.Item" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.Item(System.Int32)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="link">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink[])">
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="links">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection)">
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="links">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="link">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="link">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="link">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnClearComplete">
      <apidata name="OnClearComplete" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClearComplete">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnInsertComplete(System.Int32,System.Object)">
      <apidata name="OnInsertComplete" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnRemoveComplete(System.Int32,System.Object)">
      <apidata name="OnRemoveComplete" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <apidata name="OnSetComplete" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="oldValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnValidate(System.Object)">
      <apidata name="OnValidate" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="link">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions">
      <apidata name="ActiveDirectorySiteOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.None" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.AutoTopologyDisabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.TopologyCleanupDisabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.AutoMinimumHopDisabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.StaleServerDetectDisabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.AutoInterSiteTopologyDisabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.GroupMembershipCachingEnabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.ForceKccWindows2003Behavior" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.UseWindows2000IstgElection" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.RandomBridgeHeaderServerSelectionDisabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.UseHashingForReplicationSchedule" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.RedundantServerTopologyEnabled" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.AutoInterSiteTopologyDisabled">
      <apidata name="AutoInterSiteTopologyDisabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.AutoMinimumHopDisabled">
      <apidata name="AutoMinimumHopDisabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.AutoTopologyDisabled">
      <apidata name="AutoTopologyDisabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.ForceKccWindows2003Behavior">
      <apidata name="ForceKccWindows2003Behavior" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.GroupMembershipCachingEnabled">
      <apidata name="GroupMembershipCachingEnabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.None">
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.RandomBridgeHeaderServerSelectionDisabled">
      <apidata name="RandomBridgeHeaderServerSelectionDisabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.RedundantServerTopologyEnabled">
      <apidata name="RedundantServerTopologyEnabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.StaleServerDetectDisabled">
      <apidata name="StaleServerDetectDisabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.TopologyCleanupDisabled">
      <apidata name="TopologyCleanupDisabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.UseHashingForReplicationSchedule">
      <apidata name="UseHashingForReplicationSchedule" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.UseWindows2000IstgElection">
      <apidata name="UseWindows2000IstgElection" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet">
      <apidata name="ActiveDirectorySubnet" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Save" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Delete" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.ToString" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose(System.Boolean)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Site" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Location" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="subnetName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="subnetName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Delete">
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <apidata name="FindByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="subnetName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.GetDirectoryEntry">
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Location">
      <apidata name="Location" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Save">
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Site">
      <apidata name="Site" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection">
      <apidata name="ActiveDirectorySubnetCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.CollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet[])" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnClear" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnClearComplete" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnValidate(System.Object)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Item(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
          <apidata name="RemoveAt" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="System.Collections.ICollection.CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)">
          <apidata name="System.Collections.IList.Contains" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.Contains(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
          <apidata name="System.Collections.IList.Add" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.Add(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <apidata name="System.Collections.IList.Remove" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IList.Remove(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)">
          <apidata name="System.Collections.IList.IndexOf" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.IndexOf(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <apidata name="System.Collections.IList.Insert" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IList.Insert(System.Int32,System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <apidata name="OnSet" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="oldValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="newValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <apidata name="OnInsert" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <apidata name="OnRemove" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.InnerList">
          <apidata name="InnerList" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.List">
          <apidata name="List" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.IList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.Capacity">
          <apidata name="Capacity" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Collections.CollectionBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly">
          <apidata name="System.Collections.IList.IsReadOnly" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.IsReadOnly">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize">
          <apidata name="System.Collections.IList.IsFixedSize" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.IsFixedSize">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
          <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
          <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
          <apidata name="System.Collections.IList.Item" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.Item(System.Int32)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="subnet">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet[])">
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="subnets">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection)">
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="subnets">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="subnet">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="subnet">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)">
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="subnet">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnClear">
      <apidata name="OnClear" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClear">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnClearComplete">
      <apidata name="OnClearComplete" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClearComplete">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnInsertComplete(System.Int32,System.Object)">
      <apidata name="OnInsertComplete" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnRemoveComplete(System.Int32,System.Object)">
      <apidata name="OnRemoveComplete" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <apidata name="OnSetComplete" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="oldValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnValidate(System.Object)">
      <apidata name="OnValidate" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)">
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="subnet">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax">
      <apidata name="ActiveDirectorySyntax" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.CaseExactString" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.CaseIgnoreString" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.NumericString" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.DirectoryString" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.OctetString" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.SecurityDescriptor" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Int" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Int64" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Bool" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Oid" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.GeneralizedTime" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.UtcTime" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.DN" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.DNWithBinary" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.DNWithString" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Enumeration" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.IA5String" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.PrintableString" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Sid" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.AccessPointDN" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.ORName" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.PresentationAddress" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.ReplicaLink" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.AccessPointDN">
      <apidata name="AccessPointDN" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Bool">
      <apidata name="Bool" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.CaseExactString">
      <apidata name="CaseExactString" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.CaseIgnoreString">
      <apidata name="CaseIgnoreString" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.DirectoryString">
      <apidata name="DirectoryString" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.DN">
      <apidata name="DN" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.DNWithBinary">
      <apidata name="DNWithBinary" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.DNWithString">
      <apidata name="DNWithString" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Enumeration">
      <apidata name="Enumeration" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.GeneralizedTime">
      <apidata name="GeneralizedTime" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.IA5String">
      <apidata name="IA5String" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Int">
      <apidata name="Int" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Int64">
      <apidata name="Int64" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.NumericString">
      <apidata name="NumericString" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.OctetString">
      <apidata name="OctetString" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Oid">
      <apidata name="Oid" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.ORName">
      <apidata name="ORName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.PresentationAddress">
      <apidata name="PresentationAddress" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.PrintableString">
      <apidata name="PrintableString" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.ReplicaLink">
      <apidata name="ReplicaLink" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.SecurityDescriptor">
      <apidata name="SecurityDescriptor" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Sid">
      <apidata name="Sid" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.UtcTime">
      <apidata name="UtcTime" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType">
      <apidata name="ActiveDirectoryTransportType" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType.Rpc" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType.Smtp" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType.Rpc">
      <apidata name="Rpc" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType.Smtp">
      <apidata name="Smtp" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.AdamInstance">
      <apidata name="AdamInstance" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.Finalize" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.Dispose(System.Boolean)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetAdamInstance(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.AdamRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.AdamRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.CheckReplicationConsistency" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationCursors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationOperationInformation" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationNeighbors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetAllReplicationNeighbors" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationConnectionFailures" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationMetadata(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromServer(System.String,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.TriggerSyncReplicaFromNeighbors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.Save" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.ConfigurationSet" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.HostName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.LdapPort" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.SslPort" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.Roles" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.DefaultPartition" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.IPAddress" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.SiteName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.SyncFromAllServersCallback" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.InboundConnections" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.OutboundConnections" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.CheckReplicationConsistency">
      <apidata name="CheckReplicationConsistency" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.CheckReplicationConsistency">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamInstance.ConfigurationSet">
      <apidata name="ConfigurationSet" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamInstance.DefaultPartition">
      <apidata name="DefaultPartition" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose(System.Boolean)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Finalize">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <apidata name="FindAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="partitionName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <apidata name="FindOne" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="partitionName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetAdamInstance(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <apidata name="GetAdamInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetAllReplicationNeighbors">
      <apidata name="GetAllReplicationNeighbors" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetAllReplicationNeighbors">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationConnectionFailures">
      <apidata name="GetReplicationConnectionFailures" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationConnectionFailures">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationCursors(System.String)">
      <apidata name="GetReplicationCursors" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationCursors(System.String)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationMetadata(System.String)">
      <apidata name="GetReplicationMetadata" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationMetadata(System.String)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="objectPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationNeighbors(System.String)">
      <apidata name="GetReplicationNeighbors" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationNeighbors(System.String)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationOperationInformation">
      <apidata name="GetReplicationOperationInformation" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationOperationInformation">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamInstance.HostName">
      <apidata name="HostName" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamInstance.InboundConnections">
      <apidata name="InboundConnections" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.InboundConnections">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamInstance.IPAddress">
      <apidata name="IPAddress" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.IPAddress">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamInstance.LdapPort">
      <apidata name="LdapPort" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamInstance.OutboundConnections">
      <apidata name="OutboundConnections" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.OutboundConnections">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamInstance.Roles">
      <apidata name="Roles" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.Save">
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.AdamRole)">
      <apidata name="SeizeRoleOwnership" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="role">
          <type api="T:System.DirectoryServices.ActiveDirectory.AdamRole" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamInstance.SiteName">
      <apidata name="SiteName" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.SiteName">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamInstance.SslPort">
      <apidata name="SslPort" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamInstance.SyncFromAllServersCallback">
      <apidata name="SyncFromAllServersCallback" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncFromAllServersCallback">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncUpdateCallback" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)">
      <apidata name="SyncReplicaFromAllServers" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromServer(System.String,System.String)">
      <apidata name="SyncReplicaFromServer" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromServer(System.String,System.String)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sourceServer">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.AdamRole)">
      <apidata name="TransferRoleOwnership" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="role">
          <type api="T:System.DirectoryServices.ActiveDirectory.AdamRole" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.TriggerSyncReplicaFromNeighbors(System.String)">
      <apidata name="TriggerSyncReplicaFromNeighbors" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.TriggerSyncReplicaFromNeighbors(System.String)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection">
      <apidata name="AdamInstanceCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.Contains(System.DirectoryServices.ActiveDirectory.AdamInstance)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AdamInstance)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AdamInstance[],System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.Item(System.Int32)" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="System.Collections.ICollection.CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList">
          <apidata name="InnerList" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
          <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
          <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.Contains(System.DirectoryServices.ActiveDirectory.AdamInstance)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="adamInstance">
          <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AdamInstance[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="adamInstances">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AdamInstance)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="adamInstance">
          <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.AdamRole">
      <apidata name="AdamRole" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.AdamRole.SchemaRole" />
        <element api="F:System.DirectoryServices.ActiveDirectory.AdamRole.NamingRole" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.AdamRole.NamingRole">
      <apidata name="NamingRole" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamRole" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamRole" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.AdamRole.SchemaRole">
      <apidata name="SchemaRole" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamRole" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamRole" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection">
      <apidata name="AdamRoleCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Contains(System.DirectoryServices.ActiveDirectory.AdamRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AdamRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AdamRole[],System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Item(System.Int32)" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="System.Collections.ICollection.CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList">
          <apidata name="InnerList" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
          <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
          <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Contains(System.DirectoryServices.ActiveDirectory.AdamRole)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="role">
          <type api="T:System.DirectoryServices.ActiveDirectory.AdamRole" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AdamRole[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="roles">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.AdamRole" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AdamRole)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="role">
          <type api="T:System.DirectoryServices.ActiveDirectory.AdamRole" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamRole" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition">
      <apidata name="ApplicationPartition" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Dispose(System.Boolean)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.GetApplicationPartition(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.Boolean)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.String,System.Boolean)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDirectoryServers" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDirectoryServers(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDiscoverableDirectoryServers" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDiscoverableDirectoryServers(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Delete" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Save" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.GetDirectoryEntry" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ApplicationPartition.DirectoryServers" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ApplicationPartition.SecurityReferenceDomain" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="distinguishedName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="distinguishedName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="objectClass">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Delete">
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ApplicationPartition.DirectoryServers">
      <apidata name="DirectoryServers" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(System.Boolean)">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDirectoryServers">
      <apidata name="FindAllDirectoryServers" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDirectoryServers(System.String)">
      <apidata name="FindAllDirectoryServers" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDiscoverableDirectoryServers">
      <apidata name="FindAllDiscoverableDirectoryServers" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDiscoverableDirectoryServers(System.String)">
      <apidata name="FindAllDiscoverableDirectoryServers" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <apidata name="FindByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="distinguishedName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer">
      <apidata name="FindDirectoryServer" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.Boolean)">
      <apidata name="FindDirectoryServer" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="forceRediscovery">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.String)">
      <apidata name="FindDirectoryServer" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.String,System.Boolean)">
      <apidata name="FindDirectoryServer" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="forceRediscovery">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.GetApplicationPartition(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <apidata name="GetApplicationPartition" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.GetDirectoryEntry">
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.GetDirectoryEntry">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Save">
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ApplicationPartition.SecurityReferenceDomain">
      <apidata name="SecurityReferenceDomain" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection">
      <apidata name="ApplicationPartitionCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.Contains(System.DirectoryServices.ActiveDirectory.ApplicationPartition)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ApplicationPartition)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ApplicationPartition[],System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.Item(System.Int32)" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="System.Collections.ICollection.CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList">
          <apidata name="InnerList" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
          <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
          <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.Contains(System.DirectoryServices.ActiveDirectory.ApplicationPartition)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="applicationPartition">
          <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ApplicationPartition[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="applicationPartitions">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ApplicationPartition)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="applicationPartition">
          <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata">
      <apidata name="AttributeMetadata" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.Version" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.LastOriginatingChangeTime" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.LastOriginatingInvocationId" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.OriginatingChangeUsn" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.LocalChangeUsn" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.OriginatingServer" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.LastOriginatingChangeTime">
      <apidata name="LastOriginatingChangeTime" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.LastOriginatingInvocationId">
      <apidata name="LastOriginatingInvocationId" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.LocalChangeUsn">
      <apidata name="LocalChangeUsn" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.OriginatingChangeUsn">
      <apidata name="OriginatingChangeUsn" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.OriginatingServer">
      <apidata name="OriginatingServer" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.Version">
      <apidata name="Version" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection">
      <apidata name="AttributeMetadataCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.Contains(System.DirectoryServices.ActiveDirectory.AttributeMetadata)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AttributeMetadata)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AttributeMetadata[],System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.Item(System.Int32)" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="System.Collections.ICollection.CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList">
          <apidata name="InnerList" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
          <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
          <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.Contains(System.DirectoryServices.ActiveDirectory.AttributeMetadata)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="metadata">
          <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AttributeMetadata[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="metadata">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AttributeMetadata)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="metadata">
          <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet">
      <apidata name="ConfigurationSet" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose(System.Boolean)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetConfigurationSet(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetSecurityLevel" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.SetSecurityLevel(System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Sites" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.AdamInstances" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.ApplicationPartitions" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Schema" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.SchemaRoleOwner" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.NamingRoleOwner" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.AdamInstances">
      <apidata name="AdamInstances" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.ApplicationPartitions">
      <apidata name="ApplicationPartitions" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance">
      <apidata name="FindAdamInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String)">
      <apidata name="FindAdamInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="partitionName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String,System.String)">
      <apidata name="FindAdamInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="partitionName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances">
      <apidata name="FindAllAdamInstances" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String)">
      <apidata name="FindAllAdamInstances" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="partitionName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String,System.String)">
      <apidata name="FindAllAdamInstances" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="partitionName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetConfigurationSet(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <apidata name="GetConfigurationSet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetDirectoryEntry">
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetSecurityLevel">
      <apidata name="GetSecurityLevel" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.NamingRoleOwner">
      <apidata name="NamingRoleOwner" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Schema">
      <apidata name="Schema" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.SchemaRoleOwner">
      <apidata name="SchemaRoleOwner" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.SetSecurityLevel(System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel)">
      <apidata name="SetSecurityLevel" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="securityLevel">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Sites">
      <apidata name="Sites" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.DirectoryContext">
      <apidata name="DirectoryContext" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String,System.String,System.String)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryContext.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryContext.UserName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryContext.ContextType" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.EnvironmentPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="Assert" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="contextType">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="contextType">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="contextType">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String,System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="contextType">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DirectoryContext.ContextType">
      <apidata name="ContextType" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DirectoryContext.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DirectoryContext.UserName">
      <apidata name="UserName" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType">
      <apidata name="DirectoryContextType" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.Domain" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.Forest" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.DirectoryServer" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.ConfigurationSet" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.ApplicationPartition" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.ApplicationPartition">
      <apidata name="ApplicationPartition" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.ConfigurationSet">
      <apidata name="ConfigurationSet" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.DirectoryServer">
      <apidata name="DirectoryServer" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.Domain">
      <apidata name="Domain" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.Forest">
      <apidata name="Forest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.DirectoryServer">
      <apidata name="DirectoryServer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
          <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.#ctor" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Finalize" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose(System.Boolean)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.CheckReplicationConsistency" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationCursors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationOperationInformation" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationNeighbors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetAllReplicationNeighbors" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationConnectionFailures" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationMetadata(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromServer(System.String,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.TriggerSyncReplicaFromNeighbors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.IPAddress" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.SiteName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncFromAllServersCallback" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.InboundConnections" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.OutboundConnections" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" static="false" special="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.CheckReplicationConsistency">
      <apidata name="CheckReplicationConsistency" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="true" virtual="true" final="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetAllReplicationNeighbors">
      <apidata name="GetAllReplicationNeighbors" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="true" virtual="true" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry">
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationConnectionFailures">
      <apidata name="GetReplicationConnectionFailures" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="true" virtual="true" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationCursors(System.String)">
      <apidata name="GetReplicationCursors" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="true" virtual="true" final="false" />
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationMetadata(System.String)">
      <apidata name="GetReplicationMetadata" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="true" virtual="true" final="false" />
      <parameters>
        <parameter name="objectPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationNeighbors(System.String)">
      <apidata name="GetReplicationNeighbors" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="true" virtual="true" final="false" />
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationOperationInformation">
      <apidata name="GetReplicationOperationInformation" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="true" virtual="true" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.InboundConnections">
      <apidata name="InboundConnections" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="true" virtual="true" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.IPAddress">
      <apidata name="IPAddress" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="true" virtual="true" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(System.String)">
      <apidata name="MoveToAnotherSite" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.OutboundConnections">
      <apidata name="OutboundConnections" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="true" virtual="true" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions">
      <apidata name="Partitions" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.SiteName">
      <apidata name="SiteName" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="true" virtual="true" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncFromAllServersCallback">
      <apidata name="SyncFromAllServersCallback" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="true" virtual="true" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncUpdateCallback" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)">
      <apidata name="SyncReplicaFromAllServers" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="true" virtual="true" final="false" />
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromServer(System.String,System.String)">
      <apidata name="SyncReplicaFromServer" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="true" virtual="true" final="false" />
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sourceServer">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.TriggerSyncReplicaFromNeighbors(System.String)">
      <apidata name="TriggerSyncReplicaFromNeighbors" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="true" virtual="true" final="false" />
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection">
      <apidata name="DirectoryServerCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.CollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Add(System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.AddRange(System.DirectoryServices.ActiveDirectory.DirectoryServer[])" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Contains(System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.CopyTo(System.DirectoryServices.ActiveDirectory.DirectoryServer[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.IndexOf(System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Remove(System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnClear" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnClearComplete" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnValidate(System.Object)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Item(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
          <apidata name="RemoveAt" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="System.Collections.ICollection.CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)">
          <apidata name="System.Collections.IList.Contains" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.Contains(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
          <apidata name="System.Collections.IList.Add" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.Add(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <apidata name="System.Collections.IList.Remove" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IList.Remove(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)">
          <apidata name="System.Collections.IList.IndexOf" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.IndexOf(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <apidata name="System.Collections.IList.Insert" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IList.Insert(System.Int32,System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <apidata name="OnSet" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="oldValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="newValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <apidata name="OnInsert" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <apidata name="OnRemove" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.InnerList">
          <apidata name="InnerList" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.List">
          <apidata name="List" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.IList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.Capacity">
          <apidata name="Capacity" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Collections.CollectionBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly">
          <apidata name="System.Collections.IList.IsReadOnly" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.IsReadOnly">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize">
          <apidata name="System.Collections.IList.IsFixedSize" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.IsFixedSize">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
          <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
          <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
          <apidata name="System.Collections.IList.Item" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.Item(System.Int32)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.CollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Add(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="server">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.AddRange(System.DirectoryServices.ActiveDirectory.DirectoryServer[])">
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="servers">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Contains(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="server">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.CopyTo(System.DirectoryServices.ActiveDirectory.DirectoryServer[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.IndexOf(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="server">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="server">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnClear">
      <apidata name="OnClear" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClear">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnClearComplete">
      <apidata name="OnClearComplete" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClearComplete">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnInsertComplete(System.Int32,System.Object)">
      <apidata name="OnInsertComplete" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnRemoveComplete(System.Int32,System.Object)">
      <apidata name="OnRemoveComplete" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <apidata name="OnSetComplete" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="oldValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnValidate(System.Object)">
      <apidata name="OnValidate" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Remove(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="server">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.Domain">
      <apidata name="Domain" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetDomain(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality(System.DirectoryServices.ActiveDirectory.DomainMode)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(System.String,System.Boolean)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(System.String,System.Boolean)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.Forest" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.DomainControllers" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.Children" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.DomainMode" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.Parent" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(System.Boolean)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Domain.Children">
      <apidata name="Children" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)">
      <apidata name="CreateLocalSideOfTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="targetDomainName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
        </parameter>
        <parameter name="trustPassword">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)">
      <apidata name="CreateTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="targetDomain">
          <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(System.String)">
      <apidata name="DeleteLocalSideOfTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="targetDomainName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)">
      <apidata name="DeleteTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="targetDomain">
          <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Domain.DomainControllers">
      <apidata name="DomainControllers" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Domain.DomainMode">
      <apidata name="DomainMode" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers">
      <apidata name="FindAllDiscoverableDomainControllers" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(System.String)">
      <apidata name="FindAllDiscoverableDomainControllers" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers">
      <apidata name="FindAllDomainControllers" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(System.String)">
      <apidata name="FindAllDomainControllers" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController">
      <apidata name="FindDomainController" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <apidata name="FindDomainController" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="flag">
          <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String)">
      <apidata name="FindDomainController" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <apidata name="FindDomainController" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="flag">
          <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Domain.Forest">
      <apidata name="Forest" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships">
      <apidata name="GetAllTrustRelationships" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain">
      <apidata name="GetComputerDomain" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain">
      <apidata name="GetCurrentDomain" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry">
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.GetDirectoryEntry">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.GetDomain(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <apidata name="GetDomain" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(System.String)">
      <apidata name="GetSelectiveAuthenticationStatus" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="targetDomainName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(System.String)">
      <apidata name="GetSidFilteringStatus" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="targetDomainName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(System.String)">
      <apidata name="GetTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="targetDomainName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner">
      <apidata name="InfrastructureRoleOwner" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Domain.Parent">
      <apidata name="Parent" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner">
      <apidata name="PdcRoleOwner" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality(System.DirectoryServices.ActiveDirectory.DomainMode)">
      <apidata name="RaiseDomainFunctionality" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="domainMode">
          <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)">
      <apidata name="RepairTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="targetDomain">
          <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner">
      <apidata name="RidRoleOwner" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(System.String,System.Boolean)">
      <apidata name="SetSelectiveAuthenticationStatus" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="targetDomainName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="enable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(System.String,System.Boolean)">
      <apidata name="SetSidFilteringStatus" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="targetDomainName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="enable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)">
      <apidata name="UpdateLocalSideOfTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="targetDomainName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="newTrustDirection">
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
        </parameter>
        <parameter name="newTrustPassword">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.String)">
      <apidata name="UpdateLocalSideOfTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="targetDomainName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="newTrustPassword">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)">
      <apidata name="UpdateTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="targetDomain">
          <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
        </parameter>
        <parameter name="newTrustDirection">
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(System.String)">
      <apidata name="VerifyOutboundTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="targetDomainName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)">
      <apidata name="VerifyTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="targetDomain">
          <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.DomainCollection">
      <apidata name="DomainCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainCollection.Contains(System.DirectoryServices.ActiveDirectory.Domain)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainCollection.IndexOf(System.DirectoryServices.ActiveDirectory.Domain)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainCollection.CopyTo(System.DirectoryServices.ActiveDirectory.Domain[],System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainCollection.Item(System.Int32)" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="System.Collections.ICollection.CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList">
          <apidata name="InnerList" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
          <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
          <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainCollection.Contains(System.DirectoryServices.ActiveDirectory.Domain)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="domain">
          <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainCollection.CopyTo(System.DirectoryServices.ActiveDirectory.Domain[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="domains">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainCollection.IndexOf(System.DirectoryServices.ActiveDirectory.Domain)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="domain">
          <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions">
      <apidata name="DomainCollisionOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.None" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.SidDisabledByAdmin" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.SidDisabledByConflict" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.NetBiosNameDisabledByAdmin" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.NetBiosNameDisabledByConflict" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.NetBiosNameDisabledByAdmin">
      <apidata name="NetBiosNameDisabledByAdmin" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.NetBiosNameDisabledByConflict">
      <apidata name="NetBiosNameDisabledByConflict" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.None">
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.SidDisabledByAdmin">
      <apidata name="SidDisabledByAdmin" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.SidDisabledByConflict">
      <apidata name="SidDisabledByConflict" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.DomainController">
      <apidata name="DomainController" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.#ctor" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.Finalize" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.Dispose(System.Boolean)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetDomainController(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer(System.String,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.Forest" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.OSVersion" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.Roles" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.Domain" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.IPAddress" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.SiteName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" static="false" special="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency">
      <apidata name="CheckReplicationConsistency" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.CheckReplicationConsistency">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime">
      <apidata name="CurrentTime" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose(System.Boolean)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainController.Domain">
      <apidata name="Domain" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog">
      <apidata name="EnableGlobalCatalog" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Finalize">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <apidata name="FindAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <apidata name="FindAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <apidata name="FindOne" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <apidata name="FindOne" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="flag">
          <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <apidata name="FindOne" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <apidata name="FindOne" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="flag">
          <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainController.Forest">
      <apidata name="Forest" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors">
      <apidata name="GetAllReplicationNeighbors" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetAllReplicationNeighbors">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher">
      <apidata name="GetDirectorySearcher" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.GetDomainController(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <apidata name="GetDomainController" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures">
      <apidata name="GetReplicationConnectionFailures" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationConnectionFailures">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors(System.String)">
      <apidata name="GetReplicationCursors" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationCursors(System.String)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata(System.String)">
      <apidata name="GetReplicationMetadata" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationMetadata(System.String)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="objectPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors(System.String)">
      <apidata name="GetReplicationNeighbors" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationNeighbors(System.String)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation">
      <apidata name="GetReplicationOperationInformation" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationOperationInformation">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn">
      <apidata name="HighestCommittedUsn" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections">
      <apidata name="InboundConnections" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.InboundConnections">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainController.IPAddress">
      <apidata name="IPAddress" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.IPAddress">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog">
      <apidata name="IsGlobalCatalog" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainController.OSVersion">
      <apidata name="OSVersion" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections">
      <apidata name="OutboundConnections" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.OutboundConnections">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainController.Roles">
      <apidata name="Roles" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)">
      <apidata name="SeizeRoleOwnership" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="role">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainController.SiteName">
      <apidata name="SiteName" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.SiteName">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback">
      <apidata name="SyncFromAllServersCallback" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncFromAllServersCallback">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncUpdateCallback" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)">
      <apidata name="SyncReplicaFromAllServers" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer(System.String,System.String)">
      <apidata name="SyncReplicaFromServer" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromServer(System.String,System.String)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sourceServer">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)">
      <apidata name="TransferRoleOwnership" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="role">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors(System.String)">
      <apidata name="TriggerSyncReplicaFromNeighbors" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.TriggerSyncReplicaFromNeighbors(System.String)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection">
      <apidata name="DomainControllerCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.Contains(System.DirectoryServices.ActiveDirectory.DomainController)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.IndexOf(System.DirectoryServices.ActiveDirectory.DomainController)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.CopyTo(System.DirectoryServices.ActiveDirectory.DomainController[],System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.Item(System.Int32)" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="System.Collections.ICollection.CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList">
          <apidata name="InnerList" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
          <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
          <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.Contains(System.DirectoryServices.ActiveDirectory.DomainController)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="domainController">
          <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.CopyTo(System.DirectoryServices.ActiveDirectory.DomainController[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="domainControllers">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.IndexOf(System.DirectoryServices.ActiveDirectory.DomainController)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="domainController">
          <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.DomainMode">
      <apidata name="DomainMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2000MixedDomain" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2000NativeDomain" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003InterimDomain" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003Domain" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2000MixedDomain">
      <apidata name="Windows2000MixedDomain" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2000NativeDomain">
      <apidata name="Windows2000NativeDomain" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003Domain">
      <apidata name="Windows2003Domain" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003InterimDomain">
      <apidata name="Windows2003InterimDomain" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.Forest">
      <apidata name="Forest" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.Dispose(System.Boolean)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.GetForest(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality(System.DirectoryServices.ActiveDirectory.ForestMode)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.ToString" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(System.String,System.Boolean)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(System.String,System.Boolean)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.Sites" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.Domains" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.ForestMode" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.RootDomain" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.Schema" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions">
      <apidata name="ApplicationPartitions" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)">
      <apidata name="CreateLocalSideOfTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="targetForestName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
        </parameter>
        <parameter name="trustPassword">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)">
      <apidata name="CreateTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="targetForest">
          <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(System.String)">
      <apidata name="DeleteLocalSideOfTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="targetForestName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)">
      <apidata name="DeleteTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="targetForest">
          <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Forest.Domains">
      <apidata name="Domains" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs">
      <apidata name="FindAllDiscoverableGlobalCatalogs" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs(System.String)">
      <apidata name="FindAllDiscoverableGlobalCatalogs" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs">
      <apidata name="FindAllGlobalCatalogs" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs(System.String)">
      <apidata name="FindAllGlobalCatalogs" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog">
      <apidata name="FindGlobalCatalog" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <apidata name="FindGlobalCatalog" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="flag">
          <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String)">
      <apidata name="FindGlobalCatalog" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <apidata name="FindGlobalCatalog" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="flag">
          <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Forest.ForestMode">
      <apidata name="ForestMode" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships">
      <apidata name="GetAllTrustRelationships" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest">
      <apidata name="GetCurrentForest" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.GetForest(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <apidata name="GetForest" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(System.String)">
      <apidata name="GetSelectiveAuthenticationStatus" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="targetForestName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(System.String)">
      <apidata name="GetSidFilteringStatus" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="targetForestName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship(System.String)">
      <apidata name="GetTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="targetForestName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs">
      <apidata name="GlobalCatalogs" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Forest.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner">
      <apidata name="NamingRoleOwner" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality(System.DirectoryServices.ActiveDirectory.ForestMode)">
      <apidata name="RaiseForestFunctionality" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="forestMode">
          <type api="T:System.DirectoryServices.ActiveDirectory.ForestMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)">
      <apidata name="RepairTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="targetForest">
          <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Forest.RootDomain">
      <apidata name="RootDomain" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Forest.Schema">
      <apidata name="Schema" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner">
      <apidata name="SchemaRoleOwner" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(System.String,System.Boolean)">
      <apidata name="SetSelectiveAuthenticationStatus" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="targetForestName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="enable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(System.String,System.Boolean)">
      <apidata name="SetSidFilteringStatus" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="targetForestName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="enable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Forest.Sites">
      <apidata name="Sites" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)">
      <apidata name="UpdateLocalSideOfTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="targetForestName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="newTrustDirection">
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
        </parameter>
        <parameter name="newTrustPassword">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.String)">
      <apidata name="UpdateLocalSideOfTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="targetForestName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="newTrustPassword">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)">
      <apidata name="UpdateTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="targetForest">
          <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
        </parameter>
        <parameter name="newTrustDirection">
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship(System.String)">
      <apidata name="VerifyOutboundTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="targetForestName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)">
      <apidata name="VerifyTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="targetForest">
          <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ForestMode">
      <apidata name="ForestMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2000Forest" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003InterimForest" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003Forest" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2000Forest">
      <apidata name="Windows2000Forest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003Forest">
      <apidata name="Windows2003Forest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003InterimForest">
      <apidata name="Windows2003InterimForest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestMode" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException">
      <apidata name="ForestTrustCollisionException" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.String,System.Exception,System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.String,System.Exception)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.Collisions" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.ErrorCode" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.String,System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.String,System.Exception,System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="collisions">
          <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.Collisions">
      <apidata name="Collisions" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType">
      <apidata name="ForestTrustCollisionType" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType.TopLevelName" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType.Domain" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType.Other" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType.Domain">
      <apidata name="Domain" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType.Other">
      <apidata name="Other" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType.TopLevelName">
      <apidata name="TopLevelName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection">
      <apidata name="ForestTrustDomainInfoCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.Contains(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation[],System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.Item(System.Int32)" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="System.Collections.ICollection.CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList">
          <apidata name="InnerList" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
          <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
          <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.Contains(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="information">
          <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="information">
          <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation">
      <apidata name="ForestTrustDomainInformation" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.DnsName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.NetBiosName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.DomainSid" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.Status" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.DnsName">
      <apidata name="DnsName" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.DomainSid">
      <apidata name="DomainSid" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.NetBiosName">
      <apidata name="NetBiosName" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.Status">
      <apidata name="Status" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus">
      <apidata name="ForestTrustDomainStatus" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.Enabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.SidAdminDisabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.SidConflictDisabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.NetBiosNameAdminDisabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.NetBiosNameConflictDisabled" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.Enabled">
      <apidata name="Enabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.NetBiosNameAdminDisabled">
      <apidata name="NetBiosNameAdminDisabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.NetBiosNameConflictDisabled">
      <apidata name="NetBiosNameConflictDisabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.SidAdminDisabled">
      <apidata name="SidAdminDisabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.SidConflictDisabled">
      <apidata name="SidConflictDisabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision">
      <apidata name="ForestTrustRelationshipCollision" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.CollisionType" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.TopLevelNameCollisionOption" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.DomainCollisionOption" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.CollisionRecord" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.CollisionRecord">
      <apidata name="CollisionRecord" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.CollisionType">
      <apidata name="CollisionType" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.DomainCollisionOption">
      <apidata name="DomainCollisionOption" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.TopLevelNameCollisionOption">
      <apidata name="TopLevelNameCollisionOption" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection">
      <apidata name="ForestTrustRelationshipCollisionCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.Contains(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision[],System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.Item(System.Int32)" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="System.Collections.ICollection.CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList">
          <apidata name="InnerList" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
          <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
          <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.Contains(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="collision">
          <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="collision">
          <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation">
      <apidata name="ForestTrustRelationshipInformation" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.Save" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.TopLevelNames" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.ExcludedTopLevelNames" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.TrustedDomainInformation" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.SourceName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TargetName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TrustType" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TrustDirection" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.ExcludedTopLevelNames">
      <apidata name="ExcludedTopLevelNames" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.Save">
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.TopLevelNames">
      <apidata name="TopLevelNames" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.TrustedDomainInformation">
      <apidata name="TrustedDomainInformation" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog">
      <apidata name="GlobalCatalog" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.GetGlobalCatalog(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.EnableGlobalCatalog" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.DisableGlobalCatalog" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.IsGlobalCatalog" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAllProperties" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.GetDirectorySearcher" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.Finalize" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.Dispose(System.Boolean)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer(System.String,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.Forest" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.OSVersion" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.Roles" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.Domain" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.IPAddress" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.SiteName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.DisableGlobalCatalog">
      <apidata name="DisableGlobalCatalog" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.EnableGlobalCatalog">
      <apidata name="EnableGlobalCatalog" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog">
          <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <apidata name="FindAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <apidata name="FindAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAllProperties">
      <apidata name="FindAllProperties" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <apidata name="FindOne" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <apidata name="FindOne" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="flag">
          <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <apidata name="FindOne" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <apidata name="FindOne" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" overload="true" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="flag">
          <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.GetDirectorySearcher">
      <apidata name="GetDirectorySearcher" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher">
          <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.GetGlobalCatalog(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <apidata name="GetGlobalCatalog" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.IsGlobalCatalog">
      <apidata name="IsGlobalCatalog" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog">
          <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection">
      <apidata name="GlobalCatalogCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.Contains(System.DirectoryServices.ActiveDirectory.GlobalCatalog)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.IndexOf(System.DirectoryServices.ActiveDirectory.GlobalCatalog)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.CopyTo(System.DirectoryServices.ActiveDirectory.GlobalCatalog[],System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.Item(System.Int32)" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="System.Collections.ICollection.CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList">
          <apidata name="InnerList" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
          <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
          <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.Contains(System.DirectoryServices.ActiveDirectory.GlobalCatalog)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="globalCatalog">
          <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.CopyTo(System.DirectoryServices.ActiveDirectory.GlobalCatalog[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="globalCatalogs">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.IndexOf(System.DirectoryServices.ActiveDirectory.GlobalCatalog)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="globalCatalog">
          <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.HourOfDay">
      <apidata name="HourOfDay" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Zero" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.One" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Two" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Three" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Four" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Five" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Six" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Seven" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Eight" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Nine" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Ten" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Eleven" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Twelve" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Thirteen" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Fourteen" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Fifteen" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Sixteen" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Seventeen" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Eighteen" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Nineteen" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Twenty" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.TwentyOne" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.TwentyTwo" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.TwentyThree" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Eight">
      <apidata name="Eight" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Eighteen">
      <apidata name="Eighteen" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Eleven">
      <apidata name="Eleven" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Fifteen">
      <apidata name="Fifteen" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Five">
      <apidata name="Five" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Four">
      <apidata name="Four" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Fourteen">
      <apidata name="Fourteen" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Nine">
      <apidata name="Nine" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Nineteen">
      <apidata name="Nineteen" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.One">
      <apidata name="One" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Seven">
      <apidata name="Seven" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Seventeen">
      <apidata name="Seventeen" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Six">
      <apidata name="Six" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Sixteen">
      <apidata name="Sixteen" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Ten">
      <apidata name="Ten" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Thirteen">
      <apidata name="Thirteen" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Three">
      <apidata name="Three" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Twelve">
      <apidata name="Twelve" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Twenty">
      <apidata name="Twenty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.TwentyOne">
      <apidata name="TwentyOne" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.TwentyThree">
      <apidata name="TwentyThree" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.TwentyTwo">
      <apidata name="TwentyTwo" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Two">
      <apidata name="Two" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Zero">
      <apidata name="Zero" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.LocatorOptions">
      <apidata name="LocatorOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int64" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.ForceRediscovery" />
        <element api="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.KdcRequired" />
        <element api="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.TimeServerRequired" />
        <element api="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.AvoidSelf" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.AvoidSelf">
      <apidata name="AvoidSelf" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.ForceRediscovery">
      <apidata name="ForceRediscovery" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.KdcRequired">
      <apidata name="KdcRequired" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.TimeServerRequired">
      <apidata name="TimeServerRequired" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour">
      <apidata name="MinuteOfHour" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.MinuteOfHour.Zero" />
        <element api="F:System.DirectoryServices.ActiveDirectory.MinuteOfHour.Fifteen" />
        <element api="F:System.DirectoryServices.ActiveDirectory.MinuteOfHour.Thirty" />
        <element api="F:System.DirectoryServices.ActiveDirectory.MinuteOfHour.FortyFive" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.MinuteOfHour.Fifteen">
      <apidata name="Fifteen" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.MinuteOfHour.FortyFive">
      <apidata name="FortyFive" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.MinuteOfHour.Thirty">
      <apidata name="Thirty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.MinuteOfHour.Zero">
      <apidata name="Zero" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.NotificationStatus">
      <apidata name="NotificationStatus" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.NotificationStatus.NoNotification" />
        <element api="F:System.DirectoryServices.ActiveDirectory.NotificationStatus.IntraSiteOnly" />
        <element api="F:System.DirectoryServices.ActiveDirectory.NotificationStatus.NotificationAlways" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.NotificationStatus.IntraSiteOnly">
      <apidata name="IntraSiteOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.NotificationStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.NotificationStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.NotificationStatus.NoNotification">
      <apidata name="NoNotification" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.NotificationStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.NotificationStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.NotificationStatus.NotificationAlways">
      <apidata name="NotificationAlways" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.NotificationStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.NotificationStatus" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.PropertyTypes">
      <apidata name="PropertyTypes" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.PropertyTypes.Indexed" />
        <element api="F:System.DirectoryServices.ActiveDirectory.PropertyTypes.InGlobalCatalog" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.PropertyTypes.Indexed">
      <apidata name="Indexed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.PropertyTypes" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.PropertyTypes" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.PropertyTypes.InGlobalCatalog">
      <apidata name="InGlobalCatalog" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.PropertyTypes" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.PropertyTypes" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection">
      <apidata name="ReadOnlyActiveDirectorySchemaClassCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass[],System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.Item(System.Int32)" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="System.Collections.ICollection.CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList">
          <apidata name="InnerList" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
          <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
          <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="schemaClass">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="classes">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="schemaClass">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection">
      <apidata name="ReadOnlyActiveDirectorySchemaPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty[],System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.Item(System.Int32)" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="System.Collections.ICollection.CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList">
          <apidata name="InnerList" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
          <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
          <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="schemaProperty">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="properties">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="schemaProperty">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection">
      <apidata name="ReadOnlyDirectoryServerCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.Contains(System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.IndexOf(System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.CopyTo(System.DirectoryServices.ActiveDirectory.DirectoryServer[],System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.Item(System.Int32)" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="System.Collections.ICollection.CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList">
          <apidata name="InnerList" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
          <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
          <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.Contains(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="directoryServer">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.CopyTo(System.DirectoryServices.ActiveDirectory.DirectoryServer[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="directoryServers">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.IndexOf(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="directoryServer">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection">
      <apidata name="ReadOnlySiteCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite[],System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.Item(System.Int32)" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="System.Collections.ICollection.CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList">
          <apidata name="InnerList" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
          <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
          <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="site">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="sites">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="site">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection">
      <apidata name="ReadOnlySiteLinkBridgeCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge[],System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.Item(System.Int32)" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="System.Collections.ICollection.CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList">
          <apidata name="InnerList" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
          <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
          <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="bridge">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="bridges">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="bridge">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection">
      <apidata name="ReadOnlySiteLinkCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink[],System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.Item(System.Int32)" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="System.Collections.ICollection.CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList">
          <apidata name="InnerList" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
          <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
          <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="link">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="links">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="link">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection">
      <apidata name="ReadOnlyStringCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.Contains(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.IndexOf(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.CopyTo(System.String[],System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.Item(System.Int32)" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="System.Collections.ICollection.CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList">
          <apidata name="InnerList" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
          <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
          <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.Contains(System.String)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.CopyTo(System.String[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="values">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.IndexOf(System.String)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection">
      <apidata name="ReplicationConnection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Dispose(System.Boolean)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Finalize" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Delete" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Save" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ToString" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.GetDirectoryEntry" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.SourceServer" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.DestinationServer" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Enabled" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.TransportType" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.GeneratedByKcc" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReciprocalReplicationEnabled" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ChangeNotificationStatus" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.DataCompressionEnabled" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReplicationScheduleOwnedByUser" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReplicationSpan" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReplicationSchedule" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sourceServer">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sourceServer">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </parameter>
        <parameter name="schedule">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sourceServer">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </parameter>
        <parameter name="schedule">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
        </parameter>
        <parameter name="transport">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sourceServer">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </parameter>
        <parameter name="transport">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ChangeNotificationStatus">
      <apidata name="ChangeNotificationStatus" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.NotificationStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.DataCompressionEnabled">
      <apidata name="DataCompressionEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Delete">
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.DestinationServer">
      <apidata name="DestinationServer" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="true" final="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" overload="true" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Enabled">
      <apidata name="Enabled" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <apidata name="FindByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.GeneratedByKcc">
      <apidata name="GeneratedByKcc" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.GetDirectoryEntry">
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReciprocalReplicationEnabled">
      <apidata name="ReciprocalReplicationEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReplicationSchedule">
      <apidata name="ReplicationSchedule" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReplicationScheduleOwnedByUser">
      <apidata name="ReplicationScheduleOwnedByUser" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReplicationSpan">
      <apidata name="ReplicationSpan" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Save">
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.SourceServer">
      <apidata name="SourceServer" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.TransportType">
      <apidata name="TransportType" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection">
      <apidata name="ReplicationConnectionCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationConnection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationConnection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationConnection[],System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.Item(System.Int32)" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="System.Collections.ICollection.CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList">
          <apidata name="InnerList" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
          <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
          <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationConnection)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationConnection[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="connections">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationConnection)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor">
      <apidata name="ReplicationCursor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.PartitionName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.SourceInvocationId" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.UpToDatenessUsn" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.SourceServer" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.LastSuccessfulSyncTime" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.LastSuccessfulSyncTime">
      <apidata name="LastSuccessfulSyncTime" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.PartitionName">
      <apidata name="PartitionName" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.SourceInvocationId">
      <apidata name="SourceInvocationId" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.SourceServer">
      <apidata name="SourceServer" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.UpToDatenessUsn">
      <apidata name="UpToDatenessUsn" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection">
      <apidata name="ReplicationCursorCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationCursor)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationCursor)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationCursor[],System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.Item(System.Int32)" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="System.Collections.ICollection.CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList">
          <apidata name="InnerList" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
          <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
          <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationCursor)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="cursor">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationCursor[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="values">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationCursor)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="cursor">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure">
      <apidata name="ReplicationFailure" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.SourceServer" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.FirstFailureTime" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.ConsecutiveFailureCount" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.LastErrorCode" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.LastErrorMessage" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.ConsecutiveFailureCount">
      <apidata name="ConsecutiveFailureCount" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.FirstFailureTime">
      <apidata name="FirstFailureTime" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.LastErrorCode">
      <apidata name="LastErrorCode" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.LastErrorMessage">
      <apidata name="LastErrorMessage" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.SourceServer">
      <apidata name="SourceServer" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection">
      <apidata name="ReplicationFailureCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationFailure)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationFailure)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationFailure[],System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.Item(System.Int32)" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="System.Collections.ICollection.CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList">
          <apidata name="InnerList" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
          <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
          <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationFailure)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="failure">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationFailure[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="failures">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationFailure)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="failure">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor">
      <apidata name="ReplicationNeighbor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.PartitionName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.SourceServer" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.TransportType" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOption" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.SourceInvocationId" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.UsnLastObjectChangeSynced" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.UsnAttributeFilter" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastSuccessfulSync" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastAttemptedSync" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastSyncResult" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastSyncMessage" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ConsecutiveFailureCount" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ConsecutiveFailureCount">
      <apidata name="ConsecutiveFailureCount" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastAttemptedSync">
      <apidata name="LastAttemptedSync" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastSuccessfulSync">
      <apidata name="LastSuccessfulSync" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastSyncMessage">
      <apidata name="LastSyncMessage" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastSyncResult">
      <apidata name="LastSyncResult" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.PartitionName">
      <apidata name="PartitionName" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOption">
      <apidata name="ReplicationNeighborOption" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.SourceInvocationId">
      <apidata name="SourceInvocationId" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.SourceServer">
      <apidata name="SourceServer" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.TransportType">
      <apidata name="TransportType" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.UsnAttributeFilter">
      <apidata name="UsnAttributeFilter" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.UsnLastObjectChangeSynced">
      <apidata name="UsnLastObjectChangeSynced" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions">
      <apidata name="ReplicationNeighborOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int64" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.Writeable" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.SyncOnStartup" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.ScheduledSync" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.UseInterSiteTransport" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.TwoWaySync" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.ReturnObjectParent" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.FullSyncInProgress" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.FullSyncNextPacket" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.NeverSynced" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.Preempted" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.IgnoreChangeNotifications" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.DisableScheduledSync" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.CompressChanges" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.NoChangeNotifications" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.PartialAttributeSet" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.CompressChanges">
      <apidata name="CompressChanges" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.DisableScheduledSync">
      <apidata name="DisableScheduledSync" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.FullSyncInProgress">
      <apidata name="FullSyncInProgress" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.FullSyncNextPacket">
      <apidata name="FullSyncNextPacket" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.IgnoreChangeNotifications">
      <apidata name="IgnoreChangeNotifications" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.NeverSynced">
      <apidata name="NeverSynced" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.NoChangeNotifications">
      <apidata name="NoChangeNotifications" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.PartialAttributeSet">
      <apidata name="PartialAttributeSet" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.Preempted">
      <apidata name="Preempted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.ReturnObjectParent">
      <apidata name="ReturnObjectParent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.ScheduledSync">
      <apidata name="ScheduledSync" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.SyncOnStartup">
      <apidata name="SyncOnStartup" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.TwoWaySync">
      <apidata name="TwoWaySync" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.UseInterSiteTransport">
      <apidata name="UseInterSiteTransport" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.Writeable">
      <apidata name="Writeable" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection">
      <apidata name="ReplicationNeighborCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationNeighbor)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationNeighbor)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationNeighbor[],System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.Item(System.Int32)" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="System.Collections.ICollection.CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList">
          <apidata name="InnerList" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
          <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
          <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationNeighbor)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="neighbor">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationNeighbor[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="neighbors">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationNeighbor)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="neighbor">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation">
      <apidata name="ReplicationOperation" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.TimeEnqueued" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.OperationNumber" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.Priority" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.OperationType" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.PartitionName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.SourceServer" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.OperationNumber">
      <apidata name="OperationNumber" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.OperationType">
      <apidata name="OperationType" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.PartitionName">
      <apidata name="PartitionName" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.Priority">
      <apidata name="Priority" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.SourceServer">
      <apidata name="SourceServer" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.TimeEnqueued">
      <apidata name="TimeEnqueued" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection">
      <apidata name="ReplicationOperationCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationOperation)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationOperation)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationOperation[],System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.Item(System.Int32)" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="System.Collections.ICollection.CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList">
          <apidata name="InnerList" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
          <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
          <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationOperation)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="operation">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationOperation[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="operations">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationOperation)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="operation">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation">
      <apidata name="ReplicationOperationInformation" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.#ctor" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.OperationStartTime" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.CurrentOperation" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.PendingOperations" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.CurrentOperation">
      <apidata name="CurrentOperation" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.OperationStartTime">
      <apidata name="OperationStartTime" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.PendingOperations">
      <apidata name="PendingOperations" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType">
      <apidata name="ReplicationOperationType" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.Sync" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.Add" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.Delete" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.Modify" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.UpdateReference" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.Add">
      <apidata name="Add" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.Delete">
      <apidata name="Delete" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.Modify">
      <apidata name="Modify" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.Sync">
      <apidata name="Sync" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.UpdateReference">
      <apidata name="UpdateReference" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel">
      <apidata name="ReplicationSecurityLevel" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.MutualAuthentication" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.Negotiate" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.NegotiatePassThrough" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.MutualAuthentication">
      <apidata name="MutualAuthentication" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.Negotiate">
      <apidata name="Negotiate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.NegotiatePassThrough">
      <apidata name="NegotiatePassThrough" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationSpan">
      <apidata name="ReplicationSpan" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationSpan.IntraSite" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationSpan.InterSite" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationSpan.InterSite">
      <apidata name="InterSite" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSpan" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationSpan.IntraSite">
      <apidata name="IntraSite" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSpan" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.SchemaClassType">
      <apidata name="SchemaClassType" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.SchemaClassType.Type88" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SchemaClassType.Structural" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SchemaClassType.Abstract" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SchemaClassType.Auxiliary" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SchemaClassType.Abstract">
      <apidata name="Abstract" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SchemaClassType.Auxiliary">
      <apidata name="Auxiliary" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SchemaClassType.Structural">
      <apidata name="Structural" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SchemaClassType.Type88">
      <apidata name="Type88" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory">
      <apidata name="SyncFromAllServersErrorCategory" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory.ErrorContactingServer" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory.ErrorReplicating" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory.ServerUnreachable" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory.ErrorContactingServer">
      <apidata name="ErrorContactingServer" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory.ErrorReplicating">
      <apidata name="ErrorReplicating" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory.ServerUnreachable">
      <apidata name="ServerUnreachable" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation">
      <apidata name="SyncFromAllServersErrorInformation" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.ErrorCategory" />
        <element api="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.ErrorCode" />
        <element api="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.ErrorMessage" />
        <element api="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.TargetServer" />
        <element api="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.SourceServer" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.ErrorCategory">
      <apidata name="ErrorCategory" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.ErrorCode">
      <apidata name="ErrorCode" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.ErrorMessage">
      <apidata name="ErrorMessage" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.SourceServer">
      <apidata name="SourceServer" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.TargetServer">
      <apidata name="TargetServer" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent">
      <apidata name="SyncFromAllServersEvent" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent.Error" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent.SyncStarted" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent.SyncCompleted" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent.Finished" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent.Error">
      <apidata name="Error" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent.Finished">
      <apidata name="Finished" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent.SyncCompleted">
      <apidata name="SyncCompleted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent.SyncStarted">
      <apidata name="SyncStarted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException">
      <apidata name="SyncFromAllServersOperationException" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.String,System.Exception,System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation[])" />
        <element api="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.String,System.Exception)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor" />
        <element api="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.ErrorInformation" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.ErrorCode" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" set="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.String,System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.String,System.Exception,System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" overload="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="errors">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.ErrorInformation">
      <apidata name="ErrorInformation" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions">
      <apidata name="SyncFromAllServersOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.None" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.AbortIfServerUnavailable" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.SyncAdjacentServerOnly" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.CheckServerAlivenessOnly" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.SkipInitialCheck" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.PushChangeOutward" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.CrossSite" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.AbortIfServerUnavailable">
      <apidata name="AbortIfServerUnavailable" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.CheckServerAlivenessOnly">
      <apidata name="CheckServerAlivenessOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.CrossSite">
      <apidata name="CrossSite" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.None">
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.PushChangeOutward">
      <apidata name="PushChangeOutward" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.SkipInitialCheck">
      <apidata name="SkipInitialCheck" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.SyncAdjacentServerOnly">
      <apidata name="SyncAdjacentServerOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.SyncUpdateCallback">
      <apidata name="SyncUpdateCallback" group="type" subgroup="delegate" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <parameters>
        <parameter name="eventType">
          <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent" ref="false" />
        </parameter>
        <parameter name="targetServer">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sourceServer">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.TopLevelName">
      <apidata name="TopLevelName" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.TopLevelName.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TopLevelName.Status" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.TopLevelName.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelName" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.TopLevelName.Status">
      <apidata name="Status" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelName" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection">
      <apidata name="TopLevelNameCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Contains(System.DirectoryServices.ActiveDirectory.TopLevelName)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.IndexOf(System.DirectoryServices.ActiveDirectory.TopLevelName)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.CopyTo(System.DirectoryServices.ActiveDirectory.TopLevelName[],System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Item(System.Int32)" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="System.Collections.ICollection.CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList">
          <apidata name="InnerList" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
          <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
          <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Contains(System.DirectoryServices.ActiveDirectory.TopLevelName)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.CopyTo(System.DirectoryServices.ActiveDirectory.TopLevelName[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="names">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelName" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.IndexOf(System.DirectoryServices.ActiveDirectory.TopLevelName)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions">
      <apidata name="TopLevelNameCollisionOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions.None" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions.NewlyCreated" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions.DisabledByAdmin" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions.DisabledByConflict" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions.DisabledByAdmin">
      <apidata name="DisabledByAdmin" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions.DisabledByConflict">
      <apidata name="DisabledByConflict" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions.NewlyCreated">
      <apidata name="NewlyCreated" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions.None">
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus">
      <apidata name="TopLevelNameStatus" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus.Enabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus.NewlyCreated" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus.AdminDisabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus.ConflictDisabled" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus.AdminDisabled">
      <apidata name="AdminDisabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus.ConflictDisabled">
      <apidata name="ConflictDisabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus.Enabled">
      <apidata name="Enabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus.NewlyCreated">
      <apidata name="NewlyCreated" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.TrustDirection">
      <apidata name="TrustDirection" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.TrustDirection.Inbound" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TrustDirection.Outbound" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TrustDirection.Bidirectional" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TrustDirection.Bidirectional">
      <apidata name="Bidirectional" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TrustDirection.Inbound">
      <apidata name="Inbound" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TrustDirection.Outbound">
      <apidata name="Outbound" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation">
      <apidata name="TrustRelationshipInformation" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.SourceName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TargetName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TrustType" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TrustDirection" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.SourceName">
      <apidata name="SourceName" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TargetName">
      <apidata name="TargetName" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TrustDirection">
      <apidata name="TrustDirection" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TrustType">
      <apidata name="TrustType" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection">
      <apidata name="TrustRelationshipInformationCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.Contains(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.IndexOf(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.CopyTo(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation[],System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.Item(System.Int32)" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="System.Collections.ICollection.CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList">
          <apidata name="InnerList" group="member" subgroup="property" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
          <apidata name="System.Collections.ICollection.IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
          <apidata name="System.Collections.ICollection.SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="true" />
          <propertydata get="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" overload="true" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="true" final="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
                <enumValue>
                  <field name="WillNotCorruptState" />
                </enumValue>
              </argument>
              <argument>
                <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
                <enumValue>
                  <field name="Success" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" static="false" special="false" />
          <proceduredata abstract="false" virtual="false" final="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Reflection.DefaultMemberAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Item</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.Contains(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="information">
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.CopyTo(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.IndexOf(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="information">
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.TrustType">
      <apidata name="TrustType" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.TrustType.TreeRoot" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TrustType.ParentChild" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TrustType.CrossLink" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TrustType.External" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TrustType.Forest" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TrustType.Kerberos" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TrustType.Unknown" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TrustType.CrossLink">
      <apidata name="CrossLink" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TrustType.External">
      <apidata name="External" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TrustType.Forest">
      <apidata name="Forest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TrustType.Kerberos">
      <apidata name="Kerberos" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TrustType.ParentChild">
      <apidata name="ParentChild" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TrustType.TreeRoot">
      <apidata name="TreeRoot" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TrustType.Unknown">
      <apidata name="Unknown" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" special="false" />
      <fielddata literal="true" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </containers>
    </api>
  </apis>
</reflection>