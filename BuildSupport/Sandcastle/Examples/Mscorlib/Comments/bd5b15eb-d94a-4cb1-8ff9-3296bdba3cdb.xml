<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:dev="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" fileAssetGuid="bd5b15eb-d94a-4cb1-8ff9-3296bdba3cdb" revisionNumber="21">
  <assembly>
    <name>mscorlib</name>
  </assembly>
  <members>
    <member name="T:System.Decimal">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Represents a decimal number.</para>
        </summary>
        <remarks>
          <content>
            <para>The <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> value type represents decimal numbers ranging from positive 79,228,162,514,264,337,593,543,950,335 to negative 79,228,162,514,264,337,593,543,950,335. The <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> value type is appropriate for financial calculations requiring large numbers of significant integral and fractional digits and no round-off errors.</para>
            <para>A decimal number is a floating-point value that consists of a sign, a numeric value where each digit in the value ranges from 0 to 9, and a scaling factor that indicates the position of a floating decimal point that separates the integral and fractional parts of the numeric value. </para>
            <para>The binary representation of a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> value consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the 96-bit integer and specify what portion of it is a decimal fraction. The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28. Therefore, the binary representation of a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> value is of the form, ((-2<superscript>96</superscript> to 2<superscript>96</superscript>) / 10<superscript>(0 to 28)</superscript>), where -2<superscript>96</superscript>-1 is equal to <codeEntityReference autoUpgrade="true">F:System.Decimal.MinValue</codeEntityReference>, and 2<superscript>96</superscript>-1 is equal to <codeEntityReference autoUpgrade="true">F:System.Decimal.MaxValue</codeEntityReference>.</para>
            <para>This type provides methods that convert <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> values to and from type <codeEntityReference autoUpgrade="true">T:System.Char</codeEntityReference>, <codeEntityReference autoUpgrade="true">T:System.SByte</codeEntityReference>, <codeEntityReference autoUpgrade="true">T:System.Int16</codeEntityReference>, <codeEntityReference autoUpgrade="true">T:System.Int32</codeEntityReference>, <codeEntityReference autoUpgrade="true">T:System.Int64</codeEntityReference>, <codeEntityReference autoUpgrade="true">T:System.Byte</codeEntityReference>, <codeEntityReference autoUpgrade="true">T:System.UInt16</codeEntityReference>, <codeEntityReference autoUpgrade="true">T:System.UInt32</codeEntityReference>, and <codeEntityReference autoUpgrade="true">T:System.UInt64</codeEntityReference>. Conversions from other types to <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> are widening conversions that never lose information or throw exceptions.</para>
            <para>Conversions from <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to other types are narrowing conversions that round the <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> value to the nearest integer value toward zero. If the result of the conversion is not representable in the destination type, an <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference> is thrown.</para>
            <para>This type provides methods that convert <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> values to and from <codeEntityReference autoUpgrade="true">T:System.Single</codeEntityReference> and <codeEntityReference autoUpgrade="true">T:System.Double</codeEntityReference>. Conversions from <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to <codeEntityReference autoUpgrade="true">T:System.Single</codeEntityReference> or <codeEntityReference autoUpgrade="true">T:System.Double</codeEntityReference> are narrowing conversions that might lose precision but not information about the magnitude of the converted value. The conversion will not throw an exception.</para>
            <para>Conversions from <codeEntityReference autoUpgrade="true">T:System.Single</codeEntityReference> or <codeEntityReference autoUpgrade="true">T:System.Double</codeEntityReference> to <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> throw an <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference> if the result of the conversion is not representable as a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>.</para>
            <para>This type implements interfaces <codeEntityReference autoUpgrade="true">T:System.IComparable</codeEntityReference>, <codeEntityReference autoUpgrade="true">T:System.IComparable`1</codeEntityReference>, <codeEntityReference autoUpgrade="true">T:System.IFormattable</codeEntityReference>, and <codeEntityReference autoUpgrade="true">T:System.IConvertible</codeEntityReference>. Use the <codeEntityReference autoUpgrade="true">T:System.Convert</codeEntityReference> class for conversions instead of this type's explicit interface member implementation of <codeEntityReference autoUpgrade="true">T:System.IConvertible</codeEntityReference>.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code sample demonstrates the use of <languageKeyword>Decimal</languageKeyword> : </para>
                <codeReference>Decimal Example#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.SByte</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.Int16</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.Int32</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.Int64</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.Byte</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.UInt16</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.UInt32</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.UInt64</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.Single</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.Double</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.Char</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.#ctor(System.Double)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Initializes a new instance of <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to the value of the specified double-precision floating-point number.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>The value to represent as a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>. </para>
            </content>
          </parameter>
        </parameters>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>
                <parameterReference>value</parameterReference> is greater than <codeEntityReference autoUpgrade="true">F:System.Decimal.MaxValue</codeEntityReference> or less than <codeEntityReference autoUpgrade="true">F:System.Decimal.MinValue</codeEntityReference>.</para>
              <para>-or- </para>
              <para>
                <parameterReference>value</parameterReference> is <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.Double.NaN</codeEntityReference>, <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.Double.PositiveInfinity</codeEntityReference>, or <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.Double.NegativeInfinity</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>This constructor rounds <parameterReference>value</parameterReference> to 15 significant digits using rounding to nearest. This is done even if the number has more than 15 digits and the less significant digits are zero.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example creates several <languageKeyword>Decimal</languageKeyword> numbers using the constructor overload that initializes a <languageKeyword>Decimal</languageKeyword> structure with a <codeEntityReference autoUpgrade="true">T:System.Double</codeEntityReference> value.</para>
                <codeReference>System.Decimal.Ctor.Reals#2</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      <overload>
        <summary>
          <para>Initializes a new instance of <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>.</para>
        </summary>
      </overload>
</dduexml>
    </member>
    <member name="M:System.Decimal.#ctor(System.Int32)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Initializes a new instance of <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to the value of the specified 32-bit signed integer.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>The value to represent as a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>. </para>
            </content>
          </parameter>
        </parameters>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example creates several <languageKeyword>Decimal</languageKeyword> numbers using the constructor overload that initializes a <languageKeyword>Decimal</languageKeyword> structure with an <codeEntityReference autoUpgrade="true">T:System.Int32</codeEntityReference> value.</para>
                <codeReference>System.Decimal.Ctor.Ints#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="Overload:System.Decimal.#ctor">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Initializes a new instance of <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>.</para>
        </summary>
      </dduexml>
    </member>
    <member name="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Initializes a new instance of <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> from parameters specifying the instance's constituent parts.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>lo</parameterReference>
            <content>
              <para>The low 32 bits of a 96-bit integer. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>mid</parameterReference>
            <content>
              <para>The middle 32 bits of a 96-bit integer. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>hi</parameterReference>
            <content>
              <para>The high 32 bits of a 96-bit integer. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>isNegative</parameterReference>
            <content>
              <para>The sign of the number; 1 is negative, 0 is positive. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>scale</parameterReference>
            <content>
              <para>A power of 10 ranging from 0 to 28. </para>
            </content>
          </parameter>
        </parameters>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentOutOfRangeException</codeEntityReference>
            <content>
              <para>
                <parameterReference>scale</parameterReference> is greater than 28. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The binary representation of a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction. The scaling factor is implicitly the number 10 raised to an exponent ranging from 0 to 28.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example creates several <languageKeyword>Decimal</languageKeyword> numbers using the constructor overload that initializes a <languageKeyword>Decimal</languageKeyword> structure with three <codeEntityReference autoUpgrade="true">T:System.Int32</codeEntityReference> value words, a <codeEntityReference autoUpgrade="true">T:System.Boolean</codeEntityReference> sign, and a <codeEntityReference autoUpgrade="true">T:System.Byte</codeEntityReference> scale factor.</para>
                <codeReference>System.Decimal.Ctor.Arrays#2</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="M:System.Decimal.#ctor(System.Int32[])">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Initializes a new instance of <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to a decimal value represented in binary and contained in a specified array.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>bits</parameterReference>
            <content>
              <para>An array of 32-bit signed integers containing a representation of a decimal value. </para>
            </content>
          </parameter>
        </parameters>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentNullException</codeEntityReference>
            <content>
              <para>
                <parameterReference>bits</parameterReference> is <languageKeyword>null</languageKeyword>. </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentException</codeEntityReference>
            <content>
              <para>The length of the <parameterReference>bits</parameterReference> is not 4.</para>
              <para>-or- </para>
              <para>The representation of the decimal value in <parameterReference>bits</parameterReference> is not valid. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The binary representation of a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction. The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.</para>
            <para>
              <parameterReference>bits</parameterReference> is a four-element long array of 32-bit signed integers.</para>
            <para>
              <parameterReference>bits</parameterReference> [0], <parameterReference>bits</parameterReference> [1], and <parameterReference>bits</parameterReference> [2] contain the low, middle, and high 32 bits of the 96-bit integer number.</para>
            <para>
              <parameterReference>bits</parameterReference> [3] contains the scale factor and sign, and consists of following parts: </para>
            <para>Bits 0 to 15, the lower word, are unused and must be zero.</para>
            <para>Bits 16 to 23 must contain an exponent between 0 and 28, which indicates the power of 10 to divide the integer number.</para>
            <para>Bits 24 to 30 are unused and must be zero.</para>
            <para>Bit 31 contains the sign; 0 meaning positive, and 1 meaning negative.</para>
            <para>A numeric value might have several possible binary representations; all are equally valid and numerically equivalent. Note that the bit representation differentiates between negative and positive zero. These values are treated as being equal in all operations.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example creates several <languageKeyword>Decimal</languageKeyword> numbers using the constructor overload that initializes a <languageKeyword>Decimal</languageKeyword> structure with an array of four <codeEntityReference autoUpgrade="true">T:System.Int32</codeEntityReference> values.</para>
                <codeReference>System.Decimal.Ctor.Arrays#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.GetBits(System.Decimal)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.#ctor(System.Int64)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Initializes a new instance of <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to the value of the specified 64-bit signed integer.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>The value to represent as a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>. </para>
            </content>
          </parameter>
        </parameters>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example creates several <languageKeyword>Decimal</languageKeyword> numbers using the constructor overload that initializes a <languageKeyword>Decimal</languageKeyword> structure with an <codeEntityReference autoUpgrade="true">T:System.Int64</codeEntityReference> value.</para>
                <codeReference>System.Decimal.Ctor.Ints#3</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="M:System.Decimal.#ctor(System.Single)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Initializes a new instance of <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to the value of the specified single-precision floating-point number.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>The value to represent as a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>. </para>
            </content>
          </parameter>
        </parameters>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>
                <parameterReference>value</parameterReference> is greater than <codeEntityReference autoUpgrade="true">F:System.Decimal.MaxValue</codeEntityReference> or less than <codeEntityReference autoUpgrade="true">F:System.Decimal.MinValue</codeEntityReference>.</para>
              <para>-or- </para>
              <para>
                <parameterReference>value</parameterReference> is <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.Single.NaN</codeEntityReference>, <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.Single.PositiveInfinity</codeEntityReference>, or <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.Single.NegativeInfinity</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>This constructor rounds <parameterReference>value</parameterReference> to 7 significant digits using rounding to nearest. This is done even if the number has more than 7 digits and the less significant digits are zero.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example creates several <languageKeyword>Decimal</languageKeyword> numbers using the constructor overload that initializes a <languageKeyword>Decimal</languageKeyword> structure with a <codeEntityReference autoUpgrade="true">T:System.Single</codeEntityReference> value.</para>
                <codeReference>System.Decimal.Ctor.Reals#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="M:System.Decimal.#ctor(System.UInt32)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Initializes a new instance of <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to the value of the specified 32-bit unsigned integer.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>The value to represent as a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>. </para>
            </content>
          </parameter>
        </parameters>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example creates several <languageKeyword>Decimal</languageKeyword> numbers using the constructor overload that initializes a <languageKeyword>Decimal</languageKeyword> structure with a <codeEntityReference autoUpgrade="true">T:System.UInt32</codeEntityReference> value.</para>
                <codeReference>System.Decimal.Ctor.Ints#2</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="M:System.Decimal.#ctor(System.UInt64)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Initializes a new instance of <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to the value of the specified 64-bit unsigned integer.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>The value to represent as a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>. </para>
            </content>
          </parameter>
        </parameters>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example creates several <languageKeyword>Decimal</languageKeyword> numbers using the constructor overload that initializes a <languageKeyword>Decimal</languageKeyword> structure with a <codeEntityReference autoUpgrade="true">T:System.UInt64</codeEntityReference> value.</para>
                <codeReference>System.Decimal.Ctor.Ints#4</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="M:System.Decimal.Add(System.Decimal,System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Adds two specified <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> values.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d1</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>d2</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> value that is the sum of <parameterReference>d1</parameterReference> and <parameterReference>d2</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>The sum of <parameterReference>d1</parameterReference> and <parameterReference>d2</parameterReference> is less than <codeEntityReference autoUpgrade="true">F:System.Decimal.MinValue</codeEntityReference> or greater than <codeEntityReference autoUpgrade="true">F:System.Decimal.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The following code sample illustrates the use of <languageKeyword>Add</languageKeyword> : </para>
            <codeReference>Decimal Example#5</codeReference>
          </content>
        </remarks>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Subtract(System.Decimal,System.Decimal)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Multiply(System.Decimal,System.Decimal)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Divide(System.Decimal,System.Decimal)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Compares two specified <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> values.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d1</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>d2</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A signed number indicating the relative values of <parameterReference>d1</parameterReference> and <parameterReference>d2</parameterReference>.</para>
          <table>
            <tableHeader>
              <row>
                <entry>
                  <para>Return Value </para>
                </entry>
                <entry>
                  <para>Meaning </para>
                </entry>
              </row>
            </tableHeader>
            <row>
              <entry>
                <para>Less than zero </para>
              </entry>
              <entry>
                <para>
                  <parameterReference>d1</parameterReference> is less than <parameterReference>d2</parameterReference>. </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>Zero </para>
              </entry>
              <entry>
                <para>
                  <parameterReference>d1</parameterReference> and <parameterReference>d2</parameterReference> are equal. </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>Greater than zero </para>
              </entry>
              <entry>
                <para>
                  <parameterReference>d1</parameterReference> is greater than <parameterReference>d2</parameterReference>. </para>
              </entry>
            </row>
          </table>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example compares several <languageKeyword>Decimal</languageKeyword> values to a reference <languageKeyword>Decimal</languageKeyword> value using the <languageKeyword>Compare</languageKeyword> method.</para>
                <codeReference>System.Decimal.Compare_Equals#2</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.CompareTo(System.Object)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Equals(System.Object)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="Overload:System.Decimal.CompareTo">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Compares this instance to a specified object or <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> and returns an indication of their relative values.</para>
        </summary>
      </dduexml>
    </member>
    <member name="M:System.Decimal.CompareTo(System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Compares this instance to a specified <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> object.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> object.</para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A signed number indicating the relative values of this instance and <parameterReference>value</parameterReference>.</para>
          <table>
            <tableHeader>
              <row>
                <entry>
                  <para>Return Value </para>
                </entry>
                <entry>
                  <para>Meaning </para>
                </entry>
              </row>
            </tableHeader>
            <row>
              <entry>
                <para>Less than zero </para>
              </entry>
              <entry>
                <para>This instance is less than <parameterReference>value</parameterReference>. </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>Zero </para>
              </entry>
              <entry>
                <para>This instance is equal to <parameterReference>value</parameterReference>. </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>Greater than zero </para>
              </entry>
              <entry>
                <para>This instance is greater than <parameterReference>value</parameterReference>. </para>
              </entry>
            </row>
          </table>
        </returnValue>
        <remarks>
          <content>
            <para>This method implements the <codeEntityReference qualifyHint="true" autoUpgrade="true">T:System.IComparable`1</codeEntityReference> interface and performs slightly better than the <codeEntityReference qualifyHint="true" autoUpgrade="true">M:System.Decimal.CompareTo(System.Object)</codeEntityReference> method because it does not have to convert the <parameterReference>value</parameterReference> parameter to an object.</para>
            <para>Depending on your programming language, it might be possible to code a <codeEntityReference autoUpgrade="true">Overload:System.Decimal.CompareTo</codeEntityReference> method where the parameter type has fewer bits (is narrower) than the instance type. This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</para>
            <para>For example, suppose the instance type is <codeEntityReference autoUpgrade="true">T:System.Int32</codeEntityReference> and the parameter type is <codeEntityReference autoUpgrade="true">T:System.Byte</codeEntityReference>. The Microsoft C# compiler generates instructions to represent the parameter as an <codeEntityReference autoUpgrade="true">T:System.Int32</codeEntityReference> object, then generates a <codeEntityReference qualifyHint="true" autoUpgrade="true">M:System.Int32.CompareTo(System.Int32)</codeEntityReference> method to compare the values of the <codeEntityReference autoUpgrade="true">T:System.Int32</codeEntityReference> instance and the <codeEntityReference autoUpgrade="true">T:System.Int32</codeEntityReference> parameter representation.</para>
            <para>Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates generic and nongeneric versions of the <codeEntityReference autoUpgrade="true">Overload:System.Decimal.CompareTo</codeEntityReference> method for several value and reference types.</para>
                <codeReference>T.CompareTo#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Compare(System.Decimal,System.Decimal)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Equals(System.Object)</codeEntityReference>
        </relatedTopics>
      <overload>
        <summary>
          <para>Compares this instance to a specified object or <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> and returns an indication of their relative values.</para>
        </summary>
      </overload>
</dduexml>
    </member>
    <member name="M:System.Decimal.CompareTo(System.Object)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Compares this instance to a specified <codeEntityReference autoUpgrade="true">T:System.Object</codeEntityReference>.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>An <codeEntityReference autoUpgrade="true">T:System.Object</codeEntityReference> or <languageKeyword>null</languageKeyword>. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A signed number indicating the relative values of this instance and <parameterReference>value</parameterReference>.</para>
          <table>
            <tableHeader>
              <row>
                <entry>
                  <para>Return Value </para>
                </entry>
                <entry>
                  <para>Meaning </para>
                </entry>
              </row>
            </tableHeader>
            <row>
              <entry>
                <para>Less than zero </para>
              </entry>
              <entry>
                <para>This instance is less than <parameterReference>value</parameterReference>. </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>Zero </para>
              </entry>
              <entry>
                <para>This instance is equal to <parameterReference>value</parameterReference>. </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>Greater than zero </para>
              </entry>
              <entry>
                <para>This instance is greater than <parameterReference>value</parameterReference>.</para>
                <para>-or- </para>
                <para>
                  <parameterReference>value</parameterReference> is <languageKeyword>null</languageKeyword>. </para>
              </entry>
            </row>
          </table>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentException</codeEntityReference>
            <content>
              <para>
                <parameterReference>value</parameterReference> is not a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>Any instance of <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>, regardless of its value, is considered greater than <languageKeyword>null</languageKeyword>.</para>
            <para>Parameter <parameterReference>value</parameterReference> must be <languageKeyword>null</languageKeyword> or an instance of <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>; otherwise, an exception is thrown.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example compares several <languageKeyword>Decimal</languageKeyword> and other objects to a reference <languageKeyword>Decimal</languageKeyword> value using the <languageKeyword>CompareTo</languageKeyword> method.</para>
                <codeReference>System.Decimal.Compare_Equals#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Compare(System.Decimal,System.Decimal)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Equals(System.Object)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.Divide(System.Decimal,System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Divides two specified <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> values.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d1</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> (the dividend). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>d2</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> (the divisor). </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> that is the result of dividing <parameterReference>d1</parameterReference> by <parameterReference>d2</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.DivideByZeroException</codeEntityReference>
            <content>
              <para>
                <parameterReference>d2</parameterReference> is zero. </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>The return value (that is, the quotient) is less than <codeEntityReference autoUpgrade="true">F:System.Decimal.MinValue</codeEntityReference> or greater than <codeEntityReference autoUpgrade="true">F:System.Decimal.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example creates several pairs of <languageKeyword>Decimal</languageKeyword> values and calculates their quotients with the <languageKeyword>Divide</languageKeyword> method.</para>
                <codeReference>System.Decimal.Mul_Div_Rem#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Add(System.Decimal,System.Decimal)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Subtract(System.Decimal,System.Decimal)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Multiply(System.Decimal,System.Decimal)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="Overload:System.Decimal.Equals">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Returns a value indicating whether two instances of <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> represent the same value.</para>
        </summary>
      </dduexml>
    </member>
    <member name="M:System.Decimal.Equals(System.Decimal,System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Returns a value indicating whether two specified instances of <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> represent the same value.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d1</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>d2</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>
            <languageKeyword>true</languageKeyword> if <parameterReference>d1</parameterReference> and <parameterReference>d2</parameterReference> are equal; otherwise, <languageKeyword>false</languageKeyword>.</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example compares several <languageKeyword>Decimal</languageKeyword> values to a reference <languageKeyword>Decimal</languageKeyword> value using the static <languageKeyword>Equals</languageKeyword> method.</para>
                <codeReference>System.Decimal.Compare_Equals#2</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Compare(System.Decimal,System.Decimal)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.CompareTo(System.Object)</codeEntityReference>
        </relatedTopics>
      <overload>
        <summary>
          <para>Returns a value indicating whether two instances of <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> represent the same value.</para>
        </summary>
      </overload>
</dduexml>
    </member>
    <member name="M:System.Decimal.Equals(System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Returns a value indicating whether this instance and a specified <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> object represent the same value.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> object to compare to this instance.</para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>
            <languageKeyword>true</languageKeyword> if <parameterReference>value</parameterReference> is equal to this instance; otherwise, <languageKeyword>false</languageKeyword>.</para>
        </returnValue>
        <remarks>
          <content>
            <para>This method implements the <codeEntityReference qualifyHint="true" autoUpgrade="true">T:System.IEquatable`1</codeEntityReference> interface, and performs slightly better than <codeEntityReference autoUpgrade="true">M:System.Decimal.Equals(System.Object)</codeEntityReference> because it does not have to convert the <parameterReference>value</parameterReference> parameter to an object.</para>
            <para>If <parameterReference>value</parameterReference> has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.</para>
            <para>For example, suppose the instance type is <codeEntityReference autoUpgrade="true">T:System.Int32</codeEntityReference> and the parameter type is <codeEntityReference autoUpgrade="true">T:System.Byte</codeEntityReference>. The Microsoft C# compiler generates instructions to represent the value of the parameter as an <codeEntityReference autoUpgrade="true">T:System.Int32</codeEntityReference> object, then generates a <codeEntityReference qualifyHint="true" autoUpgrade="true">M:System.Int32.CompareTo(System.Int32)</codeEntityReference> method to compare the <codeEntityReference autoUpgrade="true">T:System.Int32</codeEntityReference> instance and parameter representation.</para>
            <para>Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</para>
          </content>
        </remarks>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Equals(System.Object)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">Overload:System.Decimal.CompareTo</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Compare(System.Decimal,System.Decimal)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.Equals(System.Object)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Returns a value indicating whether this instance and a specified <codeEntityReference autoUpgrade="true">T:System.Object</codeEntityReference> represent the same type and value.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>An <codeEntityReference autoUpgrade="true">T:System.Object</codeEntityReference>. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>
            <languageKeyword>true</languageKeyword> if <parameterReference>value</parameterReference> is a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> and equal to this instance; otherwise, <languageKeyword>false</languageKeyword>.</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example compares several <languageKeyword>Decimal</languageKeyword> and other objects to a reference <languageKeyword>Decimal</languageKeyword> value using the <languageKeyword>Equals</languageKeyword> method.</para>
                <codeReference>System.Decimal.Compare_Equals#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Compare(System.Decimal,System.Decimal)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.CompareTo(System.Object)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.Floor(System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Rounds a specified <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> number to the closest integer toward negative infinity.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>If <parameterReference>d</parameterReference> has a fractional part, the next whole <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> number toward negative infinity that is less than <parameterReference>d</parameterReference>.</para>
          <para>-or- </para>
          <para>If <parameterReference>d</parameterReference> doesn't have a fractional part, <parameterReference>d</parameterReference> is returned unchanged.</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code sample illustrates the use of <languageKeyword>Floor</languageKeyword>.</para>
                <codeReference>Decimal Example#3</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Round(System.Decimal,System.Int32)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Truncate(System.Decimal)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.FromOACurrency(System.Int64)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the specified 64-bit signed integer, which contains an OLE Automation Currency value, to the equivalent <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> value.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>cy</parameterReference>
            <content>
              <para>An OLE Automation Currency value. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> that contains the equivalent of <parameterReference>cy</parameterReference>.</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example uses the <languageKeyword>FromOACurrency</languageKeyword> method to convert <codeEntityReference autoUpgrade="true">T:System.Int64</codeEntityReference> fields that contain OLE Automation Currency values to the equivalent <languageKeyword>Decimal</languageKeyword> numbers.</para>
                <codeReference>System.Decimal.OACurrency#2</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.ToOACurrency(System.Decimal)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.GetBits(System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the value of a specified instance of <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to its equivalent binary representation.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> value. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A 32-bit signed integer array with four elements that contain the binary representation of <parameterReference>d</parameterReference>.</para>
        </returnValue>
        <remarks>
          <content>
            <para>The binary representation of a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction. The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.</para>
            <para>The return value is a four-element long array of 32-bit signed integers.</para>
            <para>The first, second, and third elements of the returned array contain the low, middle, and high 32 bits of the 96-bit integer number.</para>
            <para>The fourth element of the returned array contains the scale factor and sign. It consists of the following parts: </para>
            <para>Bits 0 to 15, the lower word, are unused and must be zero.</para>
            <para>Bits 16 to 23 must contain an exponent between 0 and 28, which indicates the power of 10 to divide the integer number.</para>
            <para>Bits 24 to 30 are unused and must be zero.</para>
            <para>Bit 31 contains the sign; 0 meaning positive, and 1 meaning negative.</para>
            <para>Note that the bit representation differentiates between negative and positive zero. These values are treated as being equal in all operations.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example uses the <languageKeyword>GetBits</languageKeyword> method to convert several <languageKeyword>Decimal</languageKeyword> values to their equivalent binary representations.</para>
                <codeReference>System.Decimal.Get_Bits_Hash_Type#2</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">Overload:System.Decimal.#ctor</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.GetHashCode">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Returns the hash code for this instance.</para>
        </summary>
        <returnValue>
          <para>A 32-bit signed integer hash code.</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example uses the <languageKeyword>GetHashCode</languageKeyword> method to return the hash codes of several <languageKeyword>Decimal</languageKeyword> values.</para>
                <codeReference>System.Decimal.Get_Bits_Hash_Type#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="M:System.Decimal.GetTypeCode">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Returns the <codeEntityReference autoUpgrade="true">T:System.TypeCode</codeEntityReference> for value type <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>.</para>
        </summary>
        <returnValue>
          <para>The enumerated constant <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.TypeCode.Decimal</codeEntityReference>.</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example uses the <languageKeyword>GetTypeCode</languageKeyword> method to return the type code for <languageKeyword>Decimal</languageKeyword> value type.</para>
                <codeReference>System.Decimal.Get_Bits_Hash_Type#3</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="F:System.Decimal.MaxValue">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Represents the largest possible value of <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>. This field is constant and read-only.</para>
        </summary>
        <remarks>
          <content>
            <para>The value of this constant is positive 79,228,162,514,264,337,593,543,950,335.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code sample illustrates the use of <languageKeyword>MaxValue</languageKeyword> : </para>
                <codeReference>Decimal Example#2</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">F:System.Decimal.Zero</codeEntityReference>
          <codeEntityReference autoUpgrade="true">F:System.Decimal.One</codeEntityReference>
          <codeEntityReference autoUpgrade="true">F:System.Decimal.MinusOne</codeEntityReference>
          <codeEntityReference autoUpgrade="true">F:System.Decimal.MinValue</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="F:System.Decimal.MinusOne">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Represents the number negative one (-1).</para>
        </summary>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example illustrates the use of the <languageKeyword>MinusOne</languageKeyword> field.</para>
                <codeReference>System.Decimal.Fields#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">F:System.Decimal.Zero</codeEntityReference>
          <codeEntityReference autoUpgrade="true">F:System.Decimal.One</codeEntityReference>
          <codeEntityReference autoUpgrade="true">F:System.Decimal.MaxValue</codeEntityReference>
          <codeEntityReference autoUpgrade="true">F:System.Decimal.MinValue</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="F:System.Decimal.MinValue">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Represents the smallest possible value of <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>. This field is constant and read-only.</para>
        </summary>
        <remarks>
          <content>
            <para>The value of this constant is negative 79,228,162,514,264,337,593,543,950,335.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example illustrates the use of the <languageKeyword>MinValue</languageKeyword> field.</para>
                <codeReference>System.Decimal.Fields#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">F:System.Decimal.Zero</codeEntityReference>
          <codeEntityReference autoUpgrade="true">F:System.Decimal.One</codeEntityReference>
          <codeEntityReference autoUpgrade="true">F:System.Decimal.MinusOne</codeEntityReference>
          <codeEntityReference autoUpgrade="true">F:System.Decimal.MaxValue</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.Multiply(System.Decimal,System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Multiplies two specified <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> values.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d1</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> (the multiplicand). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>d2</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> (the multiplier). </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> that is the result of multiplying <parameterReference>d1</parameterReference> and <parameterReference>d2</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>The return value is less than <codeEntityReference autoUpgrade="true">F:System.Decimal.MinValue</codeEntityReference> or greater than <codeEntityReference autoUpgrade="true">F:System.Decimal.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example creates several pairs of <languageKeyword>Decimal</languageKeyword> values and calculates their products with the <languageKeyword>Multiply</languageKeyword> method.</para>
                <codeReference>System.Decimal.Mul_Div_Rem#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Add(System.Decimal,System.Decimal)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Subtract(System.Decimal,System.Decimal)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Divide(System.Decimal,System.Decimal)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.Negate(System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Returns the result of multiplying the specified <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> value by negative one.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> with the value of <parameterReference>d</parameterReference>, but the opposite sign.</para>
          <para>-or- </para>
          <para>Zero, if <parameterReference>d</parameterReference> is zero.</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example uses the <languageKeyword>Negate</languageKeyword> method to change the sign of several <languageKeyword>Decimal</languageKeyword> values.</para>
                <codeReference>System.Decimal.Flr_Neg_Rnd_Trnc#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="F:System.Decimal.One">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Represents the number one (1).</para>
        </summary>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example illustrates the use of the <languageKeyword>One</languageKeyword> field.</para>
                <codeReference>System.Decimal.Fields#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">F:System.Decimal.Zero</codeEntityReference>
          <codeEntityReference autoUpgrade="true">F:System.Decimal.MinusOne</codeEntityReference>
          <codeEntityReference autoUpgrade="true">F:System.Decimal.MaxValue</codeEntityReference>
          <codeEntityReference autoUpgrade="true">F:System.Decimal.MinValue</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.op_Addition(System.Decimal,System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <equivalentCodeEntity>
          <codeEntityReference>M:System.Decimal.Add(System.Decimal,System.Decimal)</codeEntityReference>
          <content>
          </content>
        </equivalentCodeEntity>
        <summary>
          <para>Adds two specified <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> values.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d1</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>d2</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> result of adding <parameterReference>d1</parameterReference> and <parameterReference>d2</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>The return value is less than <codeEntityReference autoUpgrade="true">F:System.Decimal.MinValue</codeEntityReference> or greater than <codeEntityReference autoUpgrade="true">F:System.Decimal.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example creates several pairs of <languageKeyword>Decimal</languageKeyword> values and calculates their sums with the <languageKeyword>Addition</languageKeyword> operator.</para>
                <codeReference>System.Decimal.Add_Subtract#2</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Add(System.Decimal,System.Decimal)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.op_Decrement(System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Decrements the <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> operand by one.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d</parameterReference>
            <content>
              <para>The <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> operand. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The value of <parameterReference>d</parameterReference> decremented by 1.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>The return value is less than <codeEntityReference autoUpgrade="true">F:System.Decimal.MinValue</codeEntityReference> or greater than <codeEntityReference autoUpgrade="true">F:System.Decimal.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example applies the <languageKeyword>Decrement</languageKeyword> operator to several <languageKeyword>Decimal</languageKeyword> values.</para>
                <codeReference>System.Decimal.Incr_Decr_Unary#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Subtract(System.Decimal,System.Decimal)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.op_Division(System.Decimal,System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <equivalentCodeEntity>
          <codeEntityReference>M:System.Decimal.Divide(System.Decimal,System.Decimal)</codeEntityReference>
          <content>
          </content>
        </equivalentCodeEntity>
        <summary>
          <para>Divides two specified <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> values.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d1</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> (the dividend). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>d2</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> (the divisor). </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> result of <parameterReference>d1</parameterReference> by <parameterReference>d2</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.DivideByZeroException</codeEntityReference>
            <content>
              <para>
                <parameterReference>d2</parameterReference> is zero. </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>The return value is less than <codeEntityReference autoUpgrade="true">F:System.Decimal.MinValue</codeEntityReference> or greater than <codeEntityReference autoUpgrade="true">F:System.Decimal.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example creates several pairs of <languageKeyword>Decimal</languageKeyword> values and calculates their quotients with the <languageKeyword>Division</languageKeyword> operator.</para>
                <codeReference>System.Decimal.Mul_Div_Rem#2</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Divide(System.Decimal,System.Decimal)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <equivalentCodeEntity>
          <codeEntityReference>M:System.Decimal.Equals(System.Object)</codeEntityReference>
          <content>
          </content>
        </equivalentCodeEntity>
        <summary>
          <para>Returns a value indicating whether two instances of <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> are equal.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d1</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>d2</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>
            <languageKeyword>true</languageKeyword> if <parameterReference>d1</parameterReference> and <parameterReference>d2</parameterReference> are equal; otherwise, <languageKeyword>false</languageKeyword>.</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example compares several <languageKeyword>Decimal</languageKeyword> values to a reference <languageKeyword>Decimal</languageKeyword> value using the <languageKeyword>Equality</languageKeyword> operator.</para>
                <codeReference>System.Decimal.RelationalOps#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Compare(System.Decimal,System.Decimal)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Equals(System.Object)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Byte">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <equivalentCodeEntity>
          <codeEntityReference>M:System.Decimal.ToByte(System.Decimal)</codeEntityReference>
          <content>
          </content>
        </equivalentCodeEntity>
        <summary>
          <para>Converts a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to an 8-bit unsigned integer.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to convert. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>An 8-bit unsigned integer that represents the converted <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>
                <parameterReference>value</parameterReference> is less than <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.Byte.MinValue</codeEntityReference> or greater than <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.Byte.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example converts <languageKeyword>Decimal</languageKeyword> numbers to <codeEntityReference autoUpgrade="true">T:System.Byte</codeEntityReference> values using the explicit <languageKeyword>Decimal to Byte</languageKeyword> conversion.</para>
                <codeReference>System.Decimal.ConvTo#4</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Byte</codeEntityReference>
        </relatedTopics>
      <overload>
        <summary>
          <para>Converts the value of a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> object to another type.</para>
        </summary>
        <remarks>
          <content>
          </content>
        </remarks>
      </overload>
</dduexml>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Char">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <equivalentCodeEntity>
          <codeEntityReference>M:System.Decimal.ToInt16(System.Decimal)</codeEntityReference>
          <content>
          </content>
        </equivalentCodeEntity>
        <summary>
          <para>Converts a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to a Unicode character.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to convert. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A Unicode character that represents the converted <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>
                <parameterReference>value</parameterReference> is less than <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.Int16.MinValue</codeEntityReference> or greater than <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.Int16.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example converts <languageKeyword>Decimal</languageKeyword> numbers to <codeEntityReference autoUpgrade="true">T:System.Char</codeEntityReference> values (Unicode characters) using the explicit <languageKeyword>Decimal to Char</languageKeyword> conversion.</para>
                <codeReference>System.Decimal.ConvTo#6</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Char</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Double">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <equivalentCodeEntity>
          <codeEntityReference>M:System.Decimal.ToDouble(System.Decimal)</codeEntityReference>
          <content>
          </content>
        </equivalentCodeEntity>
        <summary>
          <para>Converts a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to a double-precision floating-point number.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to convert. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A double-precision floating-point number that represents the converted <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>.</para>
        </returnValue>
        <remarks>
          <content>
            <para>This operation can produce round-off errors because a double-precision floating-point number has fewer significant digits than a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example converts <languageKeyword>Decimal</languageKeyword> numbers to <codeEntityReference autoUpgrade="true">T:System.Double</codeEntityReference> values using the explicit <languageKeyword>Decimal to Double</languageKeyword> conversion.</para>
                <codeReference>System.Decimal.ConvTo#5</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Double</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Int16">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <equivalentCodeEntity>
          <codeEntityReference>M:System.Decimal.ToInt16(System.Decimal)</codeEntityReference>
          <content>
          </content>
        </equivalentCodeEntity>
        <summary>
          <para>Converts a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to a 16-bit signed integer.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to convert. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A 16-bit signed integer that represents the converted <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>
                <parameterReference>value</parameterReference> is less than <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.Int16.MinValue</codeEntityReference> or greater than <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.Int16.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example converts <languageKeyword>Decimal</languageKeyword> numbers to <codeEntityReference autoUpgrade="true">T:System.Int16</codeEntityReference> values using the explicit <languageKeyword>Decimal to Int16</languageKeyword> conversion.</para>
                <codeReference>System.Decimal.ConvTo#3</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Int16</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Int32">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <equivalentCodeEntity>
          <codeEntityReference>M:System.Decimal.ToInt32(System.Decimal)</codeEntityReference>
          <content>
          </content>
        </equivalentCodeEntity>
        <summary>
          <para>Converts a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to a 32-bit signed integer.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to convert. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A 32-bit signed integer that represents the converted <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>
                <parameterReference>value</parameterReference> is less than <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.Int32.MinValue</codeEntityReference> or greater than <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.Int32.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example converts <languageKeyword>Decimal</languageKeyword> numbers to <codeEntityReference autoUpgrade="true">T:System.Int32</codeEntityReference> values using the explicit <languageKeyword>Decimal to Int32</languageKeyword> conversion.</para>
                <codeReference>System.Decimal.ConvTo#2</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Int32</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Int64">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <equivalentCodeEntity>
          <codeEntityReference>M:System.Decimal.ToInt64(System.Decimal)</codeEntityReference>
          <content>
          </content>
        </equivalentCodeEntity>
        <summary>
          <para>Converts a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to a 64-bit signed integer.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to convert. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A 64-bit signed integer that represents the converted <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>
                <parameterReference>value</parameterReference> is less than <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.Int64.MinValue</codeEntityReference> or greater than <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.Int64.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example converts <languageKeyword>Decimal</languageKeyword> numbers to <codeEntityReference autoUpgrade="true">T:System.Int64</codeEntityReference> values using the explicit <languageKeyword>Decimal to Int64</languageKeyword> conversion.</para>
                <codeReference>System.Decimal.ConvTo#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Int64</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.SByte">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <clsCompliantAlternative>
          <codeEntityReference>M:System.Decimal.ToInt16(System.Decimal)</codeEntityReference>
          <content>
          </content>
        </clsCompliantAlternative>
        <equivalentCodeEntity>
          <codeEntityReference>M:System.Decimal.ToSByte(System.Decimal)</codeEntityReference>
          <content>
          </content>
        </equivalentCodeEntity>
        <summary>
          <para>Converts a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to an 8-bit signed integer.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to convert. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>An 8-bit signed integer that represents the converted <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>
                <parameterReference>value</parameterReference> is less than <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.SByte.MinValue</codeEntityReference> or greater than <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.SByte.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example converts <languageKeyword>Decimal</languageKeyword> numbers to <codeEntityReference autoUpgrade="true">T:System.SByte</codeEntityReference> values using the explicit <languageKeyword>Decimal to SByte</languageKeyword> conversion.</para>
                <codeReference>System.Decimal.ConvTo#4</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.SByte</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Single">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <equivalentCodeEntity>
          <codeEntityReference>M:System.Decimal.ToSingle(System.Decimal)</codeEntityReference>
          <content>
          </content>
        </equivalentCodeEntity>
        <summary>
          <para>Converts a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to a single-precision floating-point number.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to convert. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A single-precision floating-point number that represents the converted <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>.</para>
        </returnValue>
        <remarks>
          <content>
            <para>This operation can produce round-off errors because a single-precision floating-point number has fewer significant digits than a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example converts <languageKeyword>Decimal</languageKeyword> numbers to <codeEntityReference autoUpgrade="true">T:System.Single</codeEntityReference> values using the explicit <languageKeyword>Decimal to Single</languageKeyword> conversion.</para>
                <codeReference>System.Decimal.ConvTo#5</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Single</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt16">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <equivalentCodeEntity>
          <codeEntityReference>M:System.Decimal.ToUInt16(System.Decimal)</codeEntityReference>
          <content>
          </content>
        </equivalentCodeEntity>
        <summary>
          <para>Converts a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to a 16-bit unsigned integer.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to convert. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A 16-bit unsigned integer that represents the converted <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>
                <parameterReference>value</parameterReference> is greater than <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.UInt16.MaxValue</codeEntityReference> or less than <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.UInt16.MinValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example converts <languageKeyword>Decimal</languageKeyword> numbers to <codeEntityReference autoUpgrade="true">T:System.UInt16</codeEntityReference> values using the explicit <languageKeyword>Decimal to UInt16</languageKeyword> conversion.</para>
                <codeReference>System.Decimal.ConvTo#3</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.UInt16</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt32">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <clsCompliantAlternative>
          <codeEntityReference>M:System.Decimal.ToInt64(System.Decimal)</codeEntityReference>
          <content>
          </content>
        </clsCompliantAlternative>
        <equivalentCodeEntity>
          <codeEntityReference>M:System.Decimal.ToUInt32(System.Decimal)</codeEntityReference>
          <content>
          </content>
        </equivalentCodeEntity>
        <summary>
          <para>Converts a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to a 32-bit unsigned integer.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to convert. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A 32-bit unsigned integer that represents the converted <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>
                <parameterReference>value</parameterReference> is negative or greater than <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.UInt32.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example converts <languageKeyword>Decimal</languageKeyword> numbers to <codeEntityReference autoUpgrade="true">T:System.UInt32</codeEntityReference> values using the explicit <languageKeyword>Decimal to UInt32</languageKeyword> conversion.</para>
                <codeReference>System.Decimal.ConvTo#2</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.UInt32</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt64">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <equivalentCodeEntity>
          <codeEntityReference>M:System.Decimal.ToUInt64(System.Decimal)</codeEntityReference>
          <content>
          </content>
        </equivalentCodeEntity>
        <summary>
          <para>Converts a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to a 64-bit unsigned integer.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to convert. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A 64-bit unsigned integer that represents the converted <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>
                <parameterReference>value</parameterReference> is negative or greater than <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.UInt64.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example converts <languageKeyword>Decimal</languageKeyword> numbers to <codeEntityReference autoUpgrade="true">T:System.UInt64</codeEntityReference> values using the explicit <languageKeyword>Decimal to UInt64</languageKeyword> conversion.</para>
                <codeReference>System.Decimal.ConvTo#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.UInt64</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Double)~System.Decimal">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts a double-precision floating-point number to a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A double-precision floating-point number. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> that represents the converted double-precision floating point number.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>
                <parameterReference>value</parameterReference> is less than <codeEntityReference autoUpgrade="true">F:System.Decimal.MinValue</codeEntityReference> or greater than <codeEntityReference autoUpgrade="true">F:System.Decimal.MaxValue</codeEntityReference>.</para>
              <para>-or- </para>
              <para>
                <parameterReference>value</parameterReference> is <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.Double.NaN</codeEntityReference>, <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.Double.PositiveInfinity</codeEntityReference>, or <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.Double.NegativeInfinity</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example converts <codeEntityReference autoUpgrade="true">T:System.Double</codeEntityReference> values to <languageKeyword>Decimal</languageKeyword> numbers using the <languageKeyword>Double to Decimal</languageKeyword> conversion. This conversion requires the <languageKeyword>op_Explicit</languageKeyword> operator in Visual Basic.</para>
                <codeReference>System.Decimal.ConvFrom.Others#2</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Double</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Single)~System.Decimal">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts a single-precision floating-point number to a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A single-precision floating-point number. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> that represents the converted single-precision floating point number.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>
                <parameterReference>value</parameterReference> is less than <codeEntityReference autoUpgrade="true">F:System.Decimal.MinValue</codeEntityReference> or greater than <codeEntityReference autoUpgrade="true">F:System.Decimal.MaxValue</codeEntityReference>.</para>
              <para>-or- </para>
              <para>
                <parameterReference>value</parameterReference> is <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.Single.NaN</codeEntityReference>, <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.Single.PositiveInfinity</codeEntityReference>, or <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.Single.NegativeInfinity</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example converts <codeEntityReference autoUpgrade="true">T:System.Single</codeEntityReference> values to <languageKeyword>Decimal</languageKeyword> numbers using the <languageKeyword>Single to Decimal</languageKeyword> conversion. This conversion requires the <languageKeyword>op_Explicit</languageKeyword> operator in Visual Basic.</para>
                <codeReference>System.Decimal.ConvFrom.Others#3</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Single</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <equivalentCodeEntity>
          <codeEntityReference>M:System.Decimal.Compare(System.Decimal,System.Decimal)</codeEntityReference>
          <content>
          </content>
        </equivalentCodeEntity>
        <summary>
          <para>Returns a value indicating whether a specified <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> is greater than another specified <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d1</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>d2</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>
            <languageKeyword>true</languageKeyword> if <parameterReference>d1</parameterReference> is greater than <parameterReference>d2</parameterReference>; otherwise, <languageKeyword>false</languageKeyword>.</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example compares several <languageKeyword>Decimal</languageKeyword> values to a reference <languageKeyword>Decimal</languageKeyword> value using the <languageKeyword>Greater Than</languageKeyword> operator.</para>
                <codeReference>System.Decimal.RelationalOps#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Compare(System.Decimal,System.Decimal)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <equivalentCodeEntity>
          <codeEntityReference>M:System.Decimal.Compare(System.Decimal,System.Decimal)</codeEntityReference>
          <content>
          </content>
        </equivalentCodeEntity>
        <summary>
          <para>Returns a value indicating whether a specified <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> is greater than or equal to another specified <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d1</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>d2</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>
            <languageKeyword>true</languageKeyword> if <parameterReference>d1</parameterReference> is greater than or equal to <parameterReference>d2</parameterReference>; otherwise, <languageKeyword>false</languageKeyword>.</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example compares several <languageKeyword>Decimal</languageKeyword> values to a reference <languageKeyword>Decimal</languageKeyword> value using the <languageKeyword>Greater Than or Equal</languageKeyword> operator.</para>
                <codeReference>System.Decimal.RelationalOps#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Compare(System.Decimal,System.Decimal)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.Byte)~System.Decimal">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts an 8-bit unsigned integer to a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>An 8-bit unsigned integer. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> that represents the converted 8-bit unsigned integer.</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example converts <codeEntityReference autoUpgrade="true">T:System.Byte</codeEntityReference> values to <languageKeyword>Decimal</languageKeyword> numbers using the <languageKeyword>Byte to Decimal</languageKeyword> conversion. This conversion is implicit in C#, but requires the <languageKeyword>op_Implicit</languageKeyword> operator in Visual Basic and C++. Implicit conversions to <languageKeyword>Decimal</languageKeyword> use other methods in these languages.</para>
                <codeReference>System.Decimal.ConvFrom.UInts#4</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Byte</codeEntityReference>
        </relatedTopics>
      <overload>
        <summary>
          <para>Converts the value of a type to a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> value.</para>
        </summary>
        <remarks>
          <content>
          </content>
        </remarks>
      </overload>
</dduexml>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.Char)~System.Decimal">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts a Unicode character to a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A Unicode character. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> that represents the converted Unicode character.</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example converts <codeEntityReference autoUpgrade="true">T:System.Char</codeEntityReference> values (Unicode characters) to <languageKeyword>Decimal</languageKeyword> numbers using the <languageKeyword>Char to Decimal</languageKeyword> conversion. This conversion is implicit in C#, but requires the <languageKeyword>op_Implicit</languageKeyword> operator in Visual Basic and C++. Implicit conversions to <languageKeyword>Decimal</languageKeyword> use other methods in these languages.</para>
                <codeReference>System.Decimal.ConvFrom.Others#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Char</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.Int16)~System.Decimal">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts a 16-bit signed integer to a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A 16-bit signed integer. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> that represents the converted 16-bit signed integer.</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example converts <codeEntityReference autoUpgrade="true">T:System.Int16</codeEntityReference> values to <languageKeyword>Decimal</languageKeyword> numbers using the <languageKeyword>Int16 to Decimal</languageKeyword> conversion. This conversion is implicit in C#, but requires the <languageKeyword>op_Implicit</languageKeyword> operator in Visual Basic and C++. Implicit conversions to <languageKeyword>Decimal</languageKeyword> use other methods in these languages.</para>
                <codeReference>System.Decimal.ConvFrom.SInts#3</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Int16</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.Int32)~System.Decimal">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts a 32-bit signed integer to a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A 32-bit signed integer. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> that represents the converted 32-bit signed integer.</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example converts <codeEntityReference autoUpgrade="true">T:System.Int32</codeEntityReference> values to <languageKeyword>Decimal</languageKeyword> numbers using the <languageKeyword>Int32 to Decimal</languageKeyword> conversion. This conversion is implicit in C#, but requires the <languageKeyword>op_Implicit</languageKeyword> operator in Visual Basic and C++. Implicit conversions to <languageKeyword>Decimal</languageKeyword> use other methods in these languages.</para>
                <codeReference>System.Decimal.ConvFrom.SInts#2</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Int32</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.Int64)~System.Decimal">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts a 64-bit signed integer to a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A 64-bit signed integer. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> that represents the converted 64-bit signed integer.</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example converts <codeEntityReference autoUpgrade="true">T:System.Int64</codeEntityReference> values to <languageKeyword>Decimal</languageKeyword> numbers using the <languageKeyword>Int64 to Decimal</languageKeyword> conversion. This conversion is implicit in C#, but requires the <languageKeyword>op_Implicit</languageKeyword> operator in Visual Basic and C++. Implicit conversions to <languageKeyword>Decimal</languageKeyword> use other methods in these languages.</para>
                <codeReference>System.Decimal.ConvFrom.SInts#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Int64</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.SByte)~System.Decimal">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts an 8-bit signed integer to a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>An 8-bit signed integer. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> that represents the converted 8-bit signed integer.</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example converts <codeEntityReference autoUpgrade="true">T:System.SByte</codeEntityReference> values to <languageKeyword>Decimal</languageKeyword> numbers using the <languageKeyword>SByte to Decimal</languageKeyword> conversion. This conversion is implicit in C#, but requires the <languageKeyword>op_Implicit</languageKeyword> operator in Visual Basic and C++. Implicit conversions to <languageKeyword>Decimal</languageKeyword> use other methods in these languages.</para>
                <codeReference>System.Decimal.ConvFrom.SInts#4</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.SByte</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.UInt16)~System.Decimal">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts a 16-bit unsigned integer to a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A 16-bit unsigned integer. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> that represents the converted 16-bit unsigned integer.</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example converts <codeEntityReference autoUpgrade="true">T:System.UInt16</codeEntityReference> values to <languageKeyword>Decimal</languageKeyword> numbers using the <languageKeyword>UInt16 to Decimal</languageKeyword> conversion. This conversion is implicit in C#, but requires the <languageKeyword>op_Implicit</languageKeyword> operator in Visual Basic and C++. Implicit conversions to <languageKeyword>Decimal</languageKeyword> use other methods in these languages.</para>
                <codeReference>System.Decimal.ConvFrom.UInts#3</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.UInt16</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.UInt32)~System.Decimal">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts a 32-bit unsigned integer to a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A 32-bit unsigned integer. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> that represents the converted 32-bit unsigned integer.</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example converts <codeEntityReference autoUpgrade="true">T:System.UInt32</codeEntityReference> values to <languageKeyword>Decimal</languageKeyword> numbers using the <languageKeyword>UInt32 to Decimal</languageKeyword> conversion. This conversion is implicit in C#, but requires the <languageKeyword>op_Implicit</languageKeyword> operator in Visual Basic and C++. Implicit conversions to <languageKeyword>Decimal</languageKeyword> use other methods in these languages.</para>
                <codeReference>System.Decimal.ConvFrom.UInts#2</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.UInt32</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.UInt64)~System.Decimal">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts a 64-bit unsigned integer to a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A 64-bit unsigned integer. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> that represents the converted 64-bit unsigned integer.</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example converts <codeEntityReference autoUpgrade="true">T:System.UInt64</codeEntityReference> values to <languageKeyword>Decimal</languageKeyword> numbers using the <languageKeyword>UInt64 to Decimal</languageKeyword> conversion. This conversion is implicit in C#, but requires the <languageKeyword>op_Implicit</languageKeyword> operator in Visual Basic and C++. Implicit conversions to <languageKeyword>Decimal</languageKeyword> use other methods in these languages.</para>
                <codeReference>System.Decimal.ConvFrom.UInts#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.UInt64</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.op_Increment(System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Increments the <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> operand by 1.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d</parameterReference>
            <content>
              <para>The <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> operand. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The value of <parameterReference>d</parameterReference> incremented by 1.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>The return value is less than <codeEntityReference autoUpgrade="true">F:System.Decimal.MinValue</codeEntityReference> or greater than <codeEntityReference autoUpgrade="true">F:System.Decimal.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example applies the <languageKeyword>Increment</languageKeyword> operator to several <languageKeyword>Decimal</languageKeyword> values.</para>
                <codeReference>System.Decimal.Incr_Decr_Unary#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Add(System.Decimal,System.Decimal)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <equivalentCodeEntity>
          <codeEntityReference>M:System.Decimal.Compare(System.Decimal,System.Decimal)</codeEntityReference>
          <content>
          </content>
        </equivalentCodeEntity>
        <summary>
          <para>Returns a value indicating whether two instances of <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> are not equal.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d1</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>d2</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>
            <languageKeyword>true</languageKeyword> if <parameterReference>d1</parameterReference> and <parameterReference>d2</parameterReference> are not equal; otherwise, <languageKeyword>false</languageKeyword>.</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example compares several <languageKeyword>Decimal</languageKeyword> values to a reference <languageKeyword>Decimal</languageKeyword> value using the <languageKeyword>Inequality</languageKeyword> operator.</para>
                <codeReference>System.Decimal.RelationalOps#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Compare(System.Decimal,System.Decimal)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Equals(System.Object)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.op_LessThan(System.Decimal,System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <equivalentCodeEntity>
          <codeEntityReference>M:System.Decimal.Compare(System.Decimal,System.Decimal)</codeEntityReference>
          <content>
          </content>
        </equivalentCodeEntity>
        <summary>
          <para>Returns a value indicating whether a specified <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> is less than another specified <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d1</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>d2</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>
            <languageKeyword>true</languageKeyword> if <parameterReference>d1</parameterReference> is less than <parameterReference>d2</parameterReference>; otherwise, <languageKeyword>false</languageKeyword>.</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example compares several <languageKeyword>Decimal</languageKeyword> values to a reference <languageKeyword>Decimal</languageKeyword> value using the <languageKeyword>Less Than</languageKeyword> operator.</para>
                <codeReference>System.Decimal.RelationalOps#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Compare(System.Decimal,System.Decimal)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <equivalentCodeEntity>
          <codeEntityReference>M:System.Decimal.Compare(System.Decimal,System.Decimal)</codeEntityReference>
          <content>
          </content>
        </equivalentCodeEntity>
        <summary>
          <para>Returns a value indicating whether a specified <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> is less than or equal to another specified <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d1</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>d2</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>
            <languageKeyword>true</languageKeyword> if <parameterReference>d1</parameterReference> is less than or equal to <parameterReference>d2</parameterReference>; otherwise, <languageKeyword>false</languageKeyword>.</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example compares several <languageKeyword>Decimal</languageKeyword> values to a reference <languageKeyword>Decimal</languageKeyword> value using the <languageKeyword>Less Than or Equal</languageKeyword> operator.</para>
                <codeReference>System.Decimal.RelationalOps#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Compare(System.Decimal,System.Decimal)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <equivalentCodeEntity>
          <codeEntityReference>M:System.Decimal.Remainder(System.Decimal,System.Decimal)</codeEntityReference>
          <content>
          </content>
        </equivalentCodeEntity>
        <summary>
          <para>Returns the remainder resulting from dividing two specified <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> values.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d1</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> (the dividend). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>d2</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> (the divisor). </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> remainder resulting from dividing <parameterReference>d1</parameterReference> by <parameterReference>d2</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.DivideByZeroException</codeEntityReference>
            <content>
              <para>
                <parameterReference>d2</parameterReference> is <languageKeyword>zero</languageKeyword>. </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>The return value is less than <codeEntityReference autoUpgrade="true">F:System.Decimal.MinValue</codeEntityReference> or greater than <codeEntityReference autoUpgrade="true">F:System.Decimal.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example creates several pairs of <languageKeyword>Decimal</languageKeyword> values and calculates the remainders resulting from dividing the two values with the <languageKeyword>Modulus</languageKeyword> operator.</para>
                <codeReference>System.Decimal.Mul_Div_Rem#2</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Remainder(System.Decimal,System.Decimal)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.op_Multiply(System.Decimal,System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <equivalentCodeEntity>
          <codeEntityReference>M:System.Decimal.Multiply(System.Decimal,System.Decimal)</codeEntityReference>
          <content>
          </content>
        </equivalentCodeEntity>
        <summary>
          <para>Multiplies two specified <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> values.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d1</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>d2</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> result of multiplying <parameterReference>d1</parameterReference> by <parameterReference>d2</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>The return value is less than <codeEntityReference autoUpgrade="true">F:System.Decimal.MinValue</codeEntityReference> or greater than <codeEntityReference autoUpgrade="true">F:System.Decimal.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example creates several pairs of <languageKeyword>Decimal</languageKeyword> values and calculates their products with the <languageKeyword>Multiplication</languageKeyword> operator.</para>
                <codeReference>System.Decimal.Mul_Div_Rem#2</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Multiply(System.Decimal,System.Decimal)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.op_Subtraction(System.Decimal,System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <equivalentCodeEntity>
          <codeEntityReference>M:System.Decimal.Subtract(System.Decimal,System.Decimal)</codeEntityReference>
          <content>
          </content>
        </equivalentCodeEntity>
        <summary>
          <para>Subtracts two specified <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> values.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d1</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>d2</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> result of subtracting <parameterReference>d2</parameterReference> from <parameterReference>d1</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>The return value is less than <codeEntityReference autoUpgrade="true">F:System.Decimal.MinValue</codeEntityReference> or greater than <codeEntityReference autoUpgrade="true">F:System.Decimal.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example creates several pairs of <languageKeyword>Decimal</languageKeyword> values and calculates their differences with the <languageKeyword>Subtraction</languageKeyword> operator.</para>
                <codeReference>System.Decimal.Add_Subtract#2</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Subtract(System.Decimal,System.Decimal)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.op_UnaryNegation(System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <equivalentCodeEntity>
          <codeEntityReference>M:System.Decimal.Negate(System.Decimal)</codeEntityReference>
          <content>
          </content>
        </equivalentCodeEntity>
        <summary>
          <para>Negates the value of the specified <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> operand.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d</parameterReference>
            <content>
              <para>The <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> operand. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The result of <parameterReference>d</parameterReference> multiplied by negative one (-1).</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example applies the <languageKeyword>Unary Negation</languageKeyword> operator to several <languageKeyword>Decimal</languageKeyword> values.</para>
                <codeReference>System.Decimal.Incr_Decr_Unary#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Negate(System.Decimal)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.op_UnaryPlus(System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Returns the value of the <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> operand (the sign of the operand is unchanged).</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d</parameterReference>
            <content>
              <para>The <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> operand. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The value of the operand, <parameterReference>d</parameterReference>.</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example applies the <languageKeyword>Unary Plus</languageKeyword> operator to several <languageKeyword>Decimal</languageKeyword> values.</para>
                <codeReference>System.Decimal.Incr_Decr_Unary#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="M:System.Decimal.Parse(System.String)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference> representation of a number to its <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> equivalent.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>s</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference> containing a number to convert. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> number equivalent to the number contained in <parameterReference>s</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentNullException</codeEntityReference>
            <content>
              <para>
                <parameterReference>s</parameterReference> is <languageKeyword>null</languageKeyword>. </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.FormatException</codeEntityReference>
            <content>
              <para>
                <parameterReference>s</parameterReference> is not in the correct format. </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>
                <parameterReference>s</parameterReference> represents a number less than <codeEntityReference autoUpgrade="true">F:System.Decimal.MinValue</codeEntityReference> or greater than <codeEntityReference autoUpgrade="true">F:System.Decimal.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>Parameter <parameterReference>s</parameterReference> contains a number of the form: </para>
            <para>[ws][sign]digits[.fractional-digits][ws] </para>
            <para>Items in square brackets ('[' and ']') are optional, and other items are as follows.</para>
            <definitionTable>
              <definedTerm> ws</definedTerm>
              <definition>
                <para>Optional white space. </para>
              </definition>
              <definedTerm> sign</definedTerm>
              <definition>
                <para>An optional sign. </para>
              </definition>
              <definedTerm> digits</definedTerm>
              <definition>
                <para>A sequence of digits ranging from 0 to 9. </para>
              </definition>
              <definedTerm> '.'</definedTerm>
              <definition>
                <para>A culture-specific decimal point symbol. </para>
              </definition>
              <definedTerm> fractional-digits</definedTerm>
              <definition>
                <para>A sequence of digits ranging from 0 to 9. </para>
              </definition>
            </definitionTable>
            <para>Parameter <parameterReference>s</parameterReference> is interpreted using the <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.Globalization.NumberStyles.Number</codeEntityReference> style.</para>
            <para>Parameter <parameterReference>s</parameterReference> is parsed using the formatting information in a <codeEntityReference autoUpgrade="true">T:System.Globalization.NumberFormatInfo</codeEntityReference> initialized for the current system culture. For more information, see <codeEntityReference autoUpgrade="true">P:System.Globalization.NumberFormatInfo.CurrentInfo</codeEntityReference>.</para>
            <para>If necessary, the value of <parameterReference>s</parameterReference> is rounded using rounding to nearest.</para>
            <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> has 29 digits of precision. If <parameterReference>s</parameterReference> represents a number that has more than 29 digits, but has a fractional part and is within the range of <codeEntityReference autoUpgrade="true">F:System.Decimal.MaxValue</codeEntityReference> and <codeEntityReference autoUpgrade="true">F:System.Decimal.MinValue</codeEntityReference>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example parses <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference> representations of <languageKeyword>Decimal</languageKeyword> values with several overloads of the <languageKeyword>Parse</languageKeyword> method.</para>
                <codeReference>System.Decimal.Parse#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <link xlink:href="0D1364DA-5B30-4D42-8E6B-03378343343F">[&lt;topic://cpConFormattingOverview&gt;]</link>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.ToString</codeEntityReference>
          <codeEntityReference qualifyHint="true" autoUpgrade="true">M:System.Math.Round(System.Double)</codeEntityReference>
        </relatedTopics>
      <overload>
        <summary>
          <para>Converts the <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference> representation of a number to its <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> equivalent.</para>
        </summary>
      </overload>
</dduexml>
    </member>
    <member name="Overload:System.Decimal.Parse">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference> representation of a number to its <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> equivalent.</para>
        </summary>
      </dduexml>
    </member>
    <member name="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference> representation of a number in a specified style to its <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> equivalent using the specified formatting style.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>s</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference> containing a number to convert. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>style</parameterReference>
            <content>
              <para>A bitwise combination of <codeEntityReference autoUpgrade="true">T:System.Globalization.NumberStyles</codeEntityReference> values that indicates the permitted format of <parameterReference>s</parameterReference>. A typical value to specify is <codeEntityReference autoUpgrade="true">F:System.Globalization.NumberStyles.Number</codeEntityReference>.</para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> number equivalent to the number contained in <parameterReference>s</parameterReference> as specified by <parameterReference>style</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentNullException</codeEntityReference>
            <content>
              <para>
                <parameterReference>s</parameterReference> is <languageKeyword>null</languageKeyword>.</para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentException</codeEntityReference>
            <content>
              <para>
                <parameterReference>style</parameterReference> is not a <codeEntityReference autoUpgrade="true">T:System.Globalization.NumberStyles</codeEntityReference> value. </para>
              <para>-or-</para>
              <para>
                <parameterReference>style</parameterReference> is the <codeEntityReference autoUpgrade="true">F:System.Globalization.NumberStyles.AllowHexSpecifier</codeEntityReference> value.</para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.FormatException</codeEntityReference>
            <content>
              <para>
                <parameterReference>s</parameterReference> is not in the correct format. </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>
                <parameterReference>s</parameterReference> represents a number less than <codeEntityReference autoUpgrade="true">F:System.Decimal.MinValue</codeEntityReference> or greater than <codeEntityReference autoUpgrade="true">F:System.Decimal.MaxValue</codeEntityReference></para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>Parameter <parameterReference>s</parameterReference> contains a number of the form: </para>
            <para>[ws][sign]digits[.fractional-digits][ws] </para>
            <para>Items in square brackets ('[' and ']') are optional, and other items are as follows.</para>
            <definitionTable>
              <definedTerm> ws</definedTerm>
              <definition>
                <para>Optional white space. </para>
              </definition>
              <definedTerm> sign</definedTerm>
              <definition>
                <para>An optional sign. </para>
              </definition>
              <definedTerm> digits</definedTerm>
              <definition>
                <para>A sequence of digits ranging from 0 to 9. </para>
              </definition>
              <definedTerm> '.'</definedTerm>
              <definition>
                <para>A culture-specific decimal point symbol. </para>
              </definition>
              <definedTerm> fractional-digits</definedTerm>
              <definition>
                <para>A sequence of digits ranging from 0 to 9. </para>
              </definition>
            </definitionTable>
            <para>The <parameterReference>style</parameterReference> parameter specifies the permitted style of the numeric string. It must be a combination of bit flags from the <codeEntityReference autoUpgrade="true">T:System.Globalization.NumberStyles</codeEntityReference> enumeration. If <parameterReference>style</parameterReference> is null, <parameterReference>s</parameterReference> is interpreted using the <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.Globalization.NumberStyles.Number</codeEntityReference> style.</para>
            <para>Parameter <parameterReference>s</parameterReference> is parsed using the formatting information in a <codeEntityReference autoUpgrade="true">T:System.Globalization.NumberFormatInfo</codeEntityReference> initialized for the current system culture. For more information, see <codeEntityReference autoUpgrade="true">P:System.Globalization.NumberFormatInfo.CurrentInfo</codeEntityReference>.</para>
            <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> has 29 digits of precision. If <parameterReference>s</parameterReference> represents a number that has more than 29 digits, but has a fractional part and is within the range of <codeEntityReference autoUpgrade="true">F:System.Decimal.MaxValue</codeEntityReference> and <codeEntityReference autoUpgrade="true">F:System.Decimal.MinValue</codeEntityReference>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example parses <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference> representations of <languageKeyword>Decimal</languageKeyword> values with several overloads of the <languageKeyword>Parse</languageKeyword> method.</para>
                <codeReference>System.Decimal.Parse#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <link xlink:href="0D1364DA-5B30-4D42-8E6B-03378343343F">[&lt;topic://cpConFormattingOverview&gt;]</link>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.ToString</codeEntityReference>
          <codeEntityReference qualifyHint="true" autoUpgrade="true">M:System.Math.Round(System.Double)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference> representation of a number to its <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> equivalent using the specified style and culture-specific format.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>s</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference> containing a number to convert. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>style</parameterReference>
            <content>
              <para>A bitwise combination of <codeEntityReference autoUpgrade="true">T:System.Globalization.NumberStyles</codeEntityReference> values that indicates the permitted format of <parameterReference>s</parameterReference>. A typical value to specify is <codeEntityReference autoUpgrade="true">F:System.Globalization.NumberStyles.Number</codeEntityReference>.</para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>provider</parameterReference>
            <content>
              <para>An <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> that supplies culture-specific formatting information about <parameterReference>s</parameterReference>. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> number equivalent to the number contained in <parameterReference>s</parameterReference> as specified by <parameterReference>style</parameterReference> and <parameterReference>provider</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.FormatException</codeEntityReference>
            <content>
              <para>
                <parameterReference>s</parameterReference> is not in the correct format. </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>
                <parameterReference>s</parameterReference> represents a number less than <codeEntityReference autoUpgrade="true">F:System.Decimal.MinValue</codeEntityReference> or greater than <codeEntityReference autoUpgrade="true">F:System.Decimal.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentNullException</codeEntityReference>
            <content>
              <para>
                <parameterReference>s</parameterReference> is <languageKeyword>null</languageKeyword>.</para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentException</codeEntityReference>
            <content>
              <para>
                <parameterReference>style</parameterReference> is not a <codeEntityReference autoUpgrade="true">T:System.Globalization.NumberStyles</codeEntityReference> value. </para>
              <para>-or-</para>
              <para>
                <parameterReference>style</parameterReference> is the <codeEntityReference autoUpgrade="true">F:System.Globalization.NumberStyles.AllowHexSpecifier</codeEntityReference> value.</para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>Parameter <parameterReference>s</parameterReference> contains a number of the form: </para>
            <para>[ws][sign]digits[.fractional-digits][ws] </para>
            <para>Items in square brackets ('[' and ']') are optional, and other items are as follows.</para>
            <definitionTable>
              <definedTerm> ws</definedTerm>
              <definition>
                <para>Optional white space. </para>
              </definition>
              <definedTerm> sign</definedTerm>
              <definition>
                <para>An optional sign. </para>
              </definition>
              <definedTerm> digits</definedTerm>
              <definition>
                <para>A sequence of digits ranging from 0 to 9. </para>
              </definition>
              <definedTerm> '.'</definedTerm>
              <definition>
                <para>A culture-specific decimal point symbol. </para>
              </definition>
              <definedTerm> fractional-digits</definedTerm>
              <definition>
                <para>A sequence of digits ranging from 0 to 9. </para>
              </definition>
            </definitionTable>
            <para>The <parameterReference>style</parameterReference> parameter can be one or more <codeEntityReference autoUpgrade="true">T:System.Globalization.NumberStyles</codeEntityReference> enumerated constants combined using a bitwise OR operation.</para>
            <para>The <parameterReference>style</parameterReference> parameter specifies the permitted style of the numeric string. It must be a combination of bit flags from the <languageKeyword>NumberStyles</languageKeyword> enumeration. If <parameterReference>style</parameterReference> is null, <parameterReference>s</parameterReference> is interpreted using the <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.Globalization.NumberStyles.Number</codeEntityReference> style.</para>
            <para>Parameter <parameterReference>provider</parameterReference> is an <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> that obtains a <codeEntityReference autoUpgrade="true">T:System.Globalization.NumberFormatInfo</codeEntityReference>. The <languageKeyword>NumberFormatInfo</languageKeyword> provides culture-specific information about the format of <parameterReference>s</parameterReference>. If <parameterReference>provider</parameterReference> is <languageKeyword>null</languageKeyword>, the <languageKeyword>NumberFormatInfo</languageKeyword> for the current culture is used.</para>
            <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> has 29 digits of precision. If <parameterReference>s</parameterReference> represents a number that has more than 29 digits, but has a fractional part and is within the range of <codeEntityReference autoUpgrade="true">F:System.Decimal.MaxValue</codeEntityReference> and <codeEntityReference autoUpgrade="true">F:System.Decimal.MinValue</codeEntityReference>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example parses <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference> representations of <languageKeyword>Decimal</languageKeyword> values with several overloads of the <languageKeyword>Parse</languageKeyword> method.</para>
                <codeReference>System.Decimal.Parse#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <link xlink:href="0D1364DA-5B30-4D42-8E6B-03378343343F">[&lt;topic://cpConFormattingOverview&gt;]</link>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.ToString</codeEntityReference>
          <codeEntityReference qualifyHint="true" autoUpgrade="true">M:System.Math.Round(System.Double)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference> representation of a number to its <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> equivalent using the specified culture-specific format information.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>s</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference> containing a number to convert. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>provider</parameterReference>
            <content>
              <para>An <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> that supplies culture-specific formatting information about <parameterReference>s</parameterReference>. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> number equivalent to the number contained in <parameterReference>s</parameterReference> as specified by <parameterReference>provider</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentNullException</codeEntityReference>
            <content>
              <para>
                <parameterReference>s</parameterReference> is <languageKeyword>null</languageKeyword>. </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.FormatException</codeEntityReference>
            <content>
              <para>
                <parameterReference>s</parameterReference> is not of the correct format </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>
                <parameterReference>s</parameterReference> represents a number less than <codeEntityReference autoUpgrade="true">F:System.Decimal.MinValue</codeEntityReference> or greater than <codeEntityReference autoUpgrade="true">F:System.Decimal.MaxValue</codeEntityReference></para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>Parameter <parameterReference>s</parameterReference> contains a number of the form: </para>
            <para>[ws][sign]digits[.fractional-digits][ws] </para>
            <para>Items in square brackets ('[' and ']') are optional, and other items are as follows.</para>
            <definitionTable>
              <definedTerm> ws</definedTerm>
              <definition>
                <para>Optional white space. </para>
              </definition>
              <definedTerm> sign</definedTerm>
              <definition>
                <para>An optional sign. </para>
              </definition>
              <definedTerm> digits</definedTerm>
              <definition>
                <para>A sequence of digits ranging from 0 to 9. </para>
              </definition>
              <definedTerm> '.'</definedTerm>
              <definition>
                <para>A culture-specific decimal point symbol. </para>
              </definition>
              <definedTerm> fractional-digits</definedTerm>
              <definition>
                <para>A sequence of digits ranging from 0 to 9. </para>
              </definition>
            </definitionTable>
            <para>Parameter <parameterReference>s</parameterReference> is interpreted using the <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.Globalization.NumberStyles.Number</codeEntityReference> style.</para>
            <para>Parameter <parameterReference>provider</parameterReference> is an <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> that obtains a <codeEntityReference autoUpgrade="true">T:System.Globalization.NumberFormatInfo</codeEntityReference>. The <languageKeyword>NumberFormatInfo</languageKeyword> provides culture-specific information about the format of <parameterReference>s</parameterReference>. If <parameterReference>provider</parameterReference> is <languageKeyword>null</languageKeyword>, the <languageKeyword>NumberFormatInfo</languageKeyword> for the current culture is used.</para>
            <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> has 29 digits of precision. If <parameterReference>s</parameterReference> represents a number that has more than 29 digits, but has a fractional part and is within the range of <codeEntityReference autoUpgrade="true">F:System.Decimal.MaxValue</codeEntityReference> and <codeEntityReference autoUpgrade="true">F:System.Decimal.MinValue</codeEntityReference>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example parses <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference> representations of <languageKeyword>Decimal</languageKeyword> values with several overloads of the <languageKeyword>Parse</languageKeyword> method.</para>
                <codeReference>System.Decimal.Parse#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <link xlink:href="0D1364DA-5B30-4D42-8E6B-03378343343F">[&lt;topic://cpConFormattingOverview&gt;]</link>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.ToString</codeEntityReference>
          <codeEntityReference qualifyHint="true" autoUpgrade="true">M:System.Math.Round(System.Double)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.Remainder(System.Decimal,System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Computes the remainder after dividing two <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> values.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d1</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> (the dividend). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>d2</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> (the divisor). </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> that is the remainder after dividing <parameterReference>d1</parameterReference> by <parameterReference>d2</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.DivideByZeroException</codeEntityReference>
            <content>
              <para>
                <parameterReference>d2</parameterReference> is zero. </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>The return value is less than <codeEntityReference autoUpgrade="true">F:System.Decimal.MinValue</codeEntityReference> or greater than <codeEntityReference autoUpgrade="true">F:System.Decimal.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example creates several pairs of <languageKeyword>Decimal</languageKeyword> values and calculates the remainders resulting from dividing the two values with the <languageKeyword>Remainder</languageKeyword> method.</para>
                <codeReference>System.Decimal.Mul_Div_Rem#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="M:System.Decimal.Round(System.Decimal,System.Int32)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Rounds a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> value to a specified number of decimal places.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> value to round. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>decimals</parameterReference>
            <content>
              <para>A value from 0 to 28 that specifies the number of decimal places to round to. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> number equivalent to <parameterReference>d</parameterReference> rounded to <parameterReference>decimals</parameterReference> number of decimal places.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentOutOfRangeException</codeEntityReference>
            <content>
              <para>
                <parameterReference>decimals</parameterReference> is not a value from 0 to 28. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>When <parameterReference>d</parameterReference> is exactly halfway between two rounded values, the result is the rounded value that has an even digit in the far right decimal position. For example, when rounded to two decimals, the value 2.345 becomes 2.34 and the value 2.355 becomes 2.36. This process is known as rounding toward even, or rounding to nearest.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example rounds several <languageKeyword>Decimal</languageKeyword> values to a specified number of decimal places using the <languageKeyword>Round</languageKeyword> method.</para>
                <codeReference>System.Decimal.Flr_Neg_Rnd_Trnc#2</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Floor(System.Decimal)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Truncate(System.Decimal)</codeEntityReference>
        </relatedTopics>
      <overload>
        <summary>
          <para>Rounds a value to the nearest integer or specified number of decimal places.</para>
        </summary>
        <remarks>
          <content>
          </content>
        </remarks>
      </overload>
</dduexml>
    </member>
    <member name="M:System.Decimal.Subtract(System.Decimal,System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Subtracts one specified <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> value from another.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d1</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> (the minuend). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>d2</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> (the subtrahend). </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> result of subtracting <parameterReference>d2</parameterReference> from <parameterReference>d1</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>The return value is less than <codeEntityReference autoUpgrade="true">F:System.Decimal.MinValue</codeEntityReference> or greater than <codeEntityReference autoUpgrade="true">F:System.Decimal.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code sample illustrates the use of <languageKeyword>Subtract</languageKeyword> : </para>
                <codeReference>Decimal Example#4</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Add(System.Decimal,System.Decimal)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Multiply(System.Decimal,System.Decimal)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Divide(System.Decimal,System.Decimal)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.System.IConvertible.ToBoolean(System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <internalOnly>
        </internalOnly>
        <summary>
          <para>This conversion is not supported. Attempting to do so throws an <languageKeyword>InvalidCastException</languageKeyword>.</para>
        </summary>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.InvalidCastException</codeEntityReference>
            <content>
              <para>Unsupported conversion of <languageKeyword>Decimal</languageKeyword>. </para>
            </content>
          </exception>
        </exceptions>
      </dduexml>
    </member>
    <member name="M:System.Decimal.System.IConvertible.ToByte(System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <internalOnly>
        </internalOnly>
        <summary>
          <para>Converts a <languageKeyword>Decimal</languageKeyword> to an 8-bit unsigned integer.</para>
        </summary>
        <returnValue>
          <para>An 8-bit unsigned integer equivalent to the value of this instance of <languageKeyword>Decimal</languageKeyword>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>The resulting integer value is less than Byte.MinValue or greater than Byte.MaxValue. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The Decimal value is rounded toward zero to the nearest integer value, and the result of this operation is returned as a byte.</para>
          </content>
        </remarks>
      </dduexml>
    </member>
    <member name="M:System.Decimal.System.IConvertible.ToChar(System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <internalOnly>
        </internalOnly>
        <summary>
          <para>This conversion is not supported. Attempting to do so throws an <languageKeyword>InvalidCastException</languageKeyword>.</para>
        </summary>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.InvalidCastException</codeEntityReference>
            <content>
              <para>Unsupported conversion of <languageKeyword>Decimal</languageKeyword>. </para>
            </content>
          </exception>
        </exceptions>
      </dduexml>
    </member>
    <member name="M:System.Decimal.System.IConvertible.ToDateTime(System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <internalOnly>
        </internalOnly>
        <summary>
          <para>This conversion is not supported. Attempting to do so throws an <languageKeyword>InvalidCastException</languageKeyword>.</para>
        </summary>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.InvalidCastException</codeEntityReference>
            <content>
              <para>Unsupported conversion of <languageKeyword>Decimal</languageKeyword>. </para>
            </content>
          </exception>
        </exceptions>
      </dduexml>
    </member>
    <member name="M:System.Decimal.System.IConvertible.ToDecimal(System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <internalOnly>
        </internalOnly>
        <summary>
          <para>Returns this instance of <languageKeyword>Decimal</languageKeyword>.</para>
        </summary>
        <returnValue>
          <para>A <languageKeyword>Decimal</languageKeyword>.</para>
        </returnValue>
        <remarks>
          <content>
          </content>
        </remarks>
      </dduexml>
    </member>
    <member name="M:System.Decimal.System.IConvertible.ToDouble(System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <internalOnly>
        </internalOnly>
        <summary>
          <para>Converts this instance of <languageKeyword>Decimal</languageKeyword> to a double-precision floating-point number.</para>
        </summary>
        <returnValue>
          <para>A double-precision floating-point number equivalent to the value of this instance of <languageKeyword>Decimal</languageKeyword>.</para>
        </returnValue>
        <remarks>
          <content>
            <para>Since a Double has fewer significant digits than a Decimal, this operation may produce round-off errors.</para>
          </content>
        </remarks>
      </dduexml>
    </member>
    <member name="M:System.Decimal.System.IConvertible.ToInt16(System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <internalOnly>
        </internalOnly>
        <summary>
          <para>Converts a <languageKeyword>Decimal</languageKeyword> to a 16-bit signed integer.</para>
        </summary>
        <returnValue>
          <para>A 16-bit signed integer equivalent to the value of this instance of <languageKeyword>Decimal</languageKeyword>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>The resulting integer value is less than Int16.MinValue or greater than Int16.MaxValue. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The <languageKeyword>Decimal</languageKeyword> value is rounded toward zero to the nearest integer value.</para>
          </content>
        </remarks>
      </dduexml>
    </member>
    <member name="M:System.Decimal.System.IConvertible.ToInt32(System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <internalOnly>
        </internalOnly>
        <summary>
          <para>Converts this instance of <languageKeyword>Decimal</languageKeyword> to a 32-bit signed integer.</para>
        </summary>
        <returnValue>
          <para>A 32-bit signed integer equivalent to the value of this instance of <languageKeyword>Decimal</languageKeyword>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>The resulting integer value is less than Int32.MinValue or greater than Int32.MaxValue. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The Decimal value is rounded toward zero to the nearest integer value.</para>
          </content>
        </remarks>
      </dduexml>
    </member>
    <member name="M:System.Decimal.System.IConvertible.ToInt64(System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <internalOnly>
        </internalOnly>
        <summary>
          <para>Converts this instance of <languageKeyword>Decimal</languageKeyword> to a 64-bit signed integer.</para>
        </summary>
        <returnValue>
          <para>A 64-bit signed integer equivalent to the value of this instance of <languageKeyword>Decimal</languageKeyword>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>
                <parameterReference>d</parameterReference> is less than Int64.MinValue or greater than Int64.MaxValue. </para>
            </content>
          </exception>
        </exceptions>
      </dduexml>
    </member>
    <member name="M:System.Decimal.System.IConvertible.ToSByte(System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <internalOnly>
        </internalOnly>
        <summary>
          <para>Converts a Decimal to an <codeEntityReference autoUpgrade="true">T:System.SByte</codeEntityReference> with the default format.</para>
        </summary>
        <returnValue>
          <para>The Decimal value converted to an SByte.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>The resulting integer value is less than SByte.MinValue or greater than SByte.MaxValue. </para>
            </content>
          </exception>
        </exceptions>
      </dduexml>
    </member>
    <member name="M:System.Decimal.System.IConvertible.ToSingle(System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <internalOnly>
        </internalOnly>
        <summary>
          <para>Converts this instance of <languageKeyword>Decimal</languageKeyword> to a single-precision floating-point number.</para>
        </summary>
        <returnValue>
          <para>A single-precision floating-point number equivalent to the value of this instance of <languageKeyword>Decimal</languageKeyword>.</para>
        </returnValue>
      </dduexml>
    </member>
    <member name="M:System.Decimal.System.IConvertible.ToType(System.Type,System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <internalOnly>
        </internalOnly>
        <summary>
          <para>Returns an object of the specified <codeEntityReference autoUpgrade="true">T:System.Type</codeEntityReference>, with a value equivalent to the value of this instance of <languageKeyword>Decimal</languageKeyword>.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>type</parameterReference>
            <content>
              <para>The desired type. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <parameterReference>type</parameterReference> object, with a value equivalent to the value of this instance of <languageKeyword>Decimal</languageKeyword>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentNullException</codeEntityReference>
            <content>
              <para>
                <parameterReference>type</parameterReference> is <languageKeyword>null</languageKeyword>. </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.InvalidCastException</codeEntityReference>
            <content>
              <para>The requested type conversion is not supported. </para>
            </content>
          </exception>
        </exceptions>
      </dduexml>
    </member>
    <member name="M:System.Decimal.System.IConvertible.ToUInt16(System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <internalOnly>
        </internalOnly>
        <summary>
          <para>Converts this instance of <languageKeyword>Decimal</languageKeyword> to a 16-bit unsigned integer.</para>
        </summary>
        <returnValue>
          <para>A 16-bit unsigned integer equivalent to the value of this instance of <languageKeyword>Decimal</languageKeyword>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>The resulting integer value is less than UInt16.MinValue or greater than UInt16.MaxValue. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The ToUInt16 method converts a Decimal value into a UInt16 and returns it.</para>
          </content>
        </remarks>
      </dduexml>
    </member>
    <member name="M:System.Decimal.System.IConvertible.ToUInt32(System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <internalOnly>
        </internalOnly>
        <summary>
          <para>Converts this instance of <languageKeyword>Decimal</languageKeyword> to a 32-bit unsigned integer.</para>
        </summary>
        <returnValue>
          <para>A 32-bit unsigned integer equivalent to the value of this instance of <languageKeyword>Decimal</languageKeyword>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>The resulting integer value is less than UInt32.MinValue or greater than UInt32.MaxValue. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The ToUInt32method converts a Decimal value into a UInt32 and returns it.</para>
            <para>The Decimal value is rounded toward zero to the nearest integer value, and the result of this operation is returned as an unsigned integer.</para>
          </content>
        </remarks>
      </dduexml>
    </member>
    <member name="M:System.Decimal.System.IConvertible.ToUInt64(System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <internalOnly>
        </internalOnly>
        <summary>
          <para>Converts this instance of <languageKeyword>Decimal</languageKeyword> to a 64-bit unsigned integer.</para>
        </summary>
        <returnValue>
          <para>A 64-bit unsigned integer equivalent to the value of this instance of <languageKeyword>Decimal</languageKeyword>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>
                <parameterReference>d</parameterReference> is less than UInt64.MinValue or greater than UInt64.MaxValue. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The Decimal value is rounded toward zero to the nearest integer value, and the result of this operation is returned as an unsigned, long integer.</para>
          </content>
        </remarks>
      </dduexml>
    </member>
    <member name="M:System.Decimal.ToByte(System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the value of the specified <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to the equivalent 8-bit unsigned integer.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>The <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> value. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>An 8-bit unsigned integer equivalent to <parameterReference>value</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>
                <parameterReference>value</parameterReference> is less than <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.Byte.MinValue</codeEntityReference> or greater than <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.Byte.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>Parameter <parameterReference>value</parameterReference> is rounded to the nearest integer value toward zero, and that result is returned.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example converts <languageKeyword>Decimal</languageKeyword> numbers to <codeEntityReference autoUpgrade="true">T:System.Byte</codeEntityReference> values using the <languageKeyword>ToByte</languageKeyword> method.</para>
                <codeReference>System.Decimal.ToXXX#4</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Byte</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.ToDouble(System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the value of the specified <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to the equivalent double-precision floating-point number.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d</parameterReference>
            <content>
              <para>The <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> value to convert. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A double-precision floating-point number equivalent to <parameterReference>d</parameterReference>.</para>
        </returnValue>
        <remarks>
          <content>
            <para>This operation can produce round-off errors because a double-precision floating-point number has fewer significant digits than a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example converts <languageKeyword>Decimal</languageKeyword> numbers to <codeEntityReference autoUpgrade="true">T:System.Double</codeEntityReference> values using <languageKeyword>ToDouble</languageKeyword> method.</para>
                <codeReference>System.Decimal.ToXXX#5</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Double</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.ToInt16(System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the value of the specified <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to the equivalent 16-bit signed integer.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> value. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A 16-bit signed integer equivalent to <parameterReference>value</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>
                <parameterReference>value</parameterReference> is less than <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.Int16.MinValue</codeEntityReference> or greater than <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.Int16.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example converts <languageKeyword>Decimal</languageKeyword> numbers to <codeEntityReference autoUpgrade="true">T:System.Int16</codeEntityReference> values using the <languageKeyword>ToInt16</languageKeyword> method.</para>
                <codeReference>System.Decimal.ToXXX#3</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Int16</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.ToInt32(System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the value of the specified <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to the equivalent 32-bit signed integer.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d</parameterReference>
            <content>
              <para>The <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> value to convert. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A 32-bit signed integer equivalent to the value of <parameterReference>d</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>
                <parameterReference>d</parameterReference> is less than <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.Int32.MinValue</codeEntityReference> or greater than <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.Int32.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The return value is the integral part of the decimal value; fractional digits are truncated.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example converts <languageKeyword>Decimal</languageKeyword> numbers to <codeEntityReference autoUpgrade="true">T:System.Int32</codeEntityReference> values using the <languageKeyword>ToInt32</languageKeyword> method.</para>
                <codeReference>System.Decimal.ToXXX#2</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Int32</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.ToInt64(System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the value of the specified <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to the equivalent 64-bit signed integer.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d</parameterReference>
            <content>
              <para>The <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> value to convert. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A 64-bit signed integer equivalent to the value of <parameterReference>d</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>
                <parameterReference>d</parameterReference> is less than <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.Int64.MinValue</codeEntityReference> or greater than <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.Int64.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The return value is the integral part of the decimal value; fractional digits are truncated.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example converts <languageKeyword>Decimal</languageKeyword> numbers to <codeEntityReference autoUpgrade="true">T:System.Int64</codeEntityReference> values using the <languageKeyword>ToInt64</languageKeyword> method.</para>
                <codeReference>System.Decimal.ToXXX#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Int64</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.ToOACurrency(System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the specified <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> value to the equivalent OLE Automation Currency value, which is contained in a 64-bit signed integer.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> value. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A 64-bit signed integer that contains the OLE Automation equivalent of <parameterReference>value</parameterReference>.</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example uses the <languageKeyword>ToOACurrency</languageKeyword> method to convert <languageKeyword>Decimal</languageKeyword> numbers to the equivalent OLE Automation Currency values that are contained in <codeEntityReference autoUpgrade="true">T:System.Int64</codeEntityReference> fields.</para>
                <codeReference>System.Decimal.OACurrency#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.FromOACurrency(System.Int64)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.ToSByte(System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <clsCompliantAlternative>
          <codeEntityReference>M:System.Decimal.ToInt16(System.Decimal)</codeEntityReference>
          <content>
          </content>
        </clsCompliantAlternative>
        <summary>
          <para>Converts the value of the specified <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to the equivalent 8-bit signed integer.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> value. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>An 8-bit signed integer equivalent to <parameterReference>value</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>
                <parameterReference>value</parameterReference> is less than <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.SByte.MinValue</codeEntityReference> or greater than <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.SByte.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example converts <languageKeyword>Decimal</languageKeyword> numbers to <codeEntityReference autoUpgrade="true">T:System.SByte</codeEntityReference> values using the <languageKeyword>ToSByte</languageKeyword> method.</para>
                <codeReference>System.Decimal.ToXXX#4</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.SByte</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.ToSingle(System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the value of the specified <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to the equivalent single-precision floating-point number.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> value to convert. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A single-precision floating-point number equivalent to the value of <parameterReference>d</parameterReference>.</para>
        </returnValue>
        <remarks>
          <content>
            <para>This operation can produce round-off errors because a single-precision floating-point number has fewer significant digits than a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example converts <languageKeyword>Decimal</languageKeyword> numbers to <codeEntityReference autoUpgrade="true">T:System.Single</codeEntityReference> values using the <languageKeyword>ToSingle</languageKeyword> method.</para>
                <codeReference>System.Decimal.ToXXX#5</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Single</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.ToString">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the numeric value of this instance to its equivalent <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference> representation.</para>
        </summary>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference> representing the value of this instance.</para>
        </returnValue>
        <remarks>
          <content>
            <para>The return value is formatted with the general format specifier ("G"), and the <codeEntityReference autoUpgrade="true">T:System.Globalization.NumberFormatInfo</codeEntityReference> for the current culture.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code sample illustrates the use of <languageKeyword>ToString</languageKeyword> in the context of <languageKeyword>Decimal</languageKeyword> : </para>
                <codeReference>Decimal Example#5</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <link xlink:href="0D1364DA-5B30-4D42-8E6B-03378343343F">[&lt;topic://cpConFormattingOverview&gt;]</link>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Parse(System.String)</codeEntityReference>
        </relatedTopics>
      <overload>
        <summary>
          <para>Converts the numeric value of this instance to its equivalent <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference> representation.</para>
        </summary>
      </overload>
</dduexml>
    </member>
    <member name="Overload:System.Decimal.ToString">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the numeric value of this instance to its equivalent <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference> representation.</para>
        </summary>
      </dduexml>
    </member>
    <member name="M:System.Decimal.ToString(System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the numeric value of this instance to its equivalent <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference> representation using the specified culture-specific format information.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>provider</parameterReference>
            <content>
              <para>An <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> that supplies culture-specific formatting information. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference> representation of the value of this instance as specified by <parameterReference>provider</parameterReference>.</para>
        </returnValue>
        <remarks>
          <content>
            <para>Parameter <parameterReference>provider</parameterReference> is an <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> that obtains a <codeEntityReference autoUpgrade="true">T:System.Globalization.NumberFormatInfo</codeEntityReference>. The <languageKeyword>NumberFormatInfo</languageKeyword> provides culture-specific format information about this instance. If <parameterReference>provider</parameterReference> is <languageKeyword>null</languageKeyword>, the return value for this instance is formatted with the <languageKeyword>NumberFormatInfo</languageKeyword> for the current culture.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example formats a <languageKeyword>Decimal</languageKeyword> number <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference> with several overloads of the <languageKeyword>ToString</languageKeyword> method.</para>
                <codeReference>System.Decimal.ToString#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <link xlink:href="0D1364DA-5B30-4D42-8E6B-03378343343F">[&lt;topic://cpConFormattingOverview&gt;]</link>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Parse(System.String)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.ToString(System.String)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the numeric value of this instance to its equivalent <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference> representation, using the specified format.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>format</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference> containing a format specification. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference> representation of the value of this instance as specified by <parameterReference>format</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.FormatException</codeEntityReference>
            <content>
              <para>
                <parameterReference>format</parameterReference> is invalid. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>If <parameterReference>format</parameterReference> is <languageKeyword>null</languageKeyword> or an empty string, the return value of this instance is formatted with the general format specifier ("G").</para>
            <para>The return value is formatted with the <codeEntityReference autoUpgrade="true">T:System.Globalization.NumberFormatInfo</codeEntityReference> for the current culture.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code sample illustrates the use of <languageKeyword>ToString</languageKeyword> in the context of <languageKeyword>Decimal</languageKeyword> : </para>
                <codeReference>Decimal Example#5</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <link xlink:href="0D1364DA-5B30-4D42-8E6B-03378343343F">[&lt;topic://cpConFormattingOverview&gt;]</link>
          <link xlink:href="FB83D6FF-12FD-4837-AD19-16A2515DE030">[&lt;topic://cpConNumericFormatStrings&gt;]</link>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Parse(System.String)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the numeric value of this instance to its equivalent <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference> representation using the specified format and culture-specific format information.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>format</parameterReference>
            <content>
              <para>A format specification. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>provider</parameterReference>
            <content>
              <para>An <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> that supplies culture-specific formatting information. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference> representation of the value of this instance as specified by <parameterReference>format</parameterReference> and <parameterReference>provider</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.FormatException</codeEntityReference>
            <content>
              <para>
                <parameterReference>format</parameterReference> is invalid. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>If <parameterReference>format</parameterReference> is <languageKeyword>null</languageKeyword> or an empty string, the return value for this instance is formatted with the general format specifier ("G").</para>
            <para>Parameter <parameterReference>provider</parameterReference> is an <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> that obtains a <codeEntityReference autoUpgrade="true">T:System.Globalization.NumberFormatInfo</codeEntityReference>. The <languageKeyword>NumberFormatInfo</languageKeyword> provides culture-specific format information about this instance. If <parameterReference>provider</parameterReference> is <languageKeyword>null</languageKeyword>, the return value for this instance is formatted with the <languageKeyword>NumberFormatInfo</languageKeyword> for the current culture.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example formats a <languageKeyword>Decimal</languageKeyword> number <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference> with several overloads of the <languageKeyword>ToString</languageKeyword> method.</para>
                <codeReference>System.Decimal.ToString#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <link xlink:href="0D1364DA-5B30-4D42-8E6B-03378343343F">[&lt;topic://cpConFormattingOverview&gt;]</link>
          <link xlink:href="FB83D6FF-12FD-4837-AD19-16A2515DE030">[&lt;topic://cpConNumericFormatStrings&gt;]</link>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Parse(System.String)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.ToUInt16(System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <clsCompliantAlternative>
          <codeEntityReference>M:System.Decimal.ToInt32(System.Decimal)</codeEntityReference>
          <content>
          </content>
        </clsCompliantAlternative>
        <summary>
          <para>Converts the value of the specified <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to the equivalent 16-bit unsigned integer.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> value to convert. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A 16-bit unsigned integer equivalent to the value of <parameterReference>value</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>
                <parameterReference>value</parameterReference> is greater than <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.UInt16.MaxValue</codeEntityReference> or less than <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.UInt16.MinValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The return value is the integral part of the decimal value; fractional digits are truncated.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example converts <languageKeyword>Decimal</languageKeyword> numbers to <codeEntityReference autoUpgrade="true">T:System.UInt16</codeEntityReference> values using the <languageKeyword>ToUInt16</languageKeyword> method.</para>
                <codeReference>System.Decimal.ToXXX#3</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.UInt16</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.ToUInt32(System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <clsCompliantAlternative>
          <codeEntityReference>M:System.Decimal.ToInt64(System.Decimal)</codeEntityReference>
          <content>
          </content>
        </clsCompliantAlternative>
        <summary>
          <para>Converts the value of the specified <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to the equivalent 32-bit unsigned integer.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> value to convert. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A 32-bit unsigned integer equivalent to the value of <parameterReference>d</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>
                <parameterReference>d</parameterReference> is negative or greater than <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.UInt32.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The return value is the integral part of the decimal value; fractional digits are truncated.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example converts <languageKeyword>Decimal</languageKeyword> numbers to <codeEntityReference autoUpgrade="true">T:System.UInt32</codeEntityReference> values using the <languageKeyword>ToUInt32</languageKeyword> method.</para>
                <codeReference>System.Decimal.ToXXX#2</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.UInt32</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.ToUInt64(System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the value of the specified <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to the equivalent 64-bit unsigned integer.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> value to convert. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A 64-bit unsigned integer equivalent to the value of <parameterReference>d</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>
                <parameterReference>d</parameterReference> is negative or greater than <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.UInt64.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The return value is the integral part of the decimal value; fractional digits are truncated.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example converts <languageKeyword>Decimal</languageKeyword> numbers to <codeEntityReference autoUpgrade="true">T:System.UInt64</codeEntityReference> values using the <languageKeyword>ToUInt64</languageKeyword> method.</para>
                <codeReference>System.Decimal.ToXXX#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.UInt64</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.Truncate(System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Returns the integral digits of the specified <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference>; any fractional digits are discarded.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> to truncate. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> result of <parameterReference>d</parameterReference> rounded toward zero, to the nearest whole number.</para>
        </returnValue>
        <remarks>
          <content>
            <para>This method rounds <parameterReference>d</parameterReference> toward zero, to the nearest whole number, which corresponds to discarding any digits after the decimal point.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example uses the <languageKeyword>Truncate</languageKeyword> method to discard the fractional digits of several <languageKeyword>Decimal</languageKeyword> values.</para>
                <codeReference>System.Decimal.Flr_Neg_Rnd_Trnc#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Round(System.Decimal,System.Int32)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Floor(System.Decimal)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.Decimal.TryParse(System.String,System.Decimal@)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference> representation of a number to its <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> equivalent. A return value indicates whether the conversion succeeded or failed.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>s</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference> object containing a number to convert. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>result</parameterReference>
            <content>
              <para>When this method returns, contains single-precision floating-point number equivalent to the numeric value or symbol contained in <parameterReference>s</parameterReference>, if the conversion succeeded, or zero if the conversion failed. The conversion fails if the <parameterReference>s</parameterReference> parameter is <languageKeyword>null</languageKeyword>, is not a number in a valid format, or represents a number less than <codeEntityReference autoUpgrade="true">F:System.Decimal.MinValue</codeEntityReference> or greater than <codeEntityReference autoUpgrade="true">F:System.Decimal.MaxValue</codeEntityReference>. This parameter is passed uninitialized. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>
            <languageKeyword>true</languageKeyword> if <parameterReference>s</parameterReference> was converted successfully; otherwise, <languageKeyword>false</languageKeyword>.</para>
        </returnValue>
        <remarks>
          <content>
            <para>Parameter <parameterReference>s</parameterReference> contains a number of the form: </para>
            <para>[ws][sign]digits[.fractional-digits][ws] </para>
            <para>Items in square brackets ('[' and ']') are optional, and other items are as shown in the following table.</para>
            <definitionTable>
              <definedTerm>ws</definedTerm>
              <definition>
                <para>Optional white space. </para>
              </definition>
              <definedTerm>sign</definedTerm>
              <definition>
                <para>An optional sign. </para>
              </definition>
              <definedTerm>digits</definedTerm>
              <definition>
                <para>A sequence of digits ranging from 0 to 9. </para>
              </definition>
              <definedTerm>'.'</definedTerm>
              <definition>
                <para>A culture-specific decimal point symbol. </para>
              </definition>
              <definedTerm>fractional-digits</definedTerm>
              <definition>
                <para>A sequence of digits ranging from 0 to 9. </para>
              </definition>
            </definitionTable>
            <para>Parameter <parameterReference>s</parameterReference> is interpreted using the <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.Globalization.NumberStyles.Number</codeEntityReference> style.</para>
            <para>Parameter <parameterReference>s</parameterReference> is parsed using the formatting information in a <codeEntityReference autoUpgrade="true">T:System.Globalization.NumberFormatInfo</codeEntityReference> object initialized for the current system culture. For more information, see <codeEntityReference autoUpgrade="true">P:System.Globalization.NumberFormatInfo.CurrentInfo</codeEntityReference>.</para>
            <para>If necessary, the value of <parameterReference>s</parameterReference> is rounded using rounding to nearest.</para>
            <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> object has 29 digits of precision. If <parameterReference>s</parameterReference> represents a number that has more than 29 digits, but has a fractional part and is within the range of <codeEntityReference autoUpgrade="true">F:System.Decimal.MaxValue</codeEntityReference> and <codeEntityReference autoUpgrade="true">F:System.Decimal.MinValue</codeEntityReference>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates overloads of the <codeEntityReference autoUpgrade="true">Overload:System.Decimal.TryParse</codeEntityReference> method for several base types, and the <codeEntityReference autoUpgrade="true">Overload:System.DateTime.TryParseExact</codeEntityReference> method.</para>
                <codeReference>T.TryParse#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Parse(System.String)</codeEntityReference>
          <link xlink:href="0D1364DA-5B30-4D42-8E6B-03378343343F">[&lt;topic://cpConFormattingOverview&gt;]</link>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.ToString</codeEntityReference>
          <codeEntityReference qualifyHint="true" autoUpgrade="true">M:System.Math.Round(System.Double)</codeEntityReference>
        </relatedTopics>
      <overload>
        <summary>
          <para>Converts the <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference> representation of a number to its <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> equivalent. A return value indicates whether the conversion succeeded or failed.</para>
        </summary>
      </overload>
</dduexml>
    </member>
    <member name="Overload:System.Decimal.TryParse">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference> representation of a number to its <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> equivalent. A return value indicates whether the conversion succeeded or failed.</para>
        </summary>
      </dduexml>
    </member>
    <member name="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference> representation of a number to its <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> equivalent using the specified style and culture-specific format. A return value indicates whether the conversion succeeded or failed.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>s</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference> object containing a number to convert. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>style</parameterReference>
            <content>
              <para>A bitwise combination of <codeEntityReference autoUpgrade="true">T:System.Globalization.NumberStyles</codeEntityReference> values that indicates the permitted format of <parameterReference>s</parameterReference>. A typical value to specify is <codeEntityReference autoUpgrade="true">F:System.Globalization.NumberStyles.Number</codeEntityReference>.</para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>provider</parameterReference>
            <content>
              <para>An <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> object that supplies culture-specific formatting information about <parameterReference>s</parameterReference>. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>result</parameterReference>
            <content>
              <para>When this method returns, contains the single-precision floating-point number equivalent to the numeric value or symbol contained in <parameterReference>s</parameterReference>, if the conversion succeeded, or zero if the conversion failed. The conversion fails if the <parameterReference>s</parameterReference> parameter is <languageKeyword>null</languageKeyword>, is not in a format compliant with <parameterReference>style</parameterReference>, or represents a number less than <codeEntityReference autoUpgrade="true">F:System.Decimal.MinValue</codeEntityReference> or greater than <codeEntityReference autoUpgrade="true">F:System.Decimal.MaxValue</codeEntityReference>. This parameter is passed uninitialized. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>
            <languageKeyword>true</languageKeyword> if <parameterReference>s</parameterReference> was converted successfully; otherwise, <languageKeyword>false</languageKeyword>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentException</codeEntityReference>
            <content>
              <para>
                <parameterReference>style</parameterReference> is not a <codeEntityReference autoUpgrade="true">T:System.Globalization.NumberStyles</codeEntityReference> value. </para>
              <para>-or-</para>
              <para>
                <parameterReference>style</parameterReference> is the <codeEntityReference autoUpgrade="true">F:System.Globalization.NumberStyles.AllowHexSpecifier</codeEntityReference> value.</para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>Parameter <parameterReference>s</parameterReference> contains a number of the form: </para>
            <para>[ws][sign]digits[.fractional-digits][ws] </para>
            <para>Items in square brackets ('[' and ']') are optional, and other items are as shown in the following table.</para>
            <definitionTable>
              <definedTerm> ws</definedTerm>
              <definition>
                <para>Optional white space. </para>
              </definition>
              <definedTerm> sign</definedTerm>
              <definition>
                <para>An optional sign. </para>
              </definition>
              <definedTerm> digits</definedTerm>
              <definition>
                <para>A sequence of digits ranging from 0 to 9. </para>
              </definition>
              <definedTerm> '.'</definedTerm>
              <definition>
                <para>A culture-specific decimal point symbol. </para>
              </definition>
              <definedTerm> fractional-digits</definedTerm>
              <definition>
                <para>A sequence of digits ranging from 0 to 9. </para>
              </definition>
            </definitionTable>
            <para>The <parameterReference>style</parameterReference> parameter can be one or more <codeEntityReference autoUpgrade="true">T:System.Globalization.NumberStyles</codeEntityReference> enumerated constants combined using a bitwise OR operation.</para>
            <para>The <parameterReference>style</parameterReference> parameter specifies the permitted style of the numeric string. It must be a combination of bit flags from the <languageKeyword>NumberStyles</languageKeyword> enumeration. If <parameterReference>style</parameterReference> is null, <parameterReference>s</parameterReference> is interpreted using the <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.Globalization.NumberStyles.Number</codeEntityReference> style.</para>
            <para>Parameter <parameterReference>provider</parameterReference> is an <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> object that obtains a <codeEntityReference autoUpgrade="true">T:System.Globalization.NumberFormatInfo</codeEntityReference> object. The <languageKeyword>NumberFormatInfo</languageKeyword> provides culture-specific information about the format of <parameterReference>s</parameterReference>. If <parameterReference>provider</parameterReference> is <languageKeyword>null</languageKeyword>, the <languageKeyword>NumberFormatInfo</languageKeyword> for the current culture is used.</para>
            <para>A <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> object has 29 digits of precision. If <parameterReference>s</parameterReference> represents a number that has more than 29 digits, but has a fractional part and is within the range of <codeEntityReference autoUpgrade="true">F:System.Decimal.MaxValue</codeEntityReference> and <codeEntityReference autoUpgrade="true">F:System.Decimal.MinValue</codeEntityReference>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates overloads of the <codeEntityReference autoUpgrade="true">Overload:System.Decimal.TryParse</codeEntityReference> method for several base types, and the <codeEntityReference autoUpgrade="true">Overload:System.DateTime.TryParseExact</codeEntityReference> method.</para>
                <codeReference>T.TryParse#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.Parse(System.String)</codeEntityReference>
          <link xlink:href="0D1364DA-5B30-4D42-8E6B-03378343343F">[&lt;topic://cpConFormattingOverview&gt;]</link>
          <codeEntityReference autoUpgrade="true">M:System.Decimal.ToString</codeEntityReference>
          <codeEntityReference qualifyHint="true" autoUpgrade="true">M:System.Math.Round(System.Double)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="F:System.Decimal.Zero">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Represents the number zero (0).</para>
        </summary>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example illustrates the use of the <languageKeyword>Zero</languageKeyword> field.</para>
                <codeReference>System.Decimal.Fields#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">F:System.Decimal.One</codeEntityReference>
          <codeEntityReference autoUpgrade="true">F:System.Decimal.MinusOne</codeEntityReference>
          <codeEntityReference autoUpgrade="true">F:System.Decimal.MaxValue</codeEntityReference>
          <codeEntityReference autoUpgrade="true">F:System.Decimal.MinValue</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="Overload:System.Decimal.op_Implicit">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the value of a type to a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> value.</para>
        </summary>
        <remarks>
          <content>
          </content>
        </remarks>
      </dduexml>
    </member>
    <member name="Overload:System.Decimal.Round">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Rounds a value to the nearest integer or specified number of decimal places.</para>
        </summary>
        <remarks>
          <content>
          </content>
        </remarks>
      </dduexml>
    </member>
    <member name="M:System.Decimal.Round(System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Rounds a decimal value to the nearest integer.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d</parameterReference>
            <content>
              <para>A decimal number to round. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The integer that is nearest to the <parameterReference>d</parameterReference> parameter. If <parameterReference>d</parameterReference> is halfway between two integers, one of which is even and the other odd, the even number is returned.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>The result is outside the range of a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> object.</para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The behavior of this method follows IEEE Standard 754, section 4. This kind of rounding is sometimes called rounding to nearest or banker's rounding.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Rounds a decimal value to the nearest integer. A parameter specifies how to round the value if it is midway between two other numbers.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d</parameterReference>
            <content>
              <para>A decimal number to round. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>mode</parameterReference>
            <content>
              <para>A value that specifies how to round <parameterReference>d</parameterReference> if it is midway between two other numbers.</para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The integer that is nearest to the <parameterReference>d</parameterReference> parameter. If <parameterReference>d</parameterReference> is halfway between two numbers, one of which is even and the other odd, the <parameterReference>mode</parameterReference> parameter determines which of the two numbers is returned. </para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentException</codeEntityReference>
            <content>
              <para>
                <parameterReference>mode</parameterReference> is not a <codeEntityReference qualifyHint="true" autoUpgrade="true">T:System.MidpointRounding</codeEntityReference> value.</para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>The result is outside the range of a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> object.</para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The behavior of this method follows IEEE Standard 754, section 4. This kind of rounding is sometimes called rounding to nearest or banker's rounding. </para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Rounds a decimal value to a specified precision. A parameter specifies how to round the value if it is midway between two other numbers.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d</parameterReference>
            <content>
              <para>A decimal number to round. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>decimals</parameterReference>
            <content>
              <para>The number of significant decimal places (precision) in the return value. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>mode</parameterReference>
            <content>
              <para>A value that specifies how to round <parameterReference>d</parameterReference> if it is midway between two other numbers.</para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The number that is nearest to the <parameterReference>d</parameterReference> parameter with a precision equal to the <parameterReference>decimals</parameterReference> parameter. If <parameterReference>d</parameterReference> is halfway between two numbers, one of which is even and the other odd, the <parameterReference>mode</parameterReference> parameter determines which of the two numbers is returned. If the precision of <parameterReference>d</parameterReference> is less than <parameterReference>decimals</parameterReference>, <parameterReference>d</parameterReference> is returned unchanged.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentOutOfRangeException</codeEntityReference>
            <content>
              <para>
                <parameterReference>decimals</parameterReference> is less than 0 or greater than 28. </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentException</codeEntityReference>
            <content>
              <para>
                <parameterReference>mode</parameterReference> is not a <codeEntityReference qualifyHint="true" autoUpgrade="true">T:System.MidpointRounding</codeEntityReference> value.</para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>The result is outside the range of a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> object.</para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The <parameterReference>decimals</parameterReference> parameter specifies the number of significant decimal places in the return value and ranges from 0 to 28. If <parameterReference>decimals</parameterReference> is zero, an integer is returned.</para>
            <para>The behavior of this method follows IEEE Standard 754, section 4. This kind of rounding is sometimes called rounding to nearest or banker's rounding. If <parameterReference>decimals</parameterReference> is zero, this kind of rounding is sometimes called rounding toward zero.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="Overload:System.Decimal.op_Explicit">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the value of a <codeEntityReference autoUpgrade="true">T:System.Decimal</codeEntityReference> object to another type.</para>
        </summary>
        <remarks>
          <content>
          </content>
        </remarks>
      </dduexml>
    </member>
    <member name="M:System.Decimal.Ceiling(System.Decimal)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Returns the smallest integer greater than or equal to the specified decimal number.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d</parameterReference>
            <content>
              <para>A decimal number. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The smallest integer greater than or equal to the <parameterReference>d</parameterReference> parameter.</para>
        </returnValue>
        <remarks>
          <content>
            <para>The behavior of this method follows IEEE Standard 754, section 4. This kind of rounding is sometimes called rounding toward positive infinity.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.Math.Ceiling(System.Decimal)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
  </members>
</doc>