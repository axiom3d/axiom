<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:dev="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" fileAssetGuid="1c5b4afb-7ef0-4cf6-bcc2-8ab5ae765d7c" revisionNumber="1">
  <assembly>
    <name>mscorlib</name>
  </assembly>
  <members>
    <member name="T:System.IFormatProvider">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Provides a mechanism for retrieving an object to control formatting.</para>
        </summary>
        <remarks>
          <content>
            <para>Some methods in the common language runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation.</para>
            <para>A class or value type implements the <codeEntityReference autoUpgrade="true">M:System.IFormatProvider.GetFormat(System.Type)</codeEntityReference> method of this interface to obtain an object that provides format information or processing for the implementing type.</para>
            <para>For example, <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> is implemented by <codeEntityReference autoUpgrade="true">T:System.Globalization.NumberFormatInfo</codeEntityReference> and <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference>. <codeEntityReference autoUpgrade="true">T:System.Globalization.NumberFormatInfo</codeEntityReference> provides culture-specific information used to format numbers in the base data types, and <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference> provides culture-specific information used to format date and time values.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example illustrates the use of a class that implements the <languageKeyword>IFormatProvider</languageKeyword> interface and the <codeEntityReference autoUpgrade="true">M:System.IFormatProvider.GetFormat(System.Type)</codeEntityReference> method. The AnyRadix class supports the "Ra" formatting code and converts an <codeEntityReference autoUpgrade="true">T:System.Int64</codeEntityReference> value to a string of any specified radix between 2 and 36. <languageKeyword>GetFormat</languageKeyword> returns a reference to itself if the Type parameter refers to a class that implements <codeEntityReference autoUpgrade="true">T:System.ICustomFormatter</codeEntityReference>; otherwise, <languageKeyword>GetFormat</languageKeyword> returns <languageKeyword>null</languageKeyword>.</para>
                <codeReference>System.IFormatProvider.GetFormat#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.ICustomFormatter</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.IFormattable</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.IFormatProvider.GetFormat(System.Type)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Gets an object that provides formatting services for the specified type.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>formatType</parameterReference>
            <content>
              <para>An object that specifies the type of format object to get. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The current instance, if <parameterReference>formatType</parameterReference> is the same type as the current instance; otherwise, <languageKeyword>null</languageKeyword>.</para>
        </returnValue>
        <remarks>
          <content>
            <para>Implement this method in classes that use format objects in methods that either generate or parse string representations of objects. The ToString and Parse methods are examples of these types of methods.</para>
            <para>For more information, see the <codeEntityReference qualifyHint="true" autoUpgrade="true">P:System.Globalization.CultureInfo.CurrentCulture</codeEntityReference> topic.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example illustrates the use of a class that implements the <languageKeyword>IFormatProvider</languageKeyword> interface and the <languageKeyword>GetFormat</languageKeyword> method. The AnyRadix class supports the "Ra" formatting code and converts an <codeEntityReference autoUpgrade="true">T:System.Int64</codeEntityReference> value to a string of any specified radix between 2 and 36. <languageKeyword>GetFormat</languageKeyword> returns a reference to itself if the Type parameter refers to a class that implements <codeEntityReference autoUpgrade="true">T:System.ICustomFormatter</codeEntityReference>; otherwise, <languageKeyword>GetFormat</languageKeyword> returns <languageKeyword>null</languageKeyword>.</para>
                <codeReference>System.IFormatProvider.GetFormat#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
  </members>
</doc>