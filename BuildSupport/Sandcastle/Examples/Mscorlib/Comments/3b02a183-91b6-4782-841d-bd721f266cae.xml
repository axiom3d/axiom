<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:dev="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" fileAssetGuid="3b02a183-91b6-4782-841d-bd721f266cae" revisionNumber="3">
  <assembly>
    <name>mscorlib</name>
  </assembly>
  <members>
    <member name="T:System.CLSCompliantAttribute">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Indicates whether a program element is compliant with the Common Language Specification (CLS). This class cannot be inherited.</para>
        </summary>
        <remarks>
          <content>
            <para>You can apply the <codeEntityReference autoUpgrade="true">T:System.CLSCompliantAttribute</codeEntityReference> attribute to the following program elements: assembly, module, class, struct, enum, constructor, method, property, field, event, interface, delegate, parameter, and return value. However, the notion of CLS compliance is only meaningful for assemblies, modules, types, and members of types, not parts of a member signature. Consequently, <codeEntityReference autoUpgrade="true">T:System.CLSCompliantAttribute</codeEntityReference> is ignored when applied to parameter or return value program elements.</para>
            <para>If no <codeEntityReference autoUpgrade="true">T:System.CLSCompliantAttribute</codeEntityReference> is applied to a program element, then by default: </para>
            <list class="bullet">
              <listItem>
                <para>The assembly is not CLS-compliant.</para>
              </listItem>
              <listItem>
                <para>The type is CLS-compliant only if its enclosing type or assembly is CLS-compliant.</para>
              </listItem>
              <listItem>
                <para>The member of a type is CLS-compliant only if the type is CLS-compliant.</para>
              </listItem>
            </list>
            <para>If an assembly is marked as CLS-compliant, any publicly exposed type in the assembly that is not CLS-compliant must be marked with <codeEntityReference autoUpgrade="true">T:System.CLSCompliantAttribute</codeEntityReference> using a <languageKeyword>false</languageKeyword> argument. Similarly, if a class is marked as CLS-compliant, you must individually mark all members that are not CLS-compliant. All non-compliant members must provide corresponding CLS-compliant alternatives.</para>
            <para>Attributes that are applied to assemblies or modules must occur after the C# <languageKeyword>using</languageKeyword> (<languageKeyword>Imports</languageKeyword> in Visual Basic) clauses and before the code.</para>
            <para>For more information about using attributes, see <link xlink:href="30386922-1E00-4602-9EBF-526B271A8B87">[&lt;topic://cpconExtendingMetadataUsingAttributes&gt;]</link>.</para>
            <alert class="note">
              <para>The current Microsoft Visual Basic compiler intentionally does not generate a CLS-compliance warning, however, a future release of the compiler will issue that warning.</para>
            </alert>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following example applies a <codeEntityReference autoUpgrade="true">T:System.CLSCompliantAttribute</codeEntityReference> to the entire assembly.</para>
                <code>using System;
    [assembly:CLSCompliant(true)]</code>
                <para>The following declaration generates a CLS-compliance warning because the type <codeInline>UInt32</codeInline> is not specified in the CLS.</para>
                <code> public int SetValue(UInt32 value);</code>
                <para>If the declaration is marked with a <codeEntityReference autoUpgrade="true">T:System.CLSCompliantAttribute</codeEntityReference>, no compiler warning or error is generated.</para>
                <code>[CLSCompliant(false)]
 public int SetValue(UInt32 value);</code>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Attribute</codeEntityReference>
          <link xlink:href="4F0B77D0-4844-464F-AF73-6E06BEDEAFC6">[&lt;topic://cpconWhatIsCommonLanguageSpecification&gt;]</link>
          <link xlink:href="30386922-1E00-4602-9EBF-526B271A8B87">[&lt;topic://cpconExtendingMetadataUsingAttributes&gt;]</link>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.CLSCompliantAttribute.#ctor(System.Boolean)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Initializes an instance of the <codeEntityReference autoUpgrade="true">T:System.CLSCompliantAttribute</codeEntityReference> class with a Boolean value indicating whether the indicated program element is CLS-compliant.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>isCompliant</parameterReference>
            <content>
              <para>
                <languageKeyword>true</languageKeyword> if CLS-compliant; otherwise, <languageKeyword>false</languageKeyword>. </para>
            </content>
          </parameter>
        </parameters>
      </dduexml>
    </member>
    <member name="P:System.CLSCompliantAttribute.IsCompliant">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Gets the Boolean value indicating whether the indicated program element is CLS-compliant.</para>
        </summary>
        <returnValue>
          <para>
            <languageKeyword>true</languageKeyword> if the program element is CLS-compliant; otherwise, <languageKeyword>false</languageKeyword>.</para>
        </returnValue>
      </dduexml>
    </member>
  </members>
</doc>