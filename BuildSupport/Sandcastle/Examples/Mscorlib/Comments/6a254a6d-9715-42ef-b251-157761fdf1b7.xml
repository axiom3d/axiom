<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:dev="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" fileAssetGuid="6a254a6d-9715-42ef-b251-157761fdf1b7" revisionNumber="2">
  <assembly>
    <name>mscorlib</name>
  </assembly>
  <members>
    <member name="T:System.ICancelableAsyncResult">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Represents the status of a cancelable asynchronous operation.</para>
        </summary>
        <remarks>
          <content>
            <para>The <codeEntityReference autoUpgrade="true">T:System.ICancelableAsyncResult</codeEntityReference> interface is returned by methods that initiate asynchronous operations, such as the <codeEntityReference autoUpgrade="true">M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)</codeEntityReference> method, and is passed to the method that concludes an asynchronous operation, such as the <codeEntityReference autoUpgrade="true">M:System.IO.FileStream.EndRead(System.IAsyncResult)</codeEntityReference> method. It is also passed to methods invoked by <codeEntityReference autoUpgrade="true">T:System.AsyncCallback</codeEntityReference> delegates when an asynchronous operation completes.</para>
            <alert class="note">
              <para>The methods mentioned here return <codeEntityReference autoUpgrade="true">T:System.IAsyncResult</codeEntityReference> and take parameters of type <codeEntityReference autoUpgrade="true">T:System.IAsyncResult</codeEntityReference>, the base type of <codeEntityReference autoUpgrade="true">T:System.ICancelableAsyncResult</codeEntityReference>, but the objects actually implement <codeEntityReference autoUpgrade="true">T:System.ICancelableAsyncResult</codeEntityReference>.</para>
            </alert>
            <para>A class that implements the <codeEntityReference autoUpgrade="true">T:System.ICancelableAsyncResult</codeEntityReference> interface stores state information for a cancelable asynchronous operation, and provides a synchronization object that allows threads to be signaled when the operation completes.</para>
            <para>For a detailed description of how the <codeEntityReference autoUpgrade="true">T:System.ICancelableAsyncResult</codeEntityReference> interface is used, see the <link xlink:href="41972034-92ed-450a-9664-ab93fcc6f1fb">Asynchronous Programming Overview</link> topic.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="M:System.ICancelableAsyncResult.Cancel">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Requests cancellation of the asynchronous operation represented by the current <codeEntityReference autoUpgrade="true">T:System.ICancelableAsyncResult</codeEntityReference>.</para>
        </summary>
        <remarks>
          <content>
            <para>There is no guarantee that the asynchronous operation will be cancelled. The operation might complete before the requested cancellation can occur.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
  </members>
</doc>