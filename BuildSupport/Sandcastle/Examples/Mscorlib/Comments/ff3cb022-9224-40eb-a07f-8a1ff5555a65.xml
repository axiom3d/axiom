<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:dev="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" fileAssetGuid="ff3cb022-9224-40eb-a07f-8a1ff5555a65" revisionNumber="8">
  <assembly>
    <name>mscorlib</name>
  </assembly>
  <members>
    <member name="T:System.LoaderOptimization">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>An enumeration used with the <codeEntityReference autoUpgrade="true">T:System.LoaderOptimizationAttribute</codeEntityReference> class to specify loader optimizations for an executable.</para>
        </summary>
        <remarks>
          <content>
            <para>The meaning of <codeEntityReference autoUpgrade="true">F:System.LoaderOptimization.MultiDomainHost</codeEntityReference> changed in the .NET Framework version 2.0. The loader now shares resources across application domains only for assemblies that have been added to the global assembly cache.</para>
            <alert class="note">
              <para>If custom code access security policy is set for the <codeEntityReference autoUpgrade="true">T:System.AppDomain</codeEntityReference>, by using the <codeEntityReference autoUpgrade="true">M:System.AppDomain.SetAppDomainPolicy(System.Security.Policy.PolicyLevel)</codeEntityReference> property, and the <codeEntityReference autoUpgrade="true">T:System.AppDomain</codeEntityReference> is created using the <codeEntityReference autoUpgrade="true">F:System.LoaderOptimization.MultiDomain</codeEntityReference> flag, the effect is the same as specifying the <codeEntityReference autoUpgrade="true">F:System.LoaderOptimization.MultiDomainHost</codeEntityReference> flag; that is, only assemblies in the GAC are shared. When this occurs, the loader does not throw an exception and the application does not experience the performance gains associated with the <codeEntityReference autoUpgrade="true">F:System.LoaderOptimization.MultiDomain</codeEntityReference> flag.</para>
            </alert>
          </content>
        </remarks>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.LoaderOptimizationAttribute</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="F:System.LoaderOptimization.DisallowBindings">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Ignored by the common language runtime.</para>
        </summary>
      </dduexml>
    </member>
    <member name="F:System.LoaderOptimization.DomainMask">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>This mask selects the domain-related values, screening out the unused <codeEntityReference autoUpgrade="true">F:System.LoaderOptimization.DisallowBindings</codeEntityReference> flag.</para>
        </summary>
      </dduexml>
    </member>
    <member name="F:System.LoaderOptimization.MultiDomain">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Indicates that the application will probably have many domains that use the same code, and the loader must share maximal internal resources across application domains.</para>
        </summary>
      </dduexml>
    </member>
    <member name="F:System.LoaderOptimization.MultiDomainHost">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Indicates that the application will probably host unique code in multiple domains, and the loader must share resources across application domains for globally available (strong-named) assemblies that have been added to the global assembly cache.</para>
        </summary>
      </dduexml>
    </member>
    <member name="F:System.LoaderOptimization.NotSpecified">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Indicates that no optimizations for sharing internal resources are specified. If the default domain or hosting interface specified an optimization, then the loader uses that; otherwise, the loader uses <codeEntityReference autoUpgrade="true">F:System.LoaderOptimization.SingleDomain</codeEntityReference>.</para>
        </summary>
      </dduexml>
    </member>
    <member name="F:System.LoaderOptimization.SingleDomain">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Indicates that the application will probably have a single domain, and loader must not share internal resources across application domains.</para>
        </summary>
      </dduexml>
    </member>
  </members>
</doc>