<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:dev="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" fileAssetGuid="69d039c4-560a-4eae-99c0-d493889177b1" revisionNumber="3">
  <assembly>
    <name>mscorlib</name>
  </assembly>
  <members>
    <member name="T:System.DataMisalignedException">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>The exception that is thrown when a unit of data is read from or written to an address that is not a multiple of the data size. This class cannot be inherited.</para>
        </summary>
        <remarks>
          <content>
            <para>Some microprocessors, such as 64-bit processors, can issue hardware exceptions when data is read or written to a misaligned address (that is, when an address is not a multiple of the size of the data being accessed). <codeEntityReference autoUpgrade="true">T:System.DataMisalignedException</codeEntityReference> is typically thrown when 16-bit, 32-bit, or 64-bit data is read from or written to an address that is not a multiple of two, four, or eight bytes. </para>
            <para>The <codeEntityReference autoUpgrade="true">T:System.DataMisalignedException</codeEntityReference> exposes the underlying hardware exception, which allows you to respond in an appropriate manner. For example, a routine in your application attempts to copy a sequence of bytes from one location to another in 64-bit units. However, the write operation starts at a misaligned address, which causes the common language runtime to throw a <codeEntityReference autoUpgrade="true">T:System.DataMisalignedException</codeEntityReference>. Your routine responds to the exception by copying the data one byte at a time.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="Overload:System.DataMisalignedException.#ctor">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Initializes a new instance of the <codeEntityReference autoUpgrade="true">T:System.DataMisalignedException</codeEntityReference> class. </para>
        </summary>
        <remarks>
          <content>
          </content>
        </remarks>
      </dduexml>
    </member>
    <member name="M:System.DataMisalignedException.#ctor">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Initializes a new instance of the <codeEntityReference autoUpgrade="true">T:System.DataMisalignedException</codeEntityReference> class. </para>
        </summary>
        <remarks>
          <content>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      <overload>
        <summary>
          <para>Initializes a new instance of the <codeEntityReference autoUpgrade="true">T:System.DataMisalignedException</codeEntityReference> class. </para>
        </summary>
        <remarks>
          <content>
          </content>
        </remarks>
      </overload>
</dduexml>
    </member>
    <member name="M:System.DataMisalignedException.#ctor(System.String)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Initializes a new instance of the <codeEntityReference autoUpgrade="true">T:System.DataMisalignedException</codeEntityReference> class using the specified error message.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>message</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference> object that describes the error. The content of <parameterReference>message</parameterReference> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </para>
            </content>
          </parameter>
        </parameters>
        <remarks>
          <content>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="M:System.DataMisalignedException.#ctor(System.String,System.Exception)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Initializes a new instance of the <codeEntityReference autoUpgrade="true">T:System.DataMisalignedException</codeEntityReference> class using the specified error message and underlying exception.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>message</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference> object that describes the error. The content of <parameterReference>message</parameterReference> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>innerException</parameterReference>
            <content>
              <para>The exception that is the cause of the current <codeEntityReference autoUpgrade="true">T:System.DataMisalignedException</codeEntityReference>. If the <parameterReference>innerException</parameterReference> parameter is not <languageKeyword>null</languageKeyword>, the current exception is raised in a <languageKeyword>catch</languageKeyword> block that handles the inner exception. </para>
            </content>
          </parameter>
        </parameters>
        <remarks>
          <content>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
  </members>
</doc>