<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:dev="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" fileAssetGuid="61c077bd-1e1c-4c6f-9f76-f318652dad09" revisionNumber="27">
  <assembly>
    <name>mscorlib</name>
  </assembly>
  <members>
    <member name="T:System.DateTime">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Represents an instant in time, typically expressed as a date and time of day.</para>
        </summary>
        <remarks>
          <content>
            <para>The <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> value type represents dates and times with values ranging from 12:00:00 midnight, January 1, 0001 Anno Domini (Common Era) through 11:59:59 P.M., December 31, 9999 A.D. (C.E.) </para>
            <para>Time values are measured in 100-nanosecond units called ticks, and a particular date is the number of ticks since 12:00 midnight, January 1, 0001 A.D. (C.E.) in the <codeEntityReference autoUpgrade="true">T:System.Globalization.GregorianCalendar</codeEntityReference> calendar. For example, a ticks value of 31241376000000000L represents the date, Friday, January 01, 0100 12:00:00 midnight. A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> value is always expressed in the context of an explicit or default calendar.</para>
          </content>
          <sections>
            <section>
              <title>Version Considerations</title>
              <content>
                <para>Prior to the .NET Framework version 2.0, the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> structure contains a 64-bit field composed of an unused 2-bit field concatenated with a private Ticks field, which is a 62-bit unsigned field that contains the number of ticks that represent the date and time. The value of the Ticks field can be obtained with the <codeEntityReference autoUpgrade="true">P:System.DateTime.Ticks</codeEntityReference> property.</para>
                <para>Starting with the .NET Framework 2.0, the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> structure contains a 64-bit field composed of a private Kind field concatenated with the Ticks field. The Kind field is a 2-bit field that indicates whether the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> structure represents a local time, a Coordinated Universal Time (UTC), or whether UTC or local time is not specified. The Kind field is used to handle conversions between local and UTC time, but not time comparisons or arithmetic. The value of the Kind field can be obtained with the <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> property.</para>
              </content>
            </section>
            <section>
              <title>DateTime Values</title>
              <content>
                <para>Descriptions of time values in the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> type are often expressed using the Coordinated Universal Time (UTC) standard, which is the internationally recognized name for Greenwich Mean Time (GMT). Coordinated Universal Time is the time as measured at zero degrees longitude, the UTC origin point. Daylight saving time is not applicable to UTC.</para>
                <para>Local time is relative to a particular time zone. A time zone is associated with a time zone offset, which is the displacement of the time zone measured in hours from the UTC origin point. In addition, local time is optionally affected by daylight saving time, which adds or subtracts an hour from the length of a day. Consequently, local time is calculated by adding the time zone offset to UTC and adjusting for daylight saving time if necessary. The time zone offset at the UTC origin point is zero.</para>
                <para>UTC time is suitable for calculations, comparisons, and storing dates and time in files. Local time is appropriate for display in user interfaces.</para>
                <para>If the <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> property of a <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object is <codeEntityReference autoUpgrade="true">F:System.DateTimeKind.Unspecified</codeEntityReference>, it is unspecified whether the time represented is local time or UTC time. Individual <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> members treat unspecified time appropriately for that member. </para>
              </content>
            </section>
            <section>
              <title>DateTime Operations</title>
              <content>
                <para>A calculation using a <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> structure, such as <codeEntityReference autoUpgrade="true">M:System.DateTime.Add(System.TimeSpan)</codeEntityReference> or <codeEntityReference autoUpgrade="true">M:System.DateTime.Subtract(System.DateTime)</codeEntityReference>, does not modify the value of the structure. Instead, the calculation returns a new <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> structure whose value is the result of the calculation.</para>
                <para>Conversion operations between local time and UTC time take daylight saving time into account, but arithmetic and comparison operations do not. </para>
                <para>Calculations and comparisons of <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> objects are only meaningful if the objects represent times in the same time zone. For that reason, if no time zone is specified for the objects, it is assumed that the developer has some external mechanism, such as an explicit variable or policy, that can be used to determine the time zone in which a <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object was created. </para>
                <para>Each <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> member implicitly uses the Gregorian calendar to perform its operation, with the exception of constructors that specify a calendar, and methods with a parameter derived from <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference>, such as <codeEntityReference qualifyHint="true" autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference>, that implicitly specifies a calendar. </para>
                <para>Operations by members of the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> type take into account details such as leap years and the number of days in a month.</para>
              </content>
            </section>
            <section>
              <title>DateTime vs. TimeSpan</title>
              <content>
                <para>The <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> and <codeEntityReference autoUpgrade="true">T:System.TimeSpan</codeEntityReference> value types differ in that a <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> represents an instant in time whereas a <codeEntityReference autoUpgrade="true">T:System.TimeSpan</codeEntityReference> represents a time interval. This means, for example, that you can subtract one instance of <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> from another to obtain the time interval between them. Or you could add a positive <codeEntityReference autoUpgrade="true">T:System.TimeSpan</codeEntityReference> to the current <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> to calculate a future date.</para>
                <para>You can add or subtract a time interval from a <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object. Time intervals can be negative or positive, can be expressed in units such as ticks or seconds, or can be expressed as a <codeEntityReference autoUpgrade="true">T:System.TimeSpan</codeEntityReference> object. </para>
              </content>
            </section>
            <section>
              <title>COM Interop Considerations</title>
              <content>
                <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> value that is transferred to a COM application, then is transferred back to a managed application, is said to round-trip. However, a <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> value that specifies only a time does not round-trip as you might expect. </para>
                <para>If you round-trip only a time, such as 3 P.M., the final date and time is December 30, 1899 C.E. at 3:00 P.M., instead of January, 1, 0001 C.E. at 3:00 P.M. This happens because the .NET Framework and COM assume a default date when only a time is specified. However, the COM system assumes a base date of December 30, 1899 C.E. while the .NET Framework assumes a base date of January, 1, 0001 C.E. </para>
                <para>When only a time is passed from the .NET Framework to COM, special processing is performed that converts the time to the format used by COM. When only a time is passed from COM to the .NET Framework, no special processing is performed because that would corrupt legitimate dates and times on or before December 30, 1899. This also means if a date starts its round-trip from COM, the .NET Framework and COM preserve the date.</para>
                <para>The behavior of the .NET Framework and COM means that if your application round-trips a <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> that only specifies a time, your application must remember to modify or ignore the erroneous date from the final <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object.</para>
              </content>
            </section>
            <section>
              <title>Implemented Interfaces</title>
              <content>
                <para>This type implements interfaces <codeEntityReference autoUpgrade="true">T:System.IComparable</codeEntityReference>,  <codeEntityReference autoUpgrade="true">T:System.IComparable`1</codeEntityReference>, <codeEntityReference autoUpgrade="true">T:System.IFormattable</codeEntityReference>, and <codeEntityReference autoUpgrade="true">T:System.IConvertible</codeEntityReference>. Use the <codeEntityReference autoUpgrade="true">T:System.Convert</codeEntityReference> class for conversions instead of this type's explicit interface member implementation of <codeEntityReference autoUpgrade="true">T:System.IConvertible</codeEntityReference>.</para>
              </content>
            </section>
          </sections>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates how to compare roughly equivalent <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> values, accepting a small margin of difference when declaring them equal.</para>
                <codeReference>DateTime Equivalency Example#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.TimeSpan</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.Globalization.Calendar</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.TimeZone.GetUtcOffset(System.DateTime)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="Overload:System.DateTime.#ctor">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Initializes a new instance of the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> structure.</para>
        </summary>
      </dduexml>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Initializes a new instance of the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> structure to the specified year, month, and day.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>year</parameterReference>
            <content>
              <para>The year (1 through 9999). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>month</parameterReference>
            <content>
              <para>The month (1 through 12). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>day</parameterReference>
            <content>
              <para>The day (1 through the number of days in <parameterReference>month</parameterReference>). </para>
            </content>
          </parameter>
        </parameters>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentOutOfRangeException</codeEntityReference>
            <content>
              <para>
                <parameterReference>year</parameterReference> is less than 1 or greater than 9999.</para>
              <para>-or- </para>
              <para>
                <parameterReference>month</parameterReference> is less than 1 or greater than 12.</para>
              <para>-or- </para>
              <para>
                <parameterReference>day</parameterReference> is less than 1 or greater than the number of days in <parameterReference>month</parameterReference>. </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentException</codeEntityReference>
            <content>
              <para>The specified parameters evaluate to less than <codeEntityReference autoUpgrade="true">F:System.DateTime.MinValue</codeEntityReference> or more than <codeEntityReference autoUpgrade="true">F:System.DateTime.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The time of day for the resulting <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> is midnight (00:00:00). The <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> property is initialized to <codeEntityReference autoUpgrade="true">F:System.DateTimeKind.Unspecified</codeEntityReference>.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates one of the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> constructors.</para>
                <codeReference>DateTime Constructor#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      <overload>
        <summary>
          <para>Initializes a new instance of the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> structure.</para>
        </summary>
      </overload>
</dduexml>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Initializes a new instance of the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> structure to the specified year, month, and day for the specified calendar.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>year</parameterReference>
            <content>
              <para>The year (1 through the number of years in <parameterReference>calendar</parameterReference>). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>month</parameterReference>
            <content>
              <para>The month (1 through the number of months in <parameterReference>calendar</parameterReference>). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>day</parameterReference>
            <content>
              <para>The day (1 through the number of days in <parameterReference>month</parameterReference>). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>calendar</parameterReference>
            <content>
              <para>The <codeEntityReference autoUpgrade="true">T:System.Globalization.Calendar</codeEntityReference> that applies to this <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>. </para>
            </content>
          </parameter>
        </parameters>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentNullException</codeEntityReference>
            <content>
              <para>
                <parameterReference>calendar</parameterReference> is <languageKeyword>null</languageKeyword>.</para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentOutOfRangeException</codeEntityReference>
            <content>
              <para>
                <parameterReference>year</parameterReference> is not in the range supported by <parameterReference>calendar</parameterReference>.</para>
              <para>-or- </para>
              <para>
                <parameterReference>month</parameterReference> is less than 1 or greater than the number of months in <parameterReference>calendar</parameterReference>.</para>
              <para>-or- </para>
              <para>
                <parameterReference>day</parameterReference> is less than 1 or greater than the number of days in <parameterReference>month</parameterReference>. </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentException</codeEntityReference>
            <content>
              <para>Specified parameters evaluate to less than <codeEntityReference autoUpgrade="true">F:System.DateTime.MinValue</codeEntityReference> or more than <codeEntityReference autoUpgrade="true">F:System.DateTime.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The time of day for the resulting <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> is midnight (00:00:00). The <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> property is initialized to <codeEntityReference autoUpgrade="true">F:System.DateTimeKind.Unspecified</codeEntityReference>.</para>
            <para>The allowable values for <parameterReference>year</parameterReference>, <parameterReference>month</parameterReference>, and <parameterReference>day</parameterReference> depend on <parameterReference>calendar</parameterReference>. An exception is thrown if the specified date and time cannot be expressed using <parameterReference>calendar</parameterReference>.</para>
            <para>The <codeEntityReference autoUpgrade="true">N:System.Globalization</codeEntityReference> namespace provides several calendars including <codeEntityReference autoUpgrade="true">T:System.Globalization.GregorianCalendar</codeEntityReference> and <codeEntityReference autoUpgrade="true">T:System.Globalization.JulianCalendar</codeEntityReference>.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates one of the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> constructors.</para>
                <codeReference>DateTime Constructor#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Int32</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.Globalization.Calendar</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Initializes a new instance of the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> structure to the specified year, month, day, hour, minute, and second.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>year</parameterReference>
            <content>
              <para>The year (1 through 9999). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>month</parameterReference>
            <content>
              <para>The month (1 through 12). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>day</parameterReference>
            <content>
              <para>The day (1 through the number of days in <parameterReference>month</parameterReference>). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>hour</parameterReference>
            <content>
              <para>The hours (0 through 23). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>minute</parameterReference>
            <content>
              <para>The minutes (0 through 59). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>second</parameterReference>
            <content>
              <para>The seconds (0 through 59). </para>
            </content>
          </parameter>
        </parameters>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentOutOfRangeException</codeEntityReference>
            <content>
              <para>
                <parameterReference>year</parameterReference> is less than 1 or greater than 9999. </para>
              <para>-or- </para>
              <para>
                <parameterReference>month</parameterReference> is less than 1 or greater than 12. </para>
              <para>-or- </para>
              <para>
                <parameterReference>day</parameterReference> is less than 1 or greater than the number of days in <parameterReference>month</parameterReference>.</para>
              <para>-or- </para>
              <para>
                <parameterReference>hour</parameterReference> is less than 0 or greater than 23. </para>
              <para>-or- </para>
              <para>
                <parameterReference>minute</parameterReference> is less than 0 or greater than 59. </para>
              <para>-or- </para>
              <para>
                <parameterReference>second</parameterReference> is less than 0 or greater than 59. </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentException</codeEntityReference>
            <content>
              <para>Specified parameters evaluate to less than <codeEntityReference autoUpgrade="true">F:System.DateTime.MinValue</codeEntityReference> or more than <codeEntityReference autoUpgrade="true">F:System.DateTime.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> property is initialized to <codeEntityReference autoUpgrade="true">F:System.DateTimeKind.Unspecified</codeEntityReference>.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates one of the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> constructors.</para>
                <codeReference>DateTime Constructor#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Initializes a new instance of the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> structure to the specified year, month, day, hour, minute, and second for the specified calendar.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>year</parameterReference>
            <content>
              <para>The year (1 through the number of years in <parameterReference>calendar</parameterReference>). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>month</parameterReference>
            <content>
              <para>The month (1 through the number of months in <parameterReference>calendar</parameterReference>). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>day</parameterReference>
            <content>
              <para>The day (1 through the number of days in <parameterReference>month</parameterReference>). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>hour</parameterReference>
            <content>
              <para>The hours (0 through 23). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>minute</parameterReference>
            <content>
              <para>The minutes (0 through 59). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>second</parameterReference>
            <content>
              <para>The seconds (0 through 59). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>calendar</parameterReference>
            <content>
              <para>The <codeEntityReference autoUpgrade="true">T:System.Globalization.Calendar</codeEntityReference> that applies to this <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>. </para>
            </content>
          </parameter>
        </parameters>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentNullException</codeEntityReference>
            <content>
              <para>
                <parameterReference>calendar</parameterReference> is <languageKeyword>null</languageKeyword>. </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentOutOfRangeException</codeEntityReference>
            <content>
              <para>
                <parameterReference>year</parameterReference> is not in the range supported by <parameterReference>calendar</parameterReference>.</para>
              <para>-or- </para>
              <para>
                <parameterReference>month</parameterReference> is less than 1 or greater than the number of months in <parameterReference>calendar</parameterReference>.</para>
              <para>-or- </para>
              <para>
                <parameterReference>day</parameterReference> is less than 1 or greater than the number of days in <parameterReference>month</parameterReference>.</para>
              <para>-or- </para>
              <para>
                <parameterReference>hour</parameterReference> is less than 0 or greater than 23 </para>
              <para>-or- </para>
              <para>
                <parameterReference>minute</parameterReference> is less than 0 or greater than 59. </para>
              <para>-or- </para>
              <para>
                <parameterReference>second</parameterReference> is less than 0 or greater than 59. </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentException</codeEntityReference>
            <content>
              <para>Specified parameters evaluate to less than <codeEntityReference autoUpgrade="true">F:System.DateTime.MinValue</codeEntityReference> or more than <codeEntityReference autoUpgrade="true">F:System.DateTime.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> property is initialized to <codeEntityReference autoUpgrade="true">F:System.DateTimeKind.Unspecified</codeEntityReference>.</para>
            <para>The allowable values for <parameterReference>year</parameterReference>, <parameterReference>month</parameterReference>, and <parameterReference>day</parameterReference> depend on <parameterReference>calendar</parameterReference>. An exception is thrown if the specified date and time cannot be expressed using <parameterReference>calendar</parameterReference>.</para>
            <para>The <codeEntityReference autoUpgrade="true">N:System.Globalization</codeEntityReference> namespace provides several calendars including <codeEntityReference autoUpgrade="true">T:System.Globalization.GregorianCalendar</codeEntityReference> and <codeEntityReference autoUpgrade="true">T:System.Globalization.JulianCalendar</codeEntityReference>.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates one of the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> constructors.</para>
                <codeReference>DateTime Constructor#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Int32</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.Globalization.Calendar</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Initializes a new instance of the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> structure to the specified year, month, day, hour, minute, second, and millisecond.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>year</parameterReference>
            <content>
              <para>The year (1 through 9999). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>month</parameterReference>
            <content>
              <para>The month (1 through 12). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>day</parameterReference>
            <content>
              <para>The day (1 through the number of days in <parameterReference>month</parameterReference>). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>hour</parameterReference>
            <content>
              <para>The hours (0 through 23). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>minute</parameterReference>
            <content>
              <para>The minutes (0 through 59). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>second</parameterReference>
            <content>
              <para>The seconds (0 through 59). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>millisecond</parameterReference>
            <content>
              <para>The milliseconds (0 through 999). </para>
            </content>
          </parameter>
        </parameters>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentOutOfRangeException</codeEntityReference>
            <content>
              <para>
                <parameterReference>year</parameterReference> is less than 1 or greater than 9999.</para>
              <para>-or- </para>
              <para>
                <parameterReference>month</parameterReference> is less than 1 or greater than 12.</para>
              <para>-or- </para>
              <para>
                <parameterReference>day</parameterReference> is less than 1 or greater than the number of days in <parameterReference>month</parameterReference>.</para>
              <para>-or- </para>
              <para>
                <parameterReference>hour</parameterReference> is less than 0 or greater than 23.</para>
              <para>-or- </para>
              <para>
                <parameterReference>minute</parameterReference> is less than 0 or greater than 59.</para>
              <para>-or- </para>
              <para>
                <parameterReference>second</parameterReference> is less than 0 or greater than 59.</para>
              <para>-or- </para>
              <para>
                <parameterReference>millisecond</parameterReference> is less than 0 or greater than 999. </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentException</codeEntityReference>
            <content>
              <para>Specified parameters evaluate to less than <codeEntityReference autoUpgrade="true">F:System.DateTime.MinValue</codeEntityReference> or more than <codeEntityReference autoUpgrade="true">F:System.DateTime.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> property is initialized to <codeEntityReference autoUpgrade="true">F:System.DateTimeKind.Unspecified</codeEntityReference>.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates one of the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> constructors.</para>
                <codeReference>DateTime Constructor#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Int32</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Initializes a new instance of the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> structure to the specified year, month, day, hour, minute, second, and millisecond for the specified calendar.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>year</parameterReference>
            <content>
              <para>The year (1 through the number of years in <parameterReference>calendar</parameterReference>). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>month</parameterReference>
            <content>
              <para>The month (1 through the number of months in <parameterReference>calendar</parameterReference>). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>day</parameterReference>
            <content>
              <para>The day (1 through the number of days in <parameterReference>month</parameterReference>). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>hour</parameterReference>
            <content>
              <para>The hours (0 through 23). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>minute</parameterReference>
            <content>
              <para>The minutes (0 through 59). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>second</parameterReference>
            <content>
              <para>The seconds (0 through 59). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>millisecond</parameterReference>
            <content>
              <para>The milliseconds (0 through 999). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>calendar</parameterReference>
            <content>
              <para>The <codeEntityReference autoUpgrade="true">T:System.Globalization.Calendar</codeEntityReference> that applies to this <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>. </para>
            </content>
          </parameter>
        </parameters>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentNullException</codeEntityReference>
            <content>
              <para>
                <parameterReference>calendar</parameterReference> is <languageKeyword>null</languageKeyword>. </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentOutOfRangeException</codeEntityReference>
            <content>
              <para>
                <parameterReference>year</parameterReference> is not in the range supported by <parameterReference>calendar</parameterReference>.</para>
              <para>-or- </para>
              <para>
                <parameterReference>month</parameterReference> is less than 1 or greater than the number of months in <parameterReference>calendar</parameterReference>.</para>
              <para>-or- </para>
              <para>
                <parameterReference>day</parameterReference> is less than 1 or greater than the number of days in <parameterReference>month</parameterReference>.</para>
              <para>-or- </para>
              <para>
                <parameterReference>hour</parameterReference> is less than 0 or greater than 23.</para>
              <para>-or- </para>
              <para>
                <parameterReference>minute</parameterReference> is less than 0 or greater than 59.</para>
              <para>-or- </para>
              <para>
                <parameterReference>second</parameterReference> is less than 0 or greater than 59.</para>
              <para>-or- </para>
              <para>
                <parameterReference>millisecond</parameterReference> is less than 0 or greater than 999. </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentException</codeEntityReference>
            <content>
              <para>Specified parameters evaluate to less than <codeEntityReference autoUpgrade="true">F:System.DateTime.MinValue</codeEntityReference> or more than <codeEntityReference autoUpgrade="true">F:System.DateTime.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> property is initialized to <codeEntityReference autoUpgrade="true">F:System.DateTimeKind.Unspecified</codeEntityReference>.</para>
            <para>The allowable values for <parameterReference>year</parameterReference>, <parameterReference>month</parameterReference>, and <parameterReference>day</parameterReference> depend on <parameterReference>calendar</parameterReference>. An exception is thrown if the specified date and time cannot be expressed using <parameterReference>calendar</parameterReference>.</para>
            <para>The <codeEntityReference autoUpgrade="true">N:System.Globalization</codeEntityReference> namespace provides several calendars including <codeEntityReference autoUpgrade="true">T:System.Globalization.GregorianCalendar</codeEntityReference> and <codeEntityReference autoUpgrade="true">T:System.Globalization.JulianCalendar</codeEntityReference>.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates one of the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> constructors.</para>
                <codeReference>DateTime Constructor#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Int32</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.Globalization.Calendar</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Initializes a new instance of the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> structure to the specified year, month, day, hour, minute, second, and Coordinated Universal Time (UTC) or local time.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>year</parameterReference>
            <content>
              <para>The year (1 through 9999). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>month</parameterReference>
            <content>
              <para>The month (1 through 12). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>day</parameterReference>
            <content>
              <para>The day (1 through the number of days in <parameterReference>month</parameterReference>). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>hour</parameterReference>
            <content>
              <para>The hours (0 through 23). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>minute</parameterReference>
            <content>
              <para>The minutes (0 through 59). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>second</parameterReference>
            <content>
              <para>The seconds (0 through 59). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>kind</parameterReference>
            <content>
              <para>One of the <codeEntityReference autoUpgrade="true">T:System.DateTimeKind</codeEntityReference> values that indicates whether <parameterReference>year</parameterReference>, <parameterReference>month</parameterReference>, <parameterReference>day</parameterReference>, <parameterReference>hour</parameterReference>, <parameterReference>minute</parameterReference> and <parameterReference>second</parameterReference> specify a local time, Coordinated Universal Time (UTC), or neither.</para>
            </content>
          </parameter>
        </parameters>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentOutOfRangeException</codeEntityReference>
            <content>
              <para>
                <parameterReference>year</parameterReference> is less than 1 or greater than 9999. </para>
              <para>-or- </para>
              <para>
                <parameterReference>month</parameterReference> is less than 1 or greater than 12. </para>
              <para>-or- </para>
              <para>
                <parameterReference>day</parameterReference> is less than 1 or greater than the number of days in <parameterReference>month</parameterReference>.</para>
              <para>-or- </para>
              <para>
                <parameterReference>hour</parameterReference> is less than 0 or greater than 23. </para>
              <para>-or- </para>
              <para>
                <parameterReference>minute</parameterReference> is less than 0 or greater than 59. </para>
              <para>-or- </para>
              <para>
                <parameterReference>second</parameterReference> is less than 0 or greater than 59. </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentException</codeEntityReference>
            <content>
              <para>The specified time parameters evaluate to less than <codeEntityReference autoUpgrade="true">F:System.DateTime.MinValue</codeEntityReference> or more than <codeEntityReference autoUpgrade="true">F:System.DateTime.MaxValue</codeEntityReference>. </para>
              <para>-or-</para>
              <para>
                <parameterReference>kind</parameterReference> is not one of the <codeEntityReference autoUpgrade="true">T:System.DateTimeKind</codeEntityReference> values.</para>
            </content>
          </exception>
        </exceptions>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Initializes a new instance of the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> structure to the specified year, month, day, hour, minute, second, millisecond, and Coordinated Universal Time (UTC) or local time.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>year</parameterReference>
            <content>
              <para>The year (1 through 9999). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>month</parameterReference>
            <content>
              <para>The month (1 through 12). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>day</parameterReference>
            <content>
              <para>The day (1 through the number of days in <parameterReference>month</parameterReference>). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>hour</parameterReference>
            <content>
              <para>The hours (0 through 23). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>minute</parameterReference>
            <content>
              <para>The minutes (0 through 59). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>second</parameterReference>
            <content>
              <para>The seconds (0 through 59). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>millisecond</parameterReference>
            <content>
              <para>The milliseconds (0 through 999). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>kind</parameterReference>
            <content>
              <para>One of the <codeEntityReference autoUpgrade="true">T:System.DateTimeKind</codeEntityReference> values that indicates whether <parameterReference>year</parameterReference>, <parameterReference>month</parameterReference>, <parameterReference>day</parameterReference>, <parameterReference>hour</parameterReference>, <parameterReference>minute</parameterReference>, <parameterReference>second</parameterReference>, and <parameterReference>millisecond</parameterReference> specify a local time, Coordinated Universal Time (UTC), or neither.</para>
            </content>
          </parameter>
        </parameters>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentOutOfRangeException</codeEntityReference>
            <content>
              <para>
                <parameterReference>year</parameterReference> is less than 1 or greater than 9999.</para>
              <para>-or- </para>
              <para>
                <parameterReference>month</parameterReference> is less than 1 or greater than 12.</para>
              <para>-or- </para>
              <para>
                <parameterReference>day</parameterReference> is less than 1 or greater than the number of days in <parameterReference>month</parameterReference>.</para>
              <para>-or- </para>
              <para>
                <parameterReference>hour</parameterReference> is less than 0 or greater than 23.</para>
              <para>-or- </para>
              <para>
                <parameterReference>minute</parameterReference> is less than 0 or greater than 59.</para>
              <para>-or- </para>
              <para>
                <parameterReference>second</parameterReference> is less than 0 or greater than 59.</para>
              <para>-or- </para>
              <para>
                <parameterReference>millisecond</parameterReference> is less than 0 or greater than 999. </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentException</codeEntityReference>
            <content>
              <para>The specified time parameters evaluate to less than <codeEntityReference autoUpgrade="true">F:System.DateTime.MinValue</codeEntityReference> or more than <codeEntityReference autoUpgrade="true">F:System.DateTime.MaxValue</codeEntityReference>. </para>
              <para>-or-</para>
              <para>
                <parameterReference>kind</parameterReference> is not one of the <codeEntityReference autoUpgrade="true">T:System.DateTimeKind</codeEntityReference> values.</para>
            </content>
          </exception>
        </exceptions>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.DateTimeKind)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Initializes a new instance of the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> structure to the specified year, month, day, hour, minute, second, millisecond, and Coordinated Universal Time (UTC) or local time for the specified calendar.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>year</parameterReference>
            <content>
              <para>The year (1 through the number of years in <parameterReference>calendar</parameterReference>). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>month</parameterReference>
            <content>
              <para>The month (1 through the number of months in <parameterReference>calendar</parameterReference>). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>day</parameterReference>
            <content>
              <para>The day (1 through the number of days in <parameterReference>month</parameterReference>). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>hour</parameterReference>
            <content>
              <para>The hours (0 through 23). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>minute</parameterReference>
            <content>
              <para>The minutes (0 through 59). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>second</parameterReference>
            <content>
              <para>The seconds (0 through 59). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>millisecond</parameterReference>
            <content>
              <para>The milliseconds (0 through 999). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>calendar</parameterReference>
            <content>
              <para>The <codeEntityReference autoUpgrade="true">T:System.Globalization.Calendar</codeEntityReference> that applies to this <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>kind</parameterReference>
            <content>
              <para>One of the <codeEntityReference autoUpgrade="true">T:System.DateTimeKind</codeEntityReference> values that indicates whether <parameterReference>year</parameterReference>, <parameterReference>month</parameterReference>, <parameterReference>day</parameterReference>, <parameterReference>hour</parameterReference>, <parameterReference>minute</parameterReference>, <parameterReference>second</parameterReference>, and <parameterReference>millisecond</parameterReference> specify a local time, Coordinated Universal Time (UTC), or neither.</para>
            </content>
          </parameter>
        </parameters>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentNullException</codeEntityReference>
            <content>
              <para>
                <parameterReference>calendar</parameterReference> is <languageKeyword>null</languageKeyword>. </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentOutOfRangeException</codeEntityReference>
            <content>
              <para>
                <parameterReference>year</parameterReference> is not in the range supported by <parameterReference>calendar</parameterReference>.</para>
              <para>-or- </para>
              <para>
                <parameterReference>month</parameterReference> is less than 1 or greater than the number of months in <parameterReference>calendar</parameterReference>.</para>
              <para>-or- </para>
              <para>
                <parameterReference>day</parameterReference> is less than 1 or greater than the number of days in <parameterReference>month</parameterReference>.</para>
              <para>-or- </para>
              <para>
                <parameterReference>hour</parameterReference> is less than 0 or greater than 23.</para>
              <para>-or- </para>
              <para>
                <parameterReference>minute</parameterReference> is less than 0 or greater than 59.</para>
              <para>-or- </para>
              <para>
                <parameterReference>second</parameterReference> is less than 0 or greater than 59.</para>
              <para>-or- </para>
              <para>
                <parameterReference>millisecond</parameterReference> is less than 0 or greater than 999. </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentException</codeEntityReference>
            <content>
              <para>The specified time parameters evaluate to less than <codeEntityReference autoUpgrade="true">F:System.DateTime.MinValue</codeEntityReference> or more than <codeEntityReference autoUpgrade="true">F:System.DateTime.MaxValue</codeEntityReference>. </para>
              <para>-or-</para>
              <para>
                <parameterReference>kind</parameterReference> is not one of the <codeEntityReference autoUpgrade="true">T:System.DateTimeKind</codeEntityReference> values.</para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The allowable values for <parameterReference>year</parameterReference>, <parameterReference>month</parameterReference>, and <parameterReference>day</parameterReference> parameters depend on the <parameterReference>calendar</parameterReference> parameter. An exception is thrown if the specified date and time cannot be expressed using <parameterReference>calendar</parameterReference>.</para>
            <para>The <codeEntityReference autoUpgrade="true">N:System.Globalization</codeEntityReference> namespace provides several calendars including <codeEntityReference autoUpgrade="true">T:System.Globalization.GregorianCalendar</codeEntityReference> and <codeEntityReference autoUpgrade="true">T:System.Globalization.JulianCalendar</codeEntityReference>.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int64)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Initializes a new instance of the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> structure to a specified number of ticks.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>ticks</parameterReference>
            <content>
              <para>A date and time expressed in 100-nanosecond units. </para>
            </content>
          </parameter>
        </parameters>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentOutOfRangeException</codeEntityReference>
            <content>
              <para>
                <parameterReference>ticks</parameterReference> is less than <codeEntityReference autoUpgrade="true">F:System.DateTime.MinValue</codeEntityReference> or greater than <codeEntityReference autoUpgrade="true">F:System.DateTime.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> property is initialized to <codeEntityReference autoUpgrade="true">F:System.DateTimeKind.Unspecified</codeEntityReference>.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates one of the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> constructors.</para>
                <codeReference>datetime.ctor_Int64#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int64,System.DateTimeKind)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Initializes a new instance of the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> structure to a specified number of ticks and to Coordinated Universal Time (UTC) or local time.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>ticks</parameterReference>
            <content>
              <para>A date and time expressed in 100-nanosecond units. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>kind</parameterReference>
            <content>
              <para>One of the <codeEntityReference autoUpgrade="true">T:System.DateTimeKind</codeEntityReference> values that indicates whether <parameterReference>ticks</parameterReference> specifies a local time, Coordinated Universal Time (UTC), or neither.</para>
            </content>
          </parameter>
        </parameters>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentOutOfRangeException</codeEntityReference>
            <content>
              <para>
                <parameterReference>ticks</parameterReference> is less than <codeEntityReference autoUpgrade="true">F:System.DateTime.MinValue</codeEntityReference> or greater than <codeEntityReference autoUpgrade="true">F:System.DateTime.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentException</codeEntityReference>
            <content>
              <para>
                <parameterReference>kind</parameterReference> is not one of the <codeEntityReference autoUpgrade="true">T:System.DateTimeKind</codeEntityReference> values.</para>
            </content>
          </exception>
        </exceptions>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="F:System.DateTime.MaxValue">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Represents the largest possible value of <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>. This field is read-only.</para>
        </summary>
        <remarks>
          <content>
            <para>The value of this constant is equivalent to 23:59:59.9999999, December 31, 9999, exactly one 100-nanosecond tick before 00:00:00, January 1, 10000.</para>
          </content>
        </remarks>
      </dduexml>
    </member>
    <member name="F:System.DateTime.MinValue">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Represents the smallest possible value of <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>. This field is read-only.</para>
        </summary>
        <remarks>
          <content>
            <para>The value of this constant is equivalent to 00:00:00.0000000, January 1, 0001.</para>
          </content>
        </remarks>
      </dduexml>
    </member>
    <member name="M:System.DateTime.Add(System.TimeSpan)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Adds the value of the specified <codeEntityReference autoUpgrade="true">T:System.TimeSpan</codeEntityReference> to the value of this instance.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.TimeSpan</codeEntityReference> that contains the interval to add. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> whose value is the sum of the date and time represented by this instance and the time interval represented by <parameterReference>value</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentOutOfRangeException</codeEntityReference>
            <content>
              <para>The resulting <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> is less than <codeEntityReference autoUpgrade="true">F:System.DateTime.MinValue</codeEntityReference> or greater than <codeEntityReference autoUpgrade="true">F:System.DateTime.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>This method does not change the value of this <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>. Instead, a new <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> is returned whose value is the result of this operation.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates the <codeEntityReference autoUpgrade="true">M:System.DateTime.Add(System.TimeSpan)</codeEntityReference> method. It calculates the day of the week that is 36 days (864 hours) from this moment.</para>
                <codeReference>DateTime.Add#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.TimeSpan</codeEntityReference>
          <codeEntityReference qualifyHint="true" autoUpgrade="true">M:System.TimeSpan.Add(System.TimeSpan)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.AddDays(System.Double)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Adds the specified number of days to the value of this instance.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A number of whole and fractional days. The <parameterReference>value</parameterReference> parameter can be negative or positive. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> whose value is the sum of the date and time represented by this instance and the number of days represented by <parameterReference>value</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentOutOfRangeException</codeEntityReference>
            <content>
              <para>The resulting <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> is less than <codeEntityReference autoUpgrade="true">F:System.DateTime.MinValue</codeEntityReference> or greater than <codeEntityReference autoUpgrade="true">F:System.DateTime.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>This method does not change the value of this <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>. Instead, a new <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> is returned whose value is the result of this operation.</para>
            <para>The fractional part of <parameterReference>value</parameterReference> is the fractional part of a day. For example, 4.5 is equivalent to 4 days, 12 hours, 0 minutes, 0 seconds, 0 milliseconds, and 0 ticks.</para>
            <para>The <parameterReference>value</parameterReference> parameter is rounded to the nearest tick.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates the <codeEntityReference autoUpgrade="true">M:System.DateTime.AddDays(System.Double)</codeEntityReference> method.</para>
                <codeReference>DateTime.AddDays#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Double</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.AddHours(System.Double)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Adds the specified number of hours to the value of this instance.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A number of whole and fractional hours. The <parameterReference>value</parameterReference> parameter can be negative or positive. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> whose value is the sum of the date and time represented by this instance and the number of hours represented by <parameterReference>value</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentOutOfRangeException</codeEntityReference>
            <content>
              <para>The resulting <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> is less than <codeEntityReference autoUpgrade="true">F:System.DateTime.MinValue</codeEntityReference> or greater than <codeEntityReference autoUpgrade="true">F:System.DateTime.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>This method does not change the value of this <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>. Instead, a new <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> is returned whose value is the result of this operation.</para>
            <para>The fractional part of <parameterReference>value</parameterReference> is the fractional part of an hour. For example, 4.5 is equivalent to 4 hours, 30 minutes, 0 seconds, 0 milliseconds, and 0 ticks.</para>
            <para>The <parameterReference>value</parameterReference> parameter is rounded to the nearest tick.</para>
          </content>
        </remarks>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Double</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.AddMilliseconds(System.Double)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Adds the specified number of milliseconds to the value of this instance.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A number of whole and fractional milliseconds. The <parameterReference>value</parameterReference> parameter can be negative or positive. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> whose value is the sum of the date and time represented by this instance and the number of milliseconds represented by <parameterReference>value</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentOutOfRangeException</codeEntityReference>
            <content>
              <para>The resulting <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> is less than <codeEntityReference autoUpgrade="true">F:System.DateTime.MinValue</codeEntityReference> or greater than <codeEntityReference autoUpgrade="true">F:System.DateTime.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>This method does not change the value of this <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>. Instead, a new <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> is returned whose value is the result of this operation.</para>
            <para>The fractional part of <parameterReference>value</parameterReference> is the fractional part of a millisecond. For example, 4.5 is equivalent to 4 milliseconds, and 5000 ticks, where one millisecond = 10000 ticks.</para>
            <para>The <parameterReference>value</parameterReference> parameter is rounded to the nearest tick.</para>
          </content>
        </remarks>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Double</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.AddMinutes(System.Double)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Adds the specified number of minutes to the value of this instance.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A number of whole and fractional minutes. The <parameterReference>value</parameterReference> parameter can be negative or positive. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> whose value is the sum of the date and time represented by this instance and the number of minutes represented by <parameterReference>value</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentOutOfRangeException</codeEntityReference>
            <content>
              <para>The resulting <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> is less than <codeEntityReference autoUpgrade="true">F:System.DateTime.MinValue</codeEntityReference> or greater than <codeEntityReference autoUpgrade="true">F:System.DateTime.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>This method does not change the value of this <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>. Instead, a new <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> is returned whose value is the result of this operation.</para>
            <para>The fractional part of <parameterReference>value</parameterReference> is the fractional part of a minute. For example, 4.5 is equivalent to 4 minutes, 30 seconds, 0 milliseconds, and 0 ticks.</para>
            <para>The <parameterReference>value</parameterReference> parameter is rounded to the nearest tick.</para>
          </content>
        </remarks>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Double</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.AddMonths(System.Int32)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Adds the specified number of months to the value of this instance.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>months</parameterReference>
            <content>
              <para>A number of months. The <parameterReference>months</parameterReference> parameter can be negative or positive. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> whose value is the sum of the date and time represented by this instance and <parameterReference>months</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentOutOfRangeException</codeEntityReference>
            <content>
              <para>The resulting <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> is less than <codeEntityReference autoUpgrade="true">F:System.DateTime.MinValue</codeEntityReference> or greater than <codeEntityReference autoUpgrade="true">F:System.DateTime.MaxValue</codeEntityReference>.</para>
              <para>-or- </para>
              <para>
                <parameterReference>months</parameterReference> is less than -120,000 or greater than 120,000. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>This method does not change the value of this <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>. Instead, a new <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> is returned whose value is the result of this operation.</para>
          </content>
        </remarks>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Double</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.AddSeconds(System.Double)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Adds the specified number of seconds to the value of this instance.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A number of whole and fractional seconds. The <parameterReference>value</parameterReference> parameter can be negative or positive. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> whose value is the sum of the date and time represented by this instance and the number of seconds represented by <parameterReference>value</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentOutOfRangeException</codeEntityReference>
            <content>
              <para>The resulting <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> is less than <codeEntityReference autoUpgrade="true">F:System.DateTime.MinValue</codeEntityReference> or greater than <codeEntityReference autoUpgrade="true">F:System.DateTime.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>This method does not change the value of this <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>. Instead, a new <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> is returned whose value is the result of this operation.</para>
            <para>The fractional part of <parameterReference>value</parameterReference> is the fractional part of a second. For example, 4.5 is equivalent to 4 seconds, 500 milliseconds, and 0 ticks.</para>
            <para>The <parameterReference>value</parameterReference> parameter is rounded to the nearest tick.</para>
          </content>
        </remarks>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Double</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.AddTicks(System.Int64)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Adds the specified number of ticks to the value of this instance.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A number of 100-nanosecond ticks. The <parameterReference>value</parameterReference> parameter can be positive or negative. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> whose value is the sum of the date and time represented by this instance and the time represented by <parameterReference>value</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentOutOfRangeException</codeEntityReference>
            <content>
              <para>The resulting <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> is less than <codeEntityReference autoUpgrade="true">F:System.DateTime.MinValue</codeEntityReference> or greater than <codeEntityReference autoUpgrade="true">F:System.DateTime.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>This method does not change the value of this <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>. Instead, a new <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> is returned whose value is the result of this operation.</para>
          </content>
        </remarks>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Int64</codeEntityReference>
          <codeEntityReference autoUpgrade="true">P:System.DateTime.Ticks</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.AddYears(System.Int32)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Adds the specified number of years to the value of this instance.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A number of years. The <parameterReference>value</parameterReference> parameter can be negative or positive. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> whose value is the sum of the date and time represented by this instance and the number of years represented by <parameterReference>value</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentOutOfRangeException</codeEntityReference>
            <content>
              <para>
                <parameterReference>value</parameterReference> or the resulting <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> is less than <codeEntityReference autoUpgrade="true">F:System.DateTime.MinValue</codeEntityReference> or greater than <codeEntityReference autoUpgrade="true">F:System.DateTime.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>This method does not change the value of this <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>. Instead, a new <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> is returned whose value is the result of this operation.</para>
          </content>
        </remarks>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Double</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.Compare(System.DateTime,System.DateTime)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Compares two instances of <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> and returns an indication of their relative values.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>t1</parameterReference>
            <content>
              <para>The first <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>t2</parameterReference>
            <content>
              <para>The second <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A signed number indicating the relative values of <parameterReference>t1</parameterReference> and <parameterReference>t2</parameterReference>.</para>
          <table>
            <tableHeader>
              <row>
                <entry>
                  <para>Value Type </para>
                </entry>
                <entry>
                  <para>Condition </para>
                </entry>
              </row>
            </tableHeader>
            <row>
              <entry>
                <para>Less than zero </para>
              </entry>
              <entry>
                <para>
                  <parameterReference>t1</parameterReference> is less than <parameterReference>t2</parameterReference>. </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>Zero </para>
              </entry>
              <entry>
                <para>
                  <parameterReference>t1</parameterReference> equals <parameterReference>t2</parameterReference>. </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>Greater than zero </para>
              </entry>
              <entry>
                <para>
                  <parameterReference>t1</parameterReference> is greater than <parameterReference>t2</parameterReference>. </para>
              </entry>
            </row>
          </table>
        </returnValue>
        <remarks>
          <content>
            <para>Before comparing <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> objects, insure that the objects represent times in the same time zone.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates <codeEntityReference autoUpgrade="true">M:System.DateTime.Compare(System.DateTime,System.DateTime)</codeEntityReference>.</para>
                <codeReference>Classic DateTime.Compare Example#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.CompareTo(System.Object)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.Equals(System.Object)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="Overload:System.DateTime.CompareTo">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Compares this instance to a specified object or value type and returns an indication of their relative values.</para>
        </summary>
      </dduexml>
    </member>
    <member name="M:System.DateTime.CompareTo(System.DateTime)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Compares this instance to a specified <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object and returns an indication of their relative values.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object to compare. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A signed number indicating the relative values of this instance and the <parameterReference>value</parameterReference> parameter.</para>
          <table>
            <tableHeader>
              <row>
                <entry>
                  <para>Value </para>
                </entry>
                <entry>
                  <para>Description </para>
                </entry>
              </row>
            </tableHeader>
            <row>
              <entry>
                <para>Less than zero </para>
              </entry>
              <entry>
                <para>This instance is less than <parameterReference>value</parameterReference>. </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>Zero </para>
              </entry>
              <entry>
                <para>This instance is equal to <parameterReference>value</parameterReference>. </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>Greater than zero </para>
              </entry>
              <entry>
                <para>This instance is greater than <parameterReference>value</parameterReference>. </para>
              </entry>
            </row>
          </table>
        </returnValue>
        <remarks>
          <content>
            <para>This method implements the <codeEntityReference qualifyHint="true" autoUpgrade="true">T:System.IComparable`1</codeEntityReference> interface and performs slightly better than the <codeEntityReference qualifyHint="true" autoUpgrade="true">M:System.DateTime.CompareTo(System.Object)</codeEntityReference> method because it does not have to convert the <parameterReference>value</parameterReference> parameter to an object.</para>
            <para>Before comparing <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> objects, insure that the objects represent times in the same time zone.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates generic and non-generic versions of the <languageKeyword>CompareTo</languageKeyword> method for several value and reference types.</para>
                <codeReference>T.CompareTo#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.Compare(System.DateTime,System.DateTime)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.Equals(System.Object)</codeEntityReference>
        </relatedTopics>
      <overload>
        <summary>
          <para>Compares this instance to a specified object or value type and returns an indication of their relative values.</para>
        </summary>
      </overload>
</dduexml>
    </member>
    <member name="M:System.DateTime.CompareTo(System.Object)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Compares this instance to a specified object and returns an indication of their relative values.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A boxed <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object to compare, or <languageKeyword>null</languageKeyword>. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A signed number indicating the relative values of this instance and <parameterReference>value</parameterReference>.</para>
          <table>
            <tableHeader>
              <row>
                <entry>
                  <para>Value </para>
                </entry>
                <entry>
                  <para>Description </para>
                </entry>
              </row>
            </tableHeader>
            <row>
              <entry>
                <para>Less than zero </para>
              </entry>
              <entry>
                <para>This instance is less than <parameterReference>value</parameterReference>. </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>Zero </para>
              </entry>
              <entry>
                <para>This instance is equal to <parameterReference>value</parameterReference>. </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>Greater than zero </para>
              </entry>
              <entry>
                <para>This instance is greater than <parameterReference>value</parameterReference>, or <parameterReference>value</parameterReference> is <languageKeyword>null</languageKeyword>. </para>
              </entry>
            </row>
          </table>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentException</codeEntityReference>
            <content>
              <para>
                <parameterReference>value</parameterReference> is not a <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>Before comparing <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> objects, insure that the objects represent times in the same time zone.</para>
            <para>Any instance of <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>, regardless of its value, is considered greater than <languageKeyword>null</languageKeyword>.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates the <codeEntityReference autoUpgrade="true">M:System.DateTime.CompareTo(System.Object)</codeEntityReference> method.</para>
                <codeReference>DateTime.CompareTo#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.Compare(System.DateTime,System.DateTime)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.Equals(System.Object)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.DaysInMonth(System.Int32,System.Int32)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Returns the number of days in the specified month and year.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>year</parameterReference>
            <content>
              <para>The year. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>month</parameterReference>
            <content>
              <para>The month (a number ranging from 1 to 12). </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The number of days in <parameterReference>month</parameterReference> for the specified <parameterReference>year</parameterReference>.</para>
          <para>For example, if <parameterReference>month</parameterReference> equals 2 for February, the return value is 28 or 29 depending upon whether <parameterReference>year</parameterReference> is a leap year.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentOutOfRangeException</codeEntityReference>
            <content>
              <para>
                <parameterReference>month</parameterReference> is less than 1 or greater than 12.</para>
              <para>-or-</para>
              <para>
                <parameterReference>year</parameterReference> is less than 1 or greater than 9999.</para>
            </content>
          </exception>
        </exceptions>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates the <codeEntityReference autoUpgrade="true">M:System.DateTime.DaysInMonth(System.Int32,System.Int32)</codeEntityReference> method.</para>
                <codeReference>DateTime.DaysInMonth#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="Overload:System.DateTime.Equals">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Returns a value indicating whether two <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> objects, or a <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> instance and another object or <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> are equal.</para>
        </summary>
      </dduexml>
    </member>
    <member name="M:System.DateTime.Equals(System.DateTime)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Returns a value indicating whether this instance is equal to the specified <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> instance.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> instance to compare to this instance. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>
            <languageKeyword>true</languageKeyword> if the <parameterReference>value</parameterReference> parameter equals the value of this instance; otherwise, <languageKeyword>false</languageKeyword>.</para>
        </returnValue>
        <remarks>
          <content>
            <para>This method implements the <codeEntityReference qualifyHint="true" autoUpgrade="true">T:System.IEquatable`1</codeEntityReference> interface, and performs slightly better than the <codeEntityReference autoUpgrade="true">M:System.DateTime.Equals(System.Object)</codeEntityReference> method because the <parameterReference>value</parameterReference> parameter does not have to be converted to an object. </para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.Equals(System.Object)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.Compare(System.DateTime,System.DateTime)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.CompareTo(System.Object)</codeEntityReference>
        </relatedTopics>
      <overload>
        <summary>
          <para>Returns a value indicating whether two <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> objects, or a <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> instance and another object or <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> are equal.</para>
        </summary>
      </overload>
</dduexml>
    </member>
    <member name="M:System.DateTime.Equals(System.DateTime,System.DateTime)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Returns a value indicating whether two instances of <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> are equal.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>t1</parameterReference>
            <content>
              <para>The first <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> instance. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>t2</parameterReference>
            <content>
              <para>The second <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> instance. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>
            <languageKeyword>true</languageKeyword> if the two <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> values are equal; otherwise, <languageKeyword>false</languageKeyword>.</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates the <codeEntityReference autoUpgrade="true">M:System.DateTime.Equals(System.DateTime,System.DateTime)</codeEntityReference> method.</para>
                <codeReference>DateTime.Equals#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Boolean</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.Compare(System.DateTime,System.DateTime)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.CompareTo(System.Object)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.Equals(System.Object)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Returns a value indicating whether this instance is equal to a specified object.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>An object to compare to this instance. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>
            <languageKeyword>true</languageKeyword> if <parameterReference>value</parameterReference> is an instance of <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> and equals the value of this instance; otherwise, <languageKeyword>false</languageKeyword>.</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates the <codeEntityReference autoUpgrade="true">M:System.DateTime.Equals(System.Object)</codeEntityReference> method.</para>
                <codeReference>DateTime.Equals#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.Compare(System.DateTime,System.DateTime)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.CompareTo(System.Object)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.FromBinary(System.Int64)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Deserializes a 64-bit binary value and recreates an original serialized <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>dateData</parameterReference>
            <content>
              <para>A 64-bit signed integer that encodes the <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> property in a 2-bit field and the <codeEntityReference autoUpgrade="true">P:System.DateTime.Ticks</codeEntityReference> property in a 62-bit field. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object that is equivalent to the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object that was serialized by the <codeEntityReference autoUpgrade="true">M:System.DateTime.ToBinary</codeEntityReference> method.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentException</codeEntityReference>
            <content>
              <para>
                <parameterReference>dateData</parameterReference> is less than <codeEntityReference autoUpgrade="true">F:System.DateTime.MinValue</codeEntityReference> or greater than <codeEntityReference autoUpgrade="true">F:System.DateTime.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>Use the <codeEntityReference autoUpgrade="true">M:System.DateTime.ToBinary</codeEntityReference> method to convert the value of the current <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object to a binary value. Subsequently, use the binary value and the <codeEntityReference autoUpgrade="true">M:System.DateTime.FromBinary(System.Int64)</codeEntityReference> method to recreate the original <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object.</para>
          </content>
          <sections>
            <section>
              <title>Local Time Adjustment</title>
              <content>
                <para>A local time, which is a Coordinated Universal Time adjusted to the local time zone, is represented by a <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> structure whose <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> property has the value <codeEntityReference autoUpgrade="true">F:System.DateTimeKind.Local</codeEntityReference>. If a local <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object is serialized in one time zone by the <codeEntityReference autoUpgrade="true">M:System.DateTime.ToBinary</codeEntityReference> method and deserialized in a different time zone by the <codeEntityReference autoUpgrade="true">M:System.DateTime.FromBinary(System.Int64)</codeEntityReference> method, the local time represented by the resulting <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object is automatically adjusted to the second time zone.</para>
                <para>For example, consider a <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object that represents a local time of 3 P.M. An application executing in a western time zone uses the <codeEntityReference autoUpgrade="true">M:System.DateTime.ToBinary</codeEntityReference> method to convert that <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object to a binary value, then another application executing in a time zone three hours east of the original one uses the <codeEntityReference autoUpgrade="true">M:System.DateTime.FromBinary(System.Int64)</codeEntityReference> method to convert the binary value to a new <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object. The value of the new <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object is 6 P.M., which represents the same point in time as the original 3 P.M. value, but is adjusted to local time in the eastern time zone. </para>
              </content>
            </section>
            <section>
              <title>Version Considerations</title>
              <content>
                <para>Starting with the .NET Framework version 2.0, a <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> structure consists of a private Kind field, which indicates whether the specified time is local time, Coordinated Universal Time (UTC), or neither, concatenated to a private Ticks field, which contains the number of 100-nanosecond ticks that specify a date and time. The number of ticks can be accessed with the <codeEntityReference autoUpgrade="true">P:System.DateTime.Ticks</codeEntityReference> property and the<languageKeyword></languageKeyword>Kind field can be accessed with the <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> property. </para>
                <para>Prior to the .NET Framework 2.0, if you serialized a <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object manually instead of using a serialization interface such as <codeEntityReference qualifyHint="true" autoUpgrade="true">T:System.Runtime.Serialization.ISerializable</codeEntityReference>, you needed to serialize only the Ticks data in the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>. Starting with the .NET Framework 2.0, you must also serialize the Kind data. </para>
              </content>
            </section>
          </sections>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.ToBinary</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.FromFileTime(System.Int64)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the specified Windows file time to an equivalent local time.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>fileTime</parameterReference>
            <content>
              <para>A Windows file time expressed in ticks. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object that represents a local time equivalent to the date and time represented by the <parameterReference>fileTime</parameterReference> parameter.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentOutOfRangeException</codeEntityReference>
            <content>
              <para>
                <parameterReference>fileTime</parameterReference> is less than 0 or represents a time greater than <codeEntityReference autoUpgrade="true">F:System.DateTime.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file. </para>
            <para>The <parameterReference>fileTime</parameterReference> parameter specifies a file time expressed in 100-nanosecond ticks.</para>
            <para>Starting with the .NET Framework version 2.0, the return value is a <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> whose <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> property is <codeEntityReference autoUpgrade="true">F:System.DateTimeKind.Local</codeEntityReference>.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates the <codeEntityReference autoUpgrade="true">M:System.DateTime.FromFileTime(System.Int64)</codeEntityReference> method.</para>
                <codeReference>DateTime.FromFileTime#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.ToUniversalTime</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.TimeZone.GetUtcOffset(System.DateTime)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.FromFileTimeUtc(System.Int64)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the specified Windows file time to an equivalent UTC time.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>fileTime</parameterReference>
            <content>
              <para>A Windows file time expressed in ticks. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object that represents a UTC time equivalent to the date and time represented by the <parameterReference>fileTime</parameterReference> parameter.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentOutOfRangeException</codeEntityReference>
            <content>
              <para>
                <parameterReference>fileTime</parameterReference> is less than 0 or represents a time greater than <codeEntityReference autoUpgrade="true">F:System.DateTime.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file. </para>
            <para>The <parameterReference>fileTime</parameterReference> parameter specifies a file time expressed in 100-nanosecond ticks.</para>
            <para>Starting with the .NET Framework version 2.0, the return value is a <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> whose <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> property is <codeEntityReference autoUpgrade="true">F:System.DateTimeKind.Utc</codeEntityReference>.</para>
          </content>
        </remarks>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.ToUniversalTime</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.TimeZone.GetUtcOffset(System.DateTime)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.FromFileTime(System.Int64)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.FromOADate(System.Double)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Returns a <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> equivalent to the specified OLE Automation Date.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d</parameterReference>
            <content>
              <para>An OLE Automation Date value. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> that represents the same date and time as <parameterReference>d</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentException</codeEntityReference>
            <content>
              <para>The date is not a valid OLE Automation Date value. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The<parameterReference> d</parameterReference> parameter is a double-precision floating-point number that represents a date as the number of days before or after the base date, midnight, 30 December 1899. The sign and integral part of <parameterReference>d</parameterReference> encode the date as a positive or negative day displacement from 30 December 1899, and the absolute value of the fractional part of <parameterReference>d</parameterReference> encodes the time of day as a fraction of a day displacement from midnight. <parameterReference>d</parameterReference> must be a value between negative 657435.0 through positive 2958466.0.</para>
            <para>Note that because of the way dates are encoded, there are two ways of representing any time of day on 30 December 1899. For example, -0.5 and 0.5 both mean noon on 30 December 1899 because a day displacement of plus or minus zero days from the base date is still the base date, and a half day displacement from midnight is noon.</para>
            <para>See <codeEntityReference autoUpgrade="true">M:System.DateTime.ToOADate</codeEntityReference> and the MSDN Online Library at http://MSDN.Microsoft.com/library/default.asp for more information on OLE Automation.</para>
          </content>
        </remarks>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.ToOADate</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="Overload:System.DateTime.GetDateTimeFormats">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the value of this instance to all the string representations supported by the standard <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> format specifiers.</para>
        </summary>
      </dduexml>
    </member>
    <member name="M:System.DateTime.GetDateTimeFormats">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the value of this instance to all the string representations supported by the standard <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> format specifiers.</para>
        </summary>
        <returnValue>
          <para>A string array where each element is the representation of the value of this instance formatted with one of the standard <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> formatting specifiers.</para>
        </returnValue>
        <remarks>
          <content>
            <para>Each element of the return value is formatted using information from the current culture. For more information about culture-specific formatting information for the current culture, see <codeEntityReference qualifyHint="true" autoUpgrade="true">P:System.Globalization.CultureInfo.CurrentCulture</codeEntityReference>.</para>
            <para>For more information about the standard formatting specifiers, see <codeEntityReference qualifyHint="true" autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference>.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates the <codeEntityReference autoUpgrade="true">M:System.DateTime.GetDateTimeFormats</codeEntityReference> method.</para>
                <codeReference>DateTime.GetDateTimeFormats#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      <overload>
        <summary>
          <para>Converts the value of this instance to all the string representations supported by the standard <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> format specifiers.</para>
        </summary>
      </overload>
</dduexml>
    </member>
    <member name="M:System.DateTime.GetDateTimeFormats(System.Char)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the value of this instance to all the string representations supported by the specified standard <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> format specifier.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>format</parameterReference>
            <content>
              <para>A Unicode character containing a format specifier. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A string array where each element is the representation of the value of this instance formatted with the <parameterReference>format</parameterReference> standard <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> formatting specifier.</para>
        </returnValue>
        <remarks>
          <content>
            <para>Each element of the return value is formatted using information from the current culture. For more information about culture-specific formatting information for the current culture, see <codeEntityReference qualifyHint="true" autoUpgrade="true">P:System.Globalization.CultureInfo.CurrentCulture</codeEntityReference>.</para>
            <para>For more information about the standard formatting specifiers, see <codeEntityReference qualifyHint="true" autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference>.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates the <codeEntityReference autoUpgrade="true">M:System.DateTime.GetDateTimeFormats</codeEntityReference> method.</para>
                <codeReference>DateTime.GetDateTimeFormats#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="M:System.DateTime.GetDateTimeFormats(System.Char,System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the value of this instance to all the string representations supported by the specified standard <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> format specifier and culture-specific formatting information.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>format</parameterReference>
            <content>
              <para>A Unicode character containing a format specifier. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>provider</parameterReference>
            <content>
              <para>An <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> that supplies culture-specific formatting information about this instance. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A string array where each element is the representation of the value of this instance formatted with one of the standard <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> formatting specifiers.</para>
        </returnValue>
        <remarks>
          <content>
            <para>Each element of the return value is formatted using culture-specific information supplied by <parameterReference>provider</parameterReference>.</para>
            <para>For more information about the standard formatting specifiers, see <codeEntityReference qualifyHint="true" autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference>.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates the <codeEntityReference autoUpgrade="true">M:System.DateTime.GetDateTimeFormats</codeEntityReference> method.</para>
                <codeReference>DateTime.GetDateTimeFormats#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="M:System.DateTime.GetDateTimeFormats(System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the value of this instance to all the string representations supported by the standard <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> format specifiers and the specified culture-specific formatting information.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>provider</parameterReference>
            <content>
              <para>An <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> that supplies culture-specific formatting information about this instance. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A string array where each element is the representation of the value of this instance formatted with one of the standard <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> formatting specifiers.</para>
        </returnValue>
        <remarks>
          <content>
            <para>Each element of the return value is formatted using culture-specific information supplied by <parameterReference>provider</parameterReference>.</para>
            <para>For more information about the standard formatting specifiers, see <codeEntityReference qualifyHint="true" autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference>.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates the <codeEntityReference autoUpgrade="true">M:System.DateTime.GetDateTimeFormats</codeEntityReference> method.</para>
                <codeReference>DateTime.GetDateTimeFormats#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="M:System.DateTime.GetHashCode">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Returns the hash code for this instance.</para>
        </summary>
        <returnValue>
          <para>A 32-bit signed integer hash code.</para>
        </returnValue>
      </dduexml>
    </member>
    <member name="M:System.DateTime.GetTypeCode">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Returns the <codeEntityReference autoUpgrade="true">T:System.TypeCode</codeEntityReference> for value type <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>.</para>
        </summary>
        <returnValue>
          <para>The enumerated constant, <codeEntityReference qualifyHint="true" autoUpgrade="true">F:System.TypeCode.DateTime</codeEntityReference>.</para>
        </returnValue>
      </dduexml>
    </member>
    <member name="M:System.DateTime.IsDaylightSavingTime">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Indicates whether this instance of <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> is within the Daylight Saving Time range for the current time zone.</para>
        </summary>
        <returnValue>
          <para>
            <languageKeyword>true</languageKeyword> if <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> is <codeEntityReference autoUpgrade="true">F:System.DateTimeKind.Local</codeEntityReference> or <codeEntityReference autoUpgrade="true">F:System.DateTimeKind.Unspecified</codeEntityReference> and the value of this instance of <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> is within the Daylight Saving Time range for the current time zone. <languageKeyword>false</languageKeyword> if <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> is <codeEntityReference autoUpgrade="true">F:System.DateTimeKind.Utc</codeEntityReference>.</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="M:System.DateTime.IsLeapYear(System.Int32)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Returns an indication whether the specified year is a leap year.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>year</parameterReference>
            <content>
              <para>A 4-digit year. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>
            <languageKeyword>true</languageKeyword> if <parameterReference>year</parameterReference> is a leap year; otherwise, <languageKeyword>false</languageKeyword>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentOutOfRangeException</codeEntityReference>
            <content>
              <para>
                <parameterReference>year</parameterReference> is less than 1 or greater than 9999.</para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>
              <parameterReference>year</parameterReference> is specified as a 4-digit base 10 number; for example, 1996.</para>
          </content>
        </remarks>
      </dduexml>
    </member>
    <member name="M:System.DateTime.op_Addition(System.DateTime,System.TimeSpan)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <equivalentCodeEntity>
          <codeEntityReference>M:System.DateTime.Add(System.TimeSpan)</codeEntityReference>
          <content>
          </content>
        </equivalentCodeEntity>
        <summary>
          <para>Adds a specified time interval to a specified date and time, yielding a new date and time.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>t</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.TimeSpan</codeEntityReference>. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> that is the sum of the values of <parameterReference>d</parameterReference> and <parameterReference>t</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentOutOfRangeException</codeEntityReference>
            <content>
              <para>The resulting <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> is less than <codeEntityReference autoUpgrade="true">F:System.DateTime.MinValue</codeEntityReference> or greater than <codeEntityReference autoUpgrade="true">F:System.DateTime.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates the addition operator.</para>
                <codeReference>DateTime Operators#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.TimeSpan</codeEntityReference>
          <codeEntityReference autoUpgrade="true">P:System.DateTime.Ticks</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.op_Equality(System.DateTime,System.DateTime)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <equivalentCodeEntity>
          <codeEntityReference>M:System.DateTime.Equals(System.Object)</codeEntityReference>
          <content>
          </content>
        </equivalentCodeEntity>
        <summary>
          <para>Determines whether two specified instances of <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> are equal.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d1</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>d2</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>
            <languageKeyword>true</languageKeyword> if <parameterReference>d1</parameterReference> and <parameterReference>d2</parameterReference> represent the same date and time; otherwise, <languageKeyword>false</languageKeyword>.</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates the equality operator.</para>
                <codeReference>DateTime Operators#2</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Boolean</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.op_GreaterThan(System.DateTime,System.DateTime)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <equivalentCodeEntity>
          <codeEntityReference>M:System.DateTime.Compare(System.DateTime,System.DateTime)</codeEntityReference>
          <content>
          </content>
        </equivalentCodeEntity>
        <summary>
          <para>Determines whether one specified <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> is greater than another specified <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>t1</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>t2</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>
            <languageKeyword>true</languageKeyword> if <parameterReference>t1</parameterReference> is greater than <parameterReference>t2</parameterReference>; otherwise, <languageKeyword>false</languageKeyword>.</para>
        </returnValue>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Boolean</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.op_GreaterThanOrEqual(System.DateTime,System.DateTime)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <equivalentCodeEntity>
          <codeEntityReference>M:System.DateTime.Compare(System.DateTime,System.DateTime)</codeEntityReference>
          <content>
          </content>
        </equivalentCodeEntity>
        <summary>
          <para>Determines whether one specified <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> is greater than or equal to another specified <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>t1</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>t2</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>
            <languageKeyword>true</languageKeyword> if <parameterReference>t1</parameterReference> is greater than or equal to <parameterReference>t2</parameterReference>; otherwise, <languageKeyword>false</languageKeyword>.</para>
        </returnValue>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Boolean</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.op_Inequality(System.DateTime,System.DateTime)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <equivalentCodeEntity>
          <codeEntityReference>M:System.DateTime.Equals(System.Object)</codeEntityReference>
          <content>
          </content>
        </equivalentCodeEntity>
        <summary>
          <para>Determines whether two specified instances of <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> are not equal.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d1</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>d2</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>
            <languageKeyword>true</languageKeyword> if <parameterReference>d1</parameterReference> and <parameterReference>d2</parameterReference> do not represent the same date and time; otherwise, <languageKeyword>false</languageKeyword>.</para>
        </returnValue>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Boolean</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.op_LessThan(System.DateTime,System.DateTime)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <equivalentCodeEntity>
          <codeEntityReference>M:System.DateTime.Compare(System.DateTime,System.DateTime)</codeEntityReference>
          <content>
          </content>
        </equivalentCodeEntity>
        <summary>
          <para>Determines whether one specified <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> is less than another specified <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>t1</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>t2</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>
            <languageKeyword>true</languageKeyword> if <parameterReference>t1</parameterReference> is less than <parameterReference>t2</parameterReference>; otherwise, <languageKeyword>false</languageKeyword>.</para>
        </returnValue>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Boolean</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.op_LessThanOrEqual(System.DateTime,System.DateTime)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <equivalentCodeEntity>
          <codeEntityReference>M:System.DateTime.Compare(System.DateTime,System.DateTime)</codeEntityReference>
          <content>
          </content>
        </equivalentCodeEntity>
        <summary>
          <para>Determines whether one specified <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> is less than or equal to another specified <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>t1</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>t2</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>
            <languageKeyword>true</languageKeyword> if <parameterReference>t1</parameterReference> is less than or equal to <parameterReference>t2</parameterReference>; otherwise, <languageKeyword>false</languageKeyword>.</para>
        </returnValue>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Boolean</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="Overload:System.DateTime.op_Subtraction">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Subtracts a specified <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> or <codeEntityReference autoUpgrade="true">T:System.TimeSpan</codeEntityReference> from a specified <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>.</para>
        </summary>
      </dduexml>
    </member>
    <member name="M:System.DateTime.op_Subtraction(System.DateTime,System.DateTime)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <equivalentCodeEntity>
          <codeEntityReference>M:System.DateTime.Subtract(System.DateTime)</codeEntityReference>
          <content>
          </content>
        </equivalentCodeEntity>
        <summary>
          <para>Subtracts a specified date and time from another specified date and time, yielding a time interval.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d1</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> (the minuend). </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>d2</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> (the subtrahend). </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.TimeSpan</codeEntityReference> that is the time interval between <parameterReference>d1</parameterReference> and <parameterReference>d2</parameterReference>; that is, <parameterReference>d1</parameterReference> minus <parameterReference>d2</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentOutOfRangeException</codeEntityReference>
            <content>
              <para>The resulting <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> is less than <codeEntityReference autoUpgrade="true">F:System.DateTime.MinValue</codeEntityReference> or greater than <codeEntityReference autoUpgrade="true">F:System.DateTime.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>Before subtracting <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> objects, insure that the objects represent times in the same time zone. Otherwise, the result will include the difference between time zones.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates the <codeEntityReference autoUpgrade="true">M:System.DateTime.Subtract(System.DateTime)</codeEntityReference> method and operator.</para>
                <codeReference>DateTime.Subtraction#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">P:System.DateTime.Ticks</codeEntityReference>
        </relatedTopics>
      <overload>
        <summary>
          <para>Subtracts a specified <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> or <codeEntityReference autoUpgrade="true">T:System.TimeSpan</codeEntityReference> from a specified <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>.</para>
        </summary>
      </overload>
</dduexml>
    </member>
    <member name="M:System.DateTime.op_Subtraction(System.DateTime,System.TimeSpan)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <equivalentCodeEntity>
          <codeEntityReference>M:System.DateTime.Subtract(System.DateTime)</codeEntityReference>
          <content>
          </content>
        </equivalentCodeEntity>
        <summary>
          <para>Subtracts a specified time interval from a specified date and time, yielding a new date and time.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>d</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>t</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.TimeSpan</codeEntityReference>. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> whose value is the value of <parameterReference>d</parameterReference> minus the value of <parameterReference>t</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentOutOfRangeException</codeEntityReference>
            <content>
              <para>The resulting <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> is less than <codeEntityReference autoUpgrade="true">F:System.DateTime.MinValue</codeEntityReference> or greater than <codeEntityReference autoUpgrade="true">F:System.DateTime.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>This method subtracts the ticks value of <parameterReference>t</parameterReference> from the ticks value of <parameterReference>d</parameterReference>.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates the <codeEntityReference autoUpgrade="true">M:System.DateTime.Subtract(System.DateTime)</codeEntityReference> method and operator.</para>
                <codeReference>DateTime.Subtraction#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">P:System.DateTime.Ticks</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.TimeSpan</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="Overload:System.DateTime.Parse">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the specified string representation of a date and time to its <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> equivalent.</para>
        </summary>
      </dduexml>
    </member>
    <member name="M:System.DateTime.Parse(System.String)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the specified string representation of a date and time to its <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> equivalent.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>s</parameterReference>
            <content>
              <para>A string containing a date and time to convert. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> equivalent to the date and time contained in <parameterReference>s</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentNullException</codeEntityReference>
            <content>
              <para>
                <parameterReference>s</parameterReference> is <languageKeyword>null</languageKeyword>. </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.FormatException</codeEntityReference>
            <content>
              <para>
                <parameterReference>s</parameterReference> does not contain a valid string representation of a date and time. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The string <parameterReference>s</parameterReference> is parsed using the formatting information in a <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference> initialized for the current culture.</para>
            <para>This method attempts to parse <parameterReference>s</parameterReference> completely and avoid throwing <codeEntityReference autoUpgrade="true">T:System.FormatException</codeEntityReference>. It ignores unrecognized data if possible and fills in missing month, day, and year information with the current time. If <parameterReference>s</parameterReference> contains only a date and no time, this method assumes 12:00 midnight. Any leading, inner, or trailing white space character in <parameterReference>s</parameterReference> is ignored. The date and time can be bracketed with a pair of leading and trailing NUMBER SIGN characters ('#', U+0023), and can be trailed with one or more NULL characters (U+0000).</para>
            <para>The <parameterReference>s</parameterReference> parameter must contain the representation of a date and time in one of the formats described in the <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference> topic.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates the <codeEntityReference autoUpgrade="true">M:System.DateTime.Parse(System.String)</codeEntityReference> method.</para>
                <codeReference>DateTime.Parse#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <link xlink:href="0D1364DA-5B30-4D42-8E6B-03378343343F">[&lt;topic://cpConFormattingOverview&gt;]</link>
          <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.Globalization.CultureInfo</codeEntityReference>
          <codeEntityReference autoUpgrade="true">P:System.Globalization.DateTimeFormatInfo.CurrentInfo</codeEntityReference>
        </relatedTopics>
      <overload>
        <summary>
          <para>Converts the specified string representation of a date and time to its <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> equivalent.</para>
        </summary>
      </overload>
</dduexml>
    </member>
    <member name="M:System.DateTime.Parse(System.String,System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the specified string representation of a date and time to its <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> equivalent using the specified culture-specific format information.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>s</parameterReference>
            <content>
              <para>A string containing a date and time to convert. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>provider</parameterReference>
            <content>
              <para>An <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> that supplies culture-specific format information about <parameterReference>s</parameterReference>. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> equivalent to the date and time contained in <parameterReference>s</parameterReference> as specified by <parameterReference>provider</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentNullException</codeEntityReference>
            <content>
              <para>
                <parameterReference>s</parameterReference> is <languageKeyword>null</languageKeyword>. </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.FormatException</codeEntityReference>
            <content>
              <para>
                <parameterReference>s</parameterReference> does not contain a valid string representation of a date and time. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The string <parameterReference>s</parameterReference> is parsed using the formatting information in a <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference> supplied by <parameterReference>provider</parameterReference>.</para>
            <para>This method attempts to parse <parameterReference>s</parameterReference> completely and avoid throwing <codeEntityReference autoUpgrade="true">T:System.FormatException</codeEntityReference>. It ignores unrecognized data if possible and fills in missing month, day, and year information with the current time. If <parameterReference>s</parameterReference> contains only a date and no time, this method assumes 12:00 midnight. Any leading, inner, or trailing white space character in <parameterReference>s</parameterReference> is ignored. The date and time can be bracketed with a pair of leading and trailing NUMBER SIGN characters ('#', U+0023), and can be trailed with one or more NULL characters (U+0000).</para>
            <para>The <parameterReference>s</parameterReference> parameter must contain the representation of a date and time in one of the formats described in the <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference> topic.</para>
            <para>The <parameterReference>provider</parameterReference> parameter supplies culture-specific date and time formatting information. For example, the names of the days of the week in a particular language, or the preferred presentation order of the month, day, and year. If <parameterReference>provider</parameterReference> is <languageKeyword>null</languageKeyword>, the current culture is used.</para>
          </content>
          <sections>
            <section>
              <title>Parsing Custom Cultures</title>
              <content>
                <para>If you parse a date and time string generated for a custom culture, use the <codeEntityReference autoUpgrade="true">Overload:System.DateTime.ParseExact</codeEntityReference> method instead of the <codeEntityReference autoUpgrade="true">Overload:System.DateTime.Parse</codeEntityReference> method to improve the probability that the parse operation will succeed. A custom culture date and time string can be complicated, and therefore difficult to parse. The <codeEntityReference autoUpgrade="true">Overload:System.DateTime.Parse</codeEntityReference> method attempts to parse a string with several implicit parse patterns, all of which might fail. The <codeEntityReference autoUpgrade="true">Overload:System.DateTime.ParseExact</codeEntityReference> method, in contrast, requires you to explicitly designate one or more exact parse patterns that are likely to succeed. </para>
                <para>For more information about custom cultures, see the <codeEntityReference qualifyHint="true" autoUpgrade="true">T:System.Globalization.CultureAndRegionInfoBuilder</codeEntityReference> class.</para>
              </content>
            </section>
          </sections>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates the <codeEntityReference autoUpgrade="true">M:System.DateTime.Parse(System.String)</codeEntityReference> method.</para>
                <codeReference>DateTime.Parse#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <link xlink:href="0D1364DA-5B30-4D42-8E6B-03378343343F">[&lt;topic://cpConFormattingOverview&gt;]</link>
          <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.Globalization.CultureInfo</codeEntityReference>
          <codeEntityReference autoUpgrade="true">P:System.Globalization.DateTimeFormatInfo.CurrentInfo</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the specified string representation of a date and time to its <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> equivalent using the specified culture-specific format information and formatting style.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>s</parameterReference>
            <content>
              <para>A string containing a date and time to convert. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>provider</parameterReference>
            <content>
              <para>An <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> that supplies culture-specific formatting information about <parameterReference>s</parameterReference>. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>styles</parameterReference>
            <content>
              <para>A bitwise combination of <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeStyles</codeEntityReference> values that indicates the permitted format of <parameterReference>s</parameterReference>. A typical value to specify is <codeEntityReference autoUpgrade="true">F:System.Globalization.DateTimeStyles.None</codeEntityReference>.</para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> equivalent to the date and time contained in <parameterReference>s</parameterReference> as specified by <parameterReference>provider</parameterReference> and <parameterReference>styles</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentNullException</codeEntityReference>
            <content>
              <para>
                <parameterReference>s</parameterReference> is <languageKeyword>null</languageKeyword>. </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.FormatException</codeEntityReference>
            <content>
              <para>
                <parameterReference>s</parameterReference> does not contain a valid string representation of a date and time. </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentException</codeEntityReference>
            <content>
              <para>
                <parameterReference>styles</parameterReference> contains an invalid combination of <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeStyles</codeEntityReference> values. For example, both <codeEntityReference autoUpgrade="true">F:System.Globalization.DateTimeStyles.AssumeLocal</codeEntityReference> and <codeEntityReference autoUpgrade="true">F:System.Globalization.DateTimeStyles.AssumeUniversal</codeEntityReference>.</para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The string <parameterReference>s</parameterReference> is parsed using the formatting information in a <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference> supplied by <parameterReference>provider</parameterReference>.</para>
            <para>This method attempts to ignore unrecognized data and parse <parameterReference>s</parameterReference> completely. If <parameterReference>s</parameterReference> contains a time but no date, the <parameterReference>style</parameterReference> parameter determines whether the current date or a default date is used. If <parameterReference>s</parameterReference> contains a date but no time, 12:00 midnight is used. Any leading, inner, or trailing white space character in <parameterReference>s</parameterReference> is ignored. The date and time can be bracketed with a pair of leading and trailing NUMBER SIGN characters ('#', U+0023), and can be trailed with one or more NULL characters (U+0000).</para>
            <para>The <parameterReference>s</parameterReference> parameter must contain the representation of a date and time in one of the formats described in the <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference> topic.</para>
            <para>The <parameterReference>provider</parameterReference> parameter supplies culture-specific date and time formatting information. For example, the names of the days of the week in a particular language, or the preferred presentation order of the month, day, and year. If <parameterReference>provider</parameterReference> is <languageKeyword>null</languageKeyword>, the current culture is used.</para>
          </content>
          <sections>
            <section>
              <title>Parsing Custom Cultures</title>
              <content>
                <para>If you parse a date and time string generated for a custom culture, use the <codeEntityReference autoUpgrade="true">Overload:System.DateTime.ParseExact</codeEntityReference> method instead of the <codeEntityReference autoUpgrade="true">Overload:System.DateTime.Parse</codeEntityReference> method to improve the probability that the parse operation will succeed. A custom culture date and time string can be complicated, and therefore difficult to parse. The <codeEntityReference autoUpgrade="true">Overload:System.DateTime.Parse</codeEntityReference> method attempts to parse a string with several implicit parse patterns, all of which might fail. The <codeEntityReference autoUpgrade="true">Overload:System.DateTime.ParseExact</codeEntityReference> method, in contrast, requires you to explicitly designate one or more exact parse patterns that are likely to succeed. </para>
                <para>For more information about custom cultures, see the <codeEntityReference qualifyHint="true" autoUpgrade="true">T:System.Globalization.CultureAndRegionInfoBuilder</codeEntityReference> class.</para>
              </content>
            </section>
          </sections>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates the <codeEntityReference autoUpgrade="true">M:System.DateTime.Parse(System.String)</codeEntityReference> method.</para>
                <codeReference>DateTime.Parse#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <link xlink:href="0D1364DA-5B30-4D42-8E6B-03378343343F">[&lt;topic://cpConFormattingOverview&gt;]</link>
          <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.Globalization.CultureInfo</codeEntityReference>
          <codeEntityReference autoUpgrade="true">P:System.Globalization.DateTimeFormatInfo.CurrentInfo</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="Overload:System.DateTime.ParseExact">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the specified string representation of a date and time to its <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> equivalent. The format of the string representation must match a specified format exactly.</para>
        </summary>
      </dduexml>
    </member>
    <member name="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the specified string representation of a date and time to its <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> equivalent using the specified format and culture-specific format information. The format of the string representation must match the specified format exactly.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>s</parameterReference>
            <content>
              <para>A string containing a date and time to convert. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>format</parameterReference>
            <content>
              <para>The expected format of <parameterReference>s</parameterReference>. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>provider</parameterReference>
            <content>
              <para>An <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> that supplies culture-specific format information about <parameterReference>s</parameterReference>. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> equivalent to the date and time contained in <parameterReference>s</parameterReference> as specified by <parameterReference>format</parameterReference> and <parameterReference>provider</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentNullException</codeEntityReference>
            <content>
              <para>
                <parameterReference>s</parameterReference> or <parameterReference>format</parameterReference> is <languageKeyword>null</languageKeyword>. </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.FormatException</codeEntityReference>
            <content>
              <para>
                <parameterReference>s</parameterReference> or <parameterReference>format</parameterReference> is an empty string. </para>
              <para>-or- </para>
              <para>
                <parameterReference>s</parameterReference> does not contain a date and time that corresponds to the pattern specified in <parameterReference>format</parameterReference>. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The <parameterReference>s</parameterReference> parameter contains the date and time to parse. If the <parameterReference>s</parameterReference> parameter contains only a time and no date, the current date is used. If the <parameterReference>s</parameterReference> parameter contains only a date and no time, midnight (00:00:00) is used. The <parameterReference>s</parameterReference> parameter cannot contain leading, inner, or trailing white space characters.</para>
            <para>The <parameterReference>format</parameterReference> parameter contains a pattern that corresponds to the expected format of the <parameterReference>s</parameterReference> parameter. The pattern in the <parameterReference>format</parameterReference> parameter consists of one or more custom format specifiers from the <link xlink:href="98b374e3-0cc2-4c78-ab44-efb671d71984">Custom DateTime Format Strings</link> table, or a single standard format specifier, which identifies a predefined pattern, from the <link xlink:href="bb79761a-ca08-44ee-b142-b06b3e2fc22b">Standard DateTime Format Strings</link> table. </para>
            <para>If you do not use date or time separators in a custom format pattern, use the invariant culture for the <parameterReference>provider</parameterReference> parameter and the widest form of each custom format specifier. For example, if you want to specify hours in the pattern, specify the wider form, "HH", instead of the narrower form, "H".</para>
            <para>The <parameterReference>provider</parameterReference> parameter supplies culture-specific date and time formatting information, such as the names of the days of the week in a particular language, or the preferred presentation order of the month, day, and year. The <parameterReference>format</parameterReference> parameter is typically a culture represented by a <codeEntityReference autoUpgrade="true">T:System.Globalization.CultureInfo</codeEntityReference> object. If <parameterReference>provider</parameterReference> is <languageKeyword>null</languageKeyword>, the current culture is used.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates the <codeEntityReference autoUpgrade="true">M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)</codeEntityReference> method.</para>
                <codeReference>DateTime.Parse#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <link xlink:href="0D1364DA-5B30-4D42-8E6B-03378343343F">[&lt;topic://cpConFormattingOverview&gt;]</link>
          <link xlink:href="A316261D-41ED-49E4-9E4F-E695B982FE3E">[&lt;topic://cpConDateTimeFormatStrings&gt;]</link>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.Parse(System.String)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.Globalization.CultureInfo</codeEntityReference>
          <codeEntityReference autoUpgrade="true">P:System.Globalization.DateTimeFormatInfo.CurrentInfo</codeEntityReference>
        </relatedTopics>
      <overload>
        <summary>
          <para>Converts the specified string representation of a date and time to its <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> equivalent. The format of the string representation must match a specified format exactly.</para>
        </summary>
      </overload>
</dduexml>
    </member>
    <member name="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the specified string representation of a date and time to its <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>s</parameterReference>
            <content>
              <para>A string containing a date and time to convert. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>format</parameterReference>
            <content>
              <para>The expected format of <parameterReference>s</parameterReference>. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>provider</parameterReference>
            <content>
              <para>An <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> that supplies culture-specific formatting information about <parameterReference>s</parameterReference>. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>style</parameterReference>
            <content>
              <para>A bitwise combination of <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeStyles</codeEntityReference> values that indicates the permitted format of <parameterReference>s</parameterReference>. A typical value to specify is <codeEntityReference autoUpgrade="true">F:System.Globalization.DateTimeStyles.None</codeEntityReference>.</para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> equivalent to the date and time contained in <parameterReference>s</parameterReference> as specified by <parameterReference>format</parameterReference>, <parameterReference>provider</parameterReference>, and <parameterReference>style</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentNullException</codeEntityReference>
            <content>
              <para>
                <parameterReference>s</parameterReference> or <parameterReference>format</parameterReference> is <languageKeyword>null</languageKeyword>. </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.FormatException</codeEntityReference>
            <content>
              <para>
                <parameterReference>s</parameterReference> or <parameterReference>format</parameterReference> is an empty string. </para>
              <para>-or- </para>
              <para>
                <parameterReference>s</parameterReference> does not contain a date and time that corresponds to the pattern specified in <parameterReference>format</parameterReference>. </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentException</codeEntityReference>
            <content>
              <para>
                <parameterReference>style</parameterReference> contains an invalid combination of <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeStyles</codeEntityReference> values. For example, both <codeEntityReference autoUpgrade="true">F:System.Globalization.DateTimeStyles.AssumeLocal</codeEntityReference> and <codeEntityReference autoUpgrade="true">F:System.Globalization.DateTimeStyles.AssumeUniversal</codeEntityReference>.</para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The <parameterReference>s</parameterReference> parameter contains the date and time to parse. If the <parameterReference>s</parameterReference> parameter contains only a time and no date, the <parameterReference>style</parameterReference> parameter determines whether the current date or a default date is used. If the <parameterReference>s</parameterReference> parameter contains only a date and no time, midnight (00:00:00) is used. The <parameterReference>style</parameterReference> parameter also determines whether the <parameterReference>s</parameterReference> parameter can contain leading, inner, or trailing white space characters.</para>
            <para>The <parameterReference>format</parameterReference> parameter contains a pattern that corresponds to the expected format of the <parameterReference>s</parameterReference> parameter. The pattern in the <parameterReference>format</parameterReference> parameter consists of one or more custom format specifiers from the <link xlink:href="98b374e3-0cc2-4c78-ab44-efb671d71984">Custom DateTime Format Strings</link> table, or a single standard format specifier, which identifies a predefined pattern, from the <link xlink:href="bb79761a-ca08-44ee-b142-b06b3e2fc22b">Standard DateTime Format Strings</link> table. </para>
            <para>If you do not use date or time separators in a custom format pattern, use the invariant culture for the <parameterReference>provider</parameterReference> parameter and the widest form of each custom format specifier. For example, if you want to specify hours in the pattern, specify the wider form, "HH", instead of the narrower form, "H".</para>
            <para>The <parameterReference>provider</parameterReference> parameter supplies culture-specific date and time formatting information, such as the names of the days of the week in a particular language, or the preferred presentation order of the month, day, and year. The <parameterReference>format</parameterReference> parameter is typically a culture represented by a <codeEntityReference autoUpgrade="true">T:System.Globalization.CultureInfo</codeEntityReference> object. If <parameterReference>provider</parameterReference> is <languageKeyword>null</languageKeyword>, the current culture is used.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates the <codeEntityReference autoUpgrade="true">M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)</codeEntityReference> method.</para>
                <codeReference>DateTime.Parse#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <link xlink:href="0D1364DA-5B30-4D42-8E6B-03378343343F">[&lt;topic://cpConFormattingOverview&gt;]</link>
          <link xlink:href="A316261D-41ED-49E4-9E4F-E695B982FE3E">[&lt;topic://cpConDateTimeFormatStrings&gt;]</link>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.Parse(System.String)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.Globalization.CultureInfo</codeEntityReference>
          <codeEntityReference autoUpgrade="true">P:System.Globalization.DateTimeFormatInfo.CurrentInfo</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the specified string representation of a date and time to its <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> equivalent using the specified array of formats, culture-specific format information, and style. The format of the string representation must match at least one of the specified formats exactly.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>s</parameterReference>
            <content>
              <para>A string containing one or more dates and times to convert. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>formats</parameterReference>
            <content>
              <para>An array of expected formats of <parameterReference>s</parameterReference>. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>provider</parameterReference>
            <content>
              <para>An <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> that supplies culture-specific format information about <parameterReference>s</parameterReference>. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>style</parameterReference>
            <content>
              <para>A bitwise combination of <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeStyles</codeEntityReference> values that indicates the permitted format of <parameterReference>s</parameterReference>. A typical value to specify is <codeEntityReference autoUpgrade="true">F:System.Globalization.DateTimeStyles.None</codeEntityReference>.</para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> equivalent to the date and time contained in <parameterReference>s</parameterReference> as specified by <parameterReference>formats</parameterReference>, <parameterReference>provider</parameterReference>, and <parameterReference>style</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentNullException</codeEntityReference>
            <content>
              <para>
                <parameterReference>s</parameterReference> or <parameterReference>formats</parameterReference> is <languageKeyword>null</languageKeyword>. </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.FormatException</codeEntityReference>
            <content>
              <para>
                <parameterReference>s</parameterReference> is an empty string. </para>
              <para>-or- </para>
              <para>an element of <parameterReference>formats</parameterReference> is an empty string. </para>
              <para>-or- </para>
              <para>
                <parameterReference>s</parameterReference> does not contain a date and time that corresponds to any element of <parameterReference>formats</parameterReference>. </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentException</codeEntityReference>
            <content>
              <para>
                <parameterReference>style</parameterReference> contains an invalid combination of <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeStyles</codeEntityReference> values. For example, both <codeEntityReference autoUpgrade="true">F:System.Globalization.DateTimeStyles.AssumeLocal</codeEntityReference> and <codeEntityReference autoUpgrade="true">F:System.Globalization.DateTimeStyles.AssumeUniversal</codeEntityReference>.</para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The <parameterReference>s</parameterReference> parameter contains the date and time to parse. If the <parameterReference>s</parameterReference> parameter contains only a time and no date, the <parameterReference>style</parameterReference> parameter determines whether the current date or a default date is used. If the <parameterReference>s</parameterReference> parameter contains only a date and no time, midnight (00:00:00) is used. The <parameterReference>style</parameterReference> parameter also determines whether the <parameterReference>s</parameterReference> parameter can contain leading, inner, or trailing white space characters.</para>
            <para>The <parameterReference>format</parameterReference> parameter contains an array of patterns that correspond to the expected format of the <parameterReference>s</parameterReference> parameter. The patterns in the <parameterReference>format</parameterReference> parameter consists of one or more custom format specifiers from the <link xlink:href="98b374e3-0cc2-4c78-ab44-efb671d71984">Custom DateTime Format Strings</link> table, or a single standard format specifier, which identifies a predefined pattern, from the <link xlink:href="bb79761a-ca08-44ee-b142-b06b3e2fc22b">Standard DateTime Format Strings</link> table. </para>
            <para>If you do not use date or time separators in a custom format pattern, use the invariant culture for the <parameterReference>provider</parameterReference> parameter and the widest form of each custom format specifier. For example, if you want to specify hours in the pattern, specify the wider form, "HH", instead of the narrower form, "H".</para>
            <para>The <parameterReference>provider</parameterReference> parameter supplies culture-specific date and time formatting information, such as the names of the days of the week in a particular language, or the preferred presentation order of the month, day, and year. The <parameterReference>format</parameterReference> parameter is typically a culture represented by a <codeEntityReference autoUpgrade="true">T:System.Globalization.CultureInfo</codeEntityReference> object. If <parameterReference>provider</parameterReference> is <languageKeyword>null</languageKeyword>, the current culture is used.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates the <codeEntityReference autoUpgrade="true">M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)</codeEntityReference> method.</para>
                <codeReference>DateTime.Parse#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <link xlink:href="0D1364DA-5B30-4D42-8E6B-03378343343F">[&lt;topic://cpConFormattingOverview&gt;]</link>
          <link xlink:href="A316261D-41ED-49E4-9E4F-E695B982FE3E">[&lt;topic://cpConDateTimeFormatStrings&gt;]</link>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.Parse(System.String)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.Globalization.CultureInfo</codeEntityReference>
          <codeEntityReference autoUpgrade="true">P:System.Globalization.DateTimeFormatInfo.CurrentInfo</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Creates a new <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object that represents the same time as the specified <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>, but is designated in either local time, Coordinated Universal Time (UTC), or neither, as indicated by the specified <codeEntityReference autoUpgrade="true">T:System.DateTimeKind</codeEntityReference> value.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object.</para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>kind</parameterReference>
            <content>
              <para>One of the <codeEntityReference autoUpgrade="true">T:System.DateTimeKind</codeEntityReference> values.</para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A new <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object consisting of the same time represented by the <parameterReference>value</parameterReference> parameter and the <codeEntityReference autoUpgrade="true">T:System.DateTimeKind</codeEntityReference> value specified by the <parameterReference>kind</parameterReference> parameter.</para>
        </returnValue>
        <remarks>
          <content>
            <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object consists of a Kind field that indicates whether the time value is based on local time, Coordinated Universal Time (UTC), or neither, and a Ticks field that contains a time value measured in 100-nanosecond ticks. The <codeEntityReference autoUpgrade="true">M:System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)</codeEntityReference> method creates a new <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object using the specified <parameterReference>kind</parameterReference> parameter and the original time value<parameterReference>.</parameterReference></para>
            <para>The <codeEntityReference autoUpgrade="true">M:System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)</codeEntityReference> method is useful in interoperability scenarios where you receive a <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object with an unspecified Kind field, but you can determine by independent means that the Ticks field represents local time or UTC.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example uses the <codeEntityReference autoUpgrade="true">M:System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)</codeEntityReference> method to demonstrate how the <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> property influences the <codeEntityReference autoUpgrade="true">M:System.DateTime.ToLocalTime</codeEntityReference> and <codeEntityReference autoUpgrade="true">M:System.DateTime.ToUniversalTime</codeEntityReference> conversion methods.</para>
                <codeReference>DateTime.Kind_Suite#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <link xlink:href="f5a72143-c268-4dff-a019-974ad940e17d">COM Interoperability in .NET Framework Applications</link>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="Overload:System.DateTime.Subtract">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Subtracts the specified time or duration from this instance.</para>
        </summary>
      </dduexml>
    </member>
    <member name="M:System.DateTime.Subtract(System.DateTime)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Subtracts the specified date and time from this instance.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>An instance of <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.TimeSpan</codeEntityReference> interval equal to the date and time represented by this instance minus the date and time represented by <parameterReference>value</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentOutOfRangeException</codeEntityReference>
            <content>
              <para>The result is less than <codeEntityReference autoUpgrade="true">F:System.DateTime.MinValue</codeEntityReference> or greater than <codeEntityReference autoUpgrade="true">F:System.DateTime.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>This method does not change the value of this <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object. Instead, a new <codeEntityReference autoUpgrade="true">T:System.TimeSpan</codeEntityReference> is returned whose value is the result of this operation.</para>
            <para>Before subtracting <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> objects, insure that the objects represent times in the same time zone. Otherwise, the result will include the difference between time zones.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates the <codeEntityReference autoUpgrade="true">M:System.DateTime.Subtract(System.DateTime)</codeEntityReference> method and operator.</para>
                <codeReference>DateTime.Subtraction#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      <overload>
        <summary>
          <para>Subtracts the specified time or duration from this instance.</para>
        </summary>
      </overload>
</dduexml>
    </member>
    <member name="M:System.DateTime.Subtract(System.TimeSpan)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Subtracts the specified duration from this instance.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>value</parameterReference>
            <content>
              <para>An instance of <codeEntityReference autoUpgrade="true">T:System.TimeSpan</codeEntityReference>. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> equal to the date and time represented by this instance minus the time interval represented by <parameterReference>value</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentOutOfRangeException</codeEntityReference>
            <content>
              <para>The result is less than <codeEntityReference autoUpgrade="true">F:System.DateTime.MinValue</codeEntityReference> or greater than <codeEntityReference autoUpgrade="true">F:System.DateTime.MaxValue</codeEntityReference>. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>This method does not change the value of this <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>. Instead, a new <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> is returned whose value is the result of this operation.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates the <codeEntityReference autoUpgrade="true">M:System.DateTime.Subtract(System.DateTime)</codeEntityReference> method and operator.</para>
                <codeReference>DateTime.Subtraction#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.TimeSpan</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.System.IConvertible.ToBoolean(System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <internalOnly>
        </internalOnly>
        <summary>
          <para>This conversion is not supported. Attempting to do so throws an <codeEntityReference autoUpgrade="true">T:System.InvalidCastException</codeEntityReference>.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>provider</parameterReference>
            <content>
              <para>An object that implements the <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> interface. (This parameter is not used; specify <languageKeyword>null</languageKeyword>.)</para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The return value for this member is not used.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.InvalidCastException</codeEntityReference>
            <content>
              <para>This conversion is not supported for the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> type.</para>
            </content>
          </exception>
        </exceptions>
      </dduexml>
    </member>
    <member name="M:System.DateTime.System.IConvertible.ToByte(System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <internalOnly>
        </internalOnly>
        <summary>
          <para>This conversion is not supported. Attempting to do so throws an <codeEntityReference autoUpgrade="true">T:System.InvalidCastException</codeEntityReference>.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>provider</parameterReference>
            <content>
              <para>An object that implements the <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> interface. (This parameter is not used; specify <languageKeyword>null</languageKeyword>.)</para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The return value for this member is not used.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.InvalidCastException</codeEntityReference>
            <content>
              <para>This conversion is not supported for the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> type.</para>
            </content>
          </exception>
        </exceptions>
      </dduexml>
    </member>
    <member name="M:System.DateTime.System.IConvertible.ToChar(System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <internalOnly>
        </internalOnly>
        <summary>
          <para>This conversion is not supported. Attempting to do so throws an <codeEntityReference autoUpgrade="true">T:System.InvalidCastException</codeEntityReference>.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>provider</parameterReference>
            <content>
              <para>An object that implements the <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> interface. (This parameter is not used; specify <languageKeyword>null</languageKeyword>.)</para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The return value for this member is not used.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.InvalidCastException</codeEntityReference>
            <content>
              <para>This conversion is not supported for the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> type.</para>
            </content>
          </exception>
        </exceptions>
      </dduexml>
    </member>
    <member name="M:System.DateTime.System.IConvertible.ToDateTime(System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <internalOnly>
        </internalOnly>
        <summary>
          <para>Returns the current <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>provider</parameterReference>
            <content>
              <para>An object that implements the <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> interface. (This parameter is not used; specify <languageKeyword>null</languageKeyword>.)</para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The current <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object.</para>
        </returnValue>
      </dduexml>
    </member>
    <member name="M:System.DateTime.System.IConvertible.ToDecimal(System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <internalOnly>
        </internalOnly>
        <summary>
          <para>This conversion is not supported. Attempting to do so throws an <codeEntityReference autoUpgrade="true">T:System.InvalidCastException</codeEntityReference>.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>provider</parameterReference>
            <content>
              <para>An object that implements the <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> interface or <languageKeyword>null</languageKeyword>.</para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The return value for this member is not used.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.InvalidCastException</codeEntityReference>
            <content>
              <para>This conversion is not supported for the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> type.</para>
            </content>
          </exception>
        </exceptions>
      </dduexml>
    </member>
    <member name="M:System.DateTime.System.IConvertible.ToDouble(System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <internalOnly>
        </internalOnly>
        <summary>
          <para>This conversion is not supported. Attempting to do so throws an <codeEntityReference autoUpgrade="true">T:System.InvalidCastException</codeEntityReference>.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>provider</parameterReference>
            <content>
              <para>An object that implements the <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> interface. (This parameter is not used; specify <languageKeyword>null</languageKeyword>.)</para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The return value for this member is not used.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.InvalidCastException</codeEntityReference>
            <content>
              <para>This conversion is not supported for the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> type.</para>
            </content>
          </exception>
        </exceptions>
      </dduexml>
    </member>
    <member name="M:System.DateTime.System.IConvertible.ToInt16(System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <internalOnly>
        </internalOnly>
        <summary>
          <para>This conversion is not supported. Attempting to do so throws an <codeEntityReference autoUpgrade="true">T:System.InvalidCastException</codeEntityReference>.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>provider</parameterReference>
            <content>
              <para>An object that implements the <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> interface. (This parameter is not used; specify <languageKeyword>null</languageKeyword>.)</para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The return value for this member is not used.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.InvalidCastException</codeEntityReference>
            <content>
              <para>This conversion is not supported for the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> type.</para>
            </content>
          </exception>
        </exceptions>
      </dduexml>
    </member>
    <member name="M:System.DateTime.System.IConvertible.ToInt32(System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <internalOnly>
        </internalOnly>
        <summary>
          <para>This conversion is not supported. Attempting to do so throws an <codeEntityReference autoUpgrade="true">T:System.InvalidCastException</codeEntityReference>.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>provider</parameterReference>
            <content>
              <para>An object that implements the <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> interface. (This parameter is not used; specify <languageKeyword>null</languageKeyword>.)</para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The return value for this member is not used.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.InvalidCastException</codeEntityReference>
            <content>
              <para>This conversion is not supported for the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> type.</para>
            </content>
          </exception>
        </exceptions>
      </dduexml>
    </member>
    <member name="M:System.DateTime.System.IConvertible.ToInt64(System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <internalOnly>
        </internalOnly>
        <summary>
          <para>This conversion is not supported. Attempting to do so throws an <codeEntityReference autoUpgrade="true">T:System.InvalidCastException</codeEntityReference>.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>provider</parameterReference>
            <content>
              <para>An object that implements the <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> interface. (This parameter is not used; specify <languageKeyword>null</languageKeyword>.)</para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The return value for this member is not used.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.InvalidCastException</codeEntityReference>
            <content>
              <para>This conversion is not supported for the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> type.</para>
            </content>
          </exception>
        </exceptions>
      </dduexml>
    </member>
    <member name="M:System.DateTime.System.IConvertible.ToSByte(System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <internalOnly>
        </internalOnly>
        <summary>
          <para>This conversion is not supported. Attempting to do so throws an <codeEntityReference autoUpgrade="true">T:System.InvalidCastException</codeEntityReference>.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>provider</parameterReference>
            <content>
              <para>An object that implements the <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> interface. (This parameter is not used; specify <languageKeyword>null</languageKeyword>.)</para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The return value for this member is not used.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.InvalidCastException</codeEntityReference>
            <content>
              <para>This conversion is not supported for the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> type.</para>
            </content>
          </exception>
        </exceptions>
      </dduexml>
    </member>
    <member name="M:System.DateTime.System.IConvertible.ToSingle(System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <internalOnly>
        </internalOnly>
        <summary>
          <para>This conversion is not supported. Attempting to do so throws an <codeEntityReference autoUpgrade="true">T:System.InvalidCastException</codeEntityReference>.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>provider</parameterReference>
            <content>
              <para>An object that implements the <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> interface. (This parameter is not used; specify <languageKeyword>null</languageKeyword>.)</para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The return value for this member is not used.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.InvalidCastException</codeEntityReference>
            <content>
              <para>This conversion is not supported for the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> type.</para>
            </content>
          </exception>
        </exceptions>
      </dduexml>
    </member>
    <member name="M:System.DateTime.System.IConvertible.ToType(System.Type,System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <internalOnly>
        </internalOnly>
        <summary>
          <para>Converts the current <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object to an object of a specified type.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>type</parameterReference>
            <content>
              <para>The desired type. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>provider</parameterReference>
            <content>
              <para>An object that implements the <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> interface. (This parameter is not used; specify <languageKeyword>null</languageKeyword>.)</para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>An object of the type specified by the <parameterReference>type</parameterReference> parameter, with a value equivalent to the current <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentNullException</codeEntityReference>
            <content>
              <para>
                <parameterReference>type</parameterReference> is <languageKeyword>null</languageKeyword>. </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.InvalidCastException</codeEntityReference>
            <content>
              <para>This conversion is not supported for the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> type.</para>
            </content>
          </exception>
        </exceptions>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Convert</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.System.IConvertible.ToUInt16(System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <internalOnly>
        </internalOnly>
        <summary>
          <para>This conversion is not supported. Attempting to do so throws an <codeEntityReference autoUpgrade="true">T:System.InvalidCastException</codeEntityReference>.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>provider</parameterReference>
            <content>
              <para>An object that implements the <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> interface. (This parameter is not used; specify <languageKeyword>null</languageKeyword>.)</para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The return value for this member is not used.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.InvalidCastException</codeEntityReference>
            <content>
              <para>This conversion is not supported for the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> type.</para>
            </content>
          </exception>
        </exceptions>
      </dduexml>
    </member>
    <member name="M:System.DateTime.System.IConvertible.ToUInt32(System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <internalOnly>
        </internalOnly>
        <summary>
          <para>This conversion is not supported. Attempting to do so throws an <codeEntityReference autoUpgrade="true">T:System.InvalidCastException</codeEntityReference>.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>provider</parameterReference>
            <content>
              <para>An object that implements the <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> interface. (This parameter is not used; specify <languageKeyword>null</languageKeyword>.)</para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The return value for this member is not used.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.InvalidCastException</codeEntityReference>
            <content>
              <para>This conversion is not supported for the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> type.</para>
            </content>
          </exception>
        </exceptions>
      </dduexml>
    </member>
    <member name="M:System.DateTime.System.IConvertible.ToUInt64(System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <internalOnly>
        </internalOnly>
        <summary>
          <para>This conversion is not supported. Attempting to do so throws an <codeEntityReference autoUpgrade="true">T:System.InvalidCastException</codeEntityReference>.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>provider</parameterReference>
            <content>
              <para>An object that implements the <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> interface. (This parameter is not used; specify <languageKeyword>null</languageKeyword>.)</para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The return value for this member is not used.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.InvalidCastException</codeEntityReference>
            <content>
              <para>This conversion is not supported for the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> type.</para>
            </content>
          </exception>
        </exceptions>
      </dduexml>
    </member>
    <member name="M:System.DateTime.ToBinary">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Serializes the current <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object to a 64-bit binary value that subsequently can be used to recreate the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object.</para>
        </summary>
        <returnValue>
          <para>A 64-bit signed integer that encodes the <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> and <codeEntityReference autoUpgrade="true">P:System.DateTime.Ticks</codeEntityReference> properties. </para>
        </returnValue>
        <remarks>
          <content>
            <para>Use the <codeEntityReference autoUpgrade="true">M:System.DateTime.ToBinary</codeEntityReference> method to convert the value of the current <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object to a binary value. Subsequently, use the binary value and the <codeEntityReference autoUpgrade="true">M:System.DateTime.FromBinary(System.Int64)</codeEntityReference> method to recreate the original <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object.</para>
          </content>
          <sections>
            <section>
              <title>Local Time Adjustment</title>
              <content>
                <para>A local time, which is a Coordinated Universal Time adjusted to the local time zone, is represented by a <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> structure whose <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> property has the value <codeEntityReference autoUpgrade="true">F:System.DateTimeKind.Local</codeEntityReference>. If a local <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object is serialized in one time zone by the <codeEntityReference autoUpgrade="true">M:System.DateTime.ToBinary</codeEntityReference> method and deserialized in a different time zone by the <codeEntityReference autoUpgrade="true">M:System.DateTime.FromBinary(System.Int64)</codeEntityReference> method, the local time represented by the resulting <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object is automatically adjusted to the second time zone.</para>
                <para>For example, consider a <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object that represents a local time of 3 P.M. An application executing in a western time zone uses the <codeEntityReference autoUpgrade="true">M:System.DateTime.ToBinary</codeEntityReference> method to convert that <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object to a binary value, then another application executing in a time zone three hours east of the original one uses the <codeEntityReference autoUpgrade="true">M:System.DateTime.FromBinary(System.Int64)</codeEntityReference> method to convert the binary value to a new <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object. The value of the new <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object is 6 P.M., which represents the same point in time as the original 3 P.M. value, but is adjusted to local time in the eastern time zone. </para>
              </content>
            </section>
            <section>
              <title>Version Considerations</title>
              <content>
                <para>Starting with the .NET Framework version 2.0, a <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> structure consists of a private Kind field, which indicates whether the specified time value is based on local time, Coordinated Universal Time (UTC), or neither, and a private Ticks field, which contains the number of 100-nanosecond ticks that specify a date and time. The Ticks field can be accessed with the <codeEntityReference autoUpgrade="true">P:System.DateTime.Ticks</codeEntityReference> property and the Kind field can be accessed with the <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> property. </para>
                <para>Prior to the .NET Framework 2.0, if you serialized a <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object manually instead of using a serialization interface such as <codeEntityReference qualifyHint="true" autoUpgrade="true">T:System.Runtime.Serialization.ISerializable</codeEntityReference>, you only needed to serialize the Ticks data in the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> structure. Starting with version 2.0, you must also serialize the Kind data. </para>
              </content>
            </section>
          </sections>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.FromBinary(System.Int64)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.ToFileTime">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the value of the current <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object to a Windows file time.</para>
        </summary>
        <returnValue>
          <para>The value of the current <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object expressed as a Windows file time.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentOutOfRangeException</codeEntityReference>
            <content>
              <para>The resulting file time would represent a date and time before 12:00 midnight January 1, 1601 C.E. UTC. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file. </para>
            <para>Previous versions of the <codeEntityReference autoUpgrade="true">M:System.DateTime.ToFileTime</codeEntityReference> method assume the current <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object is a local time. Starting with the.NET Framework version 2.0, the <codeEntityReference autoUpgrade="true">M:System.DateTime.ToFileTime</codeEntityReference> method uses the <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> property to determine whether the current <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object is a local time, a UTC time, or an unspecified kind of time which is treated as a local time. </para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates the <codeEntityReference autoUpgrade="true">M:System.DateTime.ToFileTime</codeEntityReference> method.</para>
                <codeReference>DateTime.ToFileTime#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.ToFileTimeUtc</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.Int64</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.ToUniversalTime</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.TimeZone.GetUtcOffset(System.DateTime)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.ToFileTimeUtc">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the value of the current <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object to a Windows file time.</para>
        </summary>
        <returnValue>
          <para>The value of the current <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object expressed as a Windows file time.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentOutOfRangeException</codeEntityReference>
            <content>
              <para>The resulting file time would represent a date and time before 12:00 midnight January 1, 1601 C.E. UTC. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file. </para>
            <para>Prior versions of the <codeEntityReference autoUpgrade="true">M:System.DateTime.ToFileTimeUtc</codeEntityReference> method assume the current <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object is a UTC time. Starting with the.NET Framework version 2.0, the <codeEntityReference autoUpgrade="true">M:System.DateTime.ToFileTimeUtc</codeEntityReference> method uses the <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> property to determine whether the current <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object is a local time, a UTC time, or an unspecified kind of time which is treated as a UTC time. </para>
          </content>
        </remarks>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.ToFileTime</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.Int64</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.ToUniversalTime</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.TimeZone.GetUtcOffset(System.DateTime)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.ToLocalTime">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the value of the current <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object to local time.</para>
        </summary>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object whose <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> property is <codeEntityReference autoUpgrade="true">F:System.DateTimeKind.Local</codeEntityReference>, and whose value is the local time equivalent to the value of the current <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object, or <codeEntityReference autoUpgrade="true">F:System.DateTime.MaxValue</codeEntityReference> if the converted value is too large to be represented by a <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object, or <codeEntityReference autoUpgrade="true">F:System.DateTime.MinValue</codeEntityReference> if the converted value is too small to be represented as a <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object.</para>
        </returnValue>
        <remarks>
          <content>
            <para>The local time is equal to the UTC time plus the UTC offset. For more information about the UTC offset, see <codeEntityReference qualifyHint="true" autoUpgrade="true">M:System.TimeZone.GetUtcOffset(System.DateTime)</codeEntityReference>. The conversion also takes into account the daylight saving time rule that applies to the time represented by the current <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object. </para>
            <para>Starting with the .NET Framework version 2.0, the value returned by the <codeEntityReference autoUpgrade="true">M:System.DateTime.ToLocalTime</codeEntityReference> method is determined by the <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> property of the current <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object. The following table describes the possible results. </para>
            <table>
              <tableHeader>
                <row>
                  <entry>
                    <para>Kind</para>
                  </entry>
                  <entry>
                    <para>Results</para>
                  </entry>
                </row>
              </tableHeader>
              <row>
                <entry>
                  <para>
                    <codeEntityReference autoUpgrade="true">F:System.DateTimeKind.Utc</codeEntityReference>
                  </para>
                </entry>
                <entry>
                  <para>This instance of <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> is converted to local time.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <codeEntityReference autoUpgrade="true">F:System.DateTimeKind.Local</codeEntityReference>
                  </para>
                </entry>
                <entry>
                  <para>No conversion is performed.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <codeEntityReference autoUpgrade="true">F:System.DateTimeKind.Unspecified</codeEntityReference>
                  </para>
                </entry>
                <entry>
                  <para>This instance of <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> is assumed to be a UTC time, and the conversion is performed as if <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> were <codeEntityReference autoUpgrade="true">F:System.DateTimeKind.Utc</codeEntityReference>.</para>
                </entry>
              </row>
            </table>
            <para>The value returned by the conversion is a <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> whose <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> property always returns <codeEntityReference autoUpgrade="true">F:System.DateTimeKind.Local</codeEntityReference>. Consequently, a valid result is returned even if <codeEntityReference autoUpgrade="true">M:System.DateTime.ToLocalTime</codeEntityReference> is applied repeatedly to the same <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference>.</para>
            <para>This method always uses the local time zone when making calculations.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates the <codeEntityReference autoUpgrade="true">M:System.DateTime.ToLocalTime</codeEntityReference> method.</para>
                <codeReference>DateTime.ToLocalTime ToUniversalTime#1</codeReference>
                <para>The following code example uses the <codeEntityReference autoUpgrade="true">M:System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)</codeEntityReference> method to demonstrate how the <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> property influences the <codeEntityReference autoUpgrade="true">M:System.DateTime.ToLocalTime</codeEntityReference> and <codeEntityReference autoUpgrade="true">M:System.DateTime.ToUniversalTime</codeEntityReference> conversion methods.</para>
                <codeReference>DateTime.Kind_Suite#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.TimeZone</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.TimeZone.GetUtcOffset(System.DateTime)</codeEntityReference>
          <codeEntityReference qualifyHint="true" autoUpgrade="true">M:System.TimeZone.GetDaylightChanges(System.Int32)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.ToUniversalTime</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.ToLongDateString">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the value of this instance to its equivalent long date string representation.</para>
        </summary>
        <returnValue>
          <para>A string containing the name of the day of the week, the name of the month, the numeric day of the month, and the year equivalent to the date value of this instance.</para>
        </returnValue>
        <remarks>
          <content>
            <para>The value of this instance is formatted using the long date format character, 'D'. The return value is identical to the value returned by <codeEntityReference autoUpgrade="true">M:System.DateTime.ToString</codeEntityReference> ("D", null).</para>
            <para>For more information about format characters, format patterns, and the output they produce, see the <link xlink:href="0D1364DA-5B30-4D42-8E6B-03378343343F">[&lt;topic://cpConFormattingOverview&gt;]</link> topic. For more information about changing the format pattern associated with a format character see the <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference> class.</para>
            <para>This method uses formatting information derived from the current culture. For more information about the current culture, see the <codeEntityReference autoUpgrade="true">P:System.Globalization.CultureInfo.CurrentCulture</codeEntityReference> class. You can use the <codeEntityReference qualifyHint="true" autoUpgrade="true">P:System.Globalization.CultureInfo.DateTimeFormat</codeEntityReference> property to obtain the <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference> for the current culture.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates <codeEntityReference autoUpgrade="true">M:System.DateTime.ToLongDateString</codeEntityReference>.</para>
                <codeReference>System.DateTime.ToLongFormats#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <link xlink:href="0D1364DA-5B30-4D42-8E6B-03378343343F">[&lt;topic://cpConFormattingOverview&gt;]</link>
          <codeEntityReference autoUpgrade="true">T:System.Globalization.CultureInfo</codeEntityReference>
          <codeEntityReference autoUpgrade="true">P:System.Globalization.CultureInfo.DateTimeFormat</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.ToString</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.ToLongTimeString">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the value of this instance to its equivalent long time string representation.</para>
        </summary>
        <returnValue>
          <para>A string containing the name of the day of the week, the name of the month, the numeric day of the hours, minutes, and seconds equivalent to the time value of this instance.</para>
        </returnValue>
        <remarks>
          <content>
            <para>The value of this instance is formatted using the long time format character, 'T'. The return value is identical to the value returned by <codeEntityReference autoUpgrade="true">M:System.DateTime.ToString</codeEntityReference> ("T", null).</para>
            <para>For more information about format characters, format patterns, and the output they produce, see the <link xlink:href="0D1364DA-5B30-4D42-8E6B-03378343343F">[&lt;topic://cpConFormattingOverview&gt;]</link> topic. For more information about changing the format pattern associated with a format character see the <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference> class.</para>
            <para>This method uses formatting information derived from the current culture. For more information about the current culture, see the <codeEntityReference autoUpgrade="true">P:System.Globalization.CultureInfo.CurrentCulture</codeEntityReference> class. You can use the <codeEntityReference qualifyHint="true" autoUpgrade="true">P:System.Globalization.CultureInfo.DateTimeFormat</codeEntityReference> property to obtain the <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference> for the current culture.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates <codeEntityReference autoUpgrade="true">M:System.DateTime.ToLongTimeString</codeEntityReference>.</para>
                <codeReference>System.DateTime.ToLongFormats#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.Globalization.CultureInfo</codeEntityReference>
          <codeEntityReference autoUpgrade="true">P:System.Globalization.CultureInfo.DateTimeFormat</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.Globalization.Calendar</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.ToString</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.ToOADate">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the value of this instance to the equivalent OLE Automation date.</para>
        </summary>
        <returnValue>
          <para>A double-precision floating-point number that contains an OLE Automation date equivalent to the value of this instance.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.OverflowException</codeEntityReference>
            <content>
              <para>The value of this instance cannot be represented as an OLE Automation Date. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>An OLE Automation date is implemented as a floating-point number whose value is the number of days from midnight, 30 December 1899. For example, midnight, 31 December 1899 is represented by 1.0; 6 A.M., 1 January 1900 is represented by 2.25; midnight, 29 December 1899 is represented by -1.0; and 6 A.M., 29 December 1899 is represented by -1.25.</para>
            <para>The base OLE Automation Date is midnight, 30 December 1899. The maximum OLE Automation Date is the same as <codeEntityReference autoUpgrade="true">F:System.DateTime.MaxValue</codeEntityReference>, the last moment of 31 December 9999.</para>
            <para>For more information about OLE Automation, see the <externalLink><linkText>MSDN Library</linkText><linkUri>http://go.microsoft.com/fwlink/?linkid=37118</linkUri></externalLink>.</para>
          </content>
        </remarks>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Double</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.FromOADate(System.Double)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.ToShortDateString">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the value of this instance to its equivalent short date string representation.</para>
        </summary>
        <returnValue>
          <para>A string containing the numeric month, the numeric day of the month, and the year equivalent to the date value of this instance.</para>
        </returnValue>
        <remarks>
          <content>
            <para>The value of this instance is formatted using the short date format character, 'd'. The return value is identical to the value returned by <codeEntityReference autoUpgrade="true">M:System.DateTime.ToString</codeEntityReference> ("d", null).</para>
            <para>For more information about format characters, format patterns, and the output they produce, see the <link xlink:href="0D1364DA-5B30-4D42-8E6B-03378343343F">[&lt;topic://cpConFormattingOverview&gt;]</link> topic. For more information about changing the format pattern associated with a format character see the <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference> class.</para>
            <para>This method uses formatting information derived from the current culture. For more information about the current culture, see the <codeEntityReference autoUpgrade="true">P:System.Globalization.CultureInfo.CurrentCulture</codeEntityReference> class. You can use the <codeEntityReference qualifyHint="true" autoUpgrade="true">P:System.Globalization.CultureInfo.DateTimeFormat</codeEntityReference> property to obtain the <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference> for the current culture.</para>
          </content>
        </remarks>
        <relatedTopics>
          <link xlink:href="0D1364DA-5B30-4D42-8E6B-03378343343F">[&lt;topic://cpConFormattingOverview&gt;]</link>
          <codeEntityReference autoUpgrade="true">T:System.Globalization.CultureInfo</codeEntityReference>
          <codeEntityReference autoUpgrade="true">P:System.Globalization.CultureInfo.DateTimeFormat</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.ToString</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.ToShortTimeString">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the value of this instance to its equivalent short time string representation.</para>
        </summary>
        <returnValue>
          <para>A string containing the name of the day of the week, the name of the month, the numeric day of the hours, minutes, and seconds equivalent to the time value of this instance.</para>
        </returnValue>
        <remarks>
          <content>
            <para>The value of this instance is formatted using the short time format character, 't'. The return value is identical to the value returned by <codeEntityReference autoUpgrade="true">M:System.DateTime.ToString</codeEntityReference> ("t", null).</para>
            <para>For more information about format characters, format patterns, and the output they produce, see the <link xlink:href="0D1364DA-5B30-4D42-8E6B-03378343343F">[&lt;topic://cpConFormattingOverview&gt;]</link> topic. For more information about changing the format pattern associated with a format character see the <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference> class.</para>
            <para>This method uses formatting information derived from the current culture. For more information about the current culture, see the <codeEntityReference autoUpgrade="true">P:System.Globalization.CultureInfo.CurrentCulture</codeEntityReference> class. You can use the <codeEntityReference qualifyHint="true" autoUpgrade="true">P:System.Globalization.CultureInfo.DateTimeFormat</codeEntityReference> property to obtain the <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference> for the current culture.</para>
          </content>
        </remarks>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.Globalization.CultureInfo</codeEntityReference>
          <codeEntityReference autoUpgrade="true">P:System.Globalization.CultureInfo.DateTimeFormat</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.Globalization.Calendar</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.ToString</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="Overload:System.DateTime.ToString">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the value of this instance to its equivalent string representation.</para>
        </summary>
      </dduexml>
    </member>
    <member name="M:System.DateTime.ToString">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the value of this instance to its equivalent string representation.</para>
        </summary>
        <returnValue>
          <para>A string representation of value of this instance.</para>
        </returnValue>
        <remarks>
          <content>
            <para>The value of this instance is formatted using the general format specifier, 'G', as described in the <link xlink:href="0D1364DA-5B30-4D42-8E6B-03378343343F">[&lt;topic://cpConFormattingOverview&gt;]</link> topic. The return value is identical to the value returned by <codeEntityReference autoUpgrade="true">M:System.DateTime.ToString</codeEntityReference> ("G", null).</para>
            <para>This method uses formatting information derived from the current culture. For more information, see <codeEntityReference autoUpgrade="true">P:System.Globalization.CultureInfo.CurrentCulture</codeEntityReference>.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates different ways of formatting a <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> value using the invariant <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference>.</para>
                <codeReference>Classic DateTime.ToString2 Example#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.Globalization.CultureInfo</codeEntityReference>
        </relatedTopics>
      <overload>
        <summary>
          <para>Converts the value of this instance to its equivalent string representation.</para>
        </summary>
      </overload>
</dduexml>
    </member>
    <member name="M:System.DateTime.ToString(System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the value of this instance to its equivalent string representation using the specified culture-specific format information.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>provider</parameterReference>
            <content>
              <para>An <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> that supplies culture-specific formatting information. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A string representation of value of this instance as specified by <parameterReference>provider</parameterReference>.</para>
        </returnValue>
        <remarks>
          <content>
            <para>This instance is formatted with the general format specifier, 'G', as described in the <link xlink:href="0D1364DA-5B30-4D42-8E6B-03378343343F">[&lt;topic://cpConFormattingOverview&gt;]</link> topic. The return value is identical to the value returned by <codeEntityReference autoUpgrade="true">M:System.DateTime.ToString</codeEntityReference> ("G", null).</para>
            <para>The <parameterReference>provider</parameterReference> parameter is typically a <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference> object or an instance of <codeEntityReference autoUpgrade="true">T:System.Globalization.CultureInfo</codeEntityReference>, which contains a <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference> object. If <parameterReference>provider</parameterReference> is <languageKeyword>null</languageKeyword>, the <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference> associated with the current culture is used. For more information, see <codeEntityReference qualifyHint="true" autoUpgrade="true">P:System.Globalization.CultureInfo.CurrentCulture</codeEntityReference>.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates different ways of formatting a <languageKeyword>DateTime</languageKeyword> value using the invariant <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference>.</para>
                <codeReference>Classic DateTime.ToString2 Example#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.Globalization.CultureInfo</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.ToString(System.String)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the value of this instance to its equivalent string representation using the specified format.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>format</parameterReference>
            <content>
              <para>A format string. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A string representation of value of this instance as specified by <parameterReference>format</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.FormatException</codeEntityReference>
            <content>
              <para>The length of <parameterReference>format</parameterReference> is 1, and it is not one of the format specifier characters defined for <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference>.</para>
              <para>-or- </para>
              <para>
                <parameterReference>format</parameterReference> does not contain a valid custom format pattern. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The <parameterReference>format</parameterReference> parameter should contain either a format specifier character or a custom format pattern. For more information, see the summary page for <codeEntityReference qualifyHint="true" autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference>.</para>
            <para>If <parameterReference>format</parameterReference> is <languageKeyword>null</languageKeyword> or an empty string, the general format specifier, 'G', is used.</para>
            <para>This method uses formatting information derived from the current culture. For more information, see <codeEntityReference autoUpgrade="true">P:System.Globalization.CultureInfo.CurrentCulture</codeEntityReference>.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates different ways of formatting a <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> value using the invariant <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference>.</para>
                <codeReference>Classic DateTime.ToString2 Example#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <link xlink:href="0D1364DA-5B30-4D42-8E6B-03378343343F">[&lt;topic://cpConFormattingOverview&gt;]</link>
          <link xlink:href="A316261D-41ED-49E4-9E4F-E695B982FE3E">[&lt;topic://cpConDateTimeFormatStrings&gt;]</link>
          <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.Globalization.CultureInfo</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.ToString(System.String,System.IFormatProvider)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the value of this instance to its equivalent string representation using the specified format and culture-specific format information.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>format</parameterReference>
            <content>
              <para>A format string. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>provider</parameterReference>
            <content>
              <para>An <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> that supplies culture-specific formatting information. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A string representation of value of this instance as specified by <parameterReference>format</parameterReference> and <parameterReference>provider</parameterReference>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.FormatException</codeEntityReference>
            <content>
              <para>The length of <parameterReference>format</parameterReference> is 1, and it is not one of the format specifier characters defined for <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference>.</para>
              <para>-or- </para>
              <para>
                <parameterReference>format</parameterReference> does not contain a valid custom format pattern. </para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The <parameterReference>format</parameterReference> parameter can contain either a format specifier character or a custom format pattern. For more information, see the summary page for <codeEntityReference qualifyHint="true" autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference>.</para>
            <para>If <parameterReference>format</parameterReference> is <languageKeyword>null</languageKeyword> or an empty string (""), the standard format specifier, 'G', is used.</para>
            <para>The <parameterReference>provider</parameterReference> parameter is typically a <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference> object or an instance of <codeEntityReference autoUpgrade="true">T:System.Globalization.CultureInfo</codeEntityReference>, which contains a <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference> object. If <parameterReference>provider</parameterReference> is <languageKeyword>null</languageKeyword>, the <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference> associated with the current culture is used. For more information, see <codeEntityReference qualifyHint="true" autoUpgrade="true">P:System.Globalization.CultureInfo.CurrentCulture</codeEntityReference>.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates different ways of formatting a <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> value using the invariant <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference>.</para>
                <codeReference>Classic DateTime.ToString2 Example#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <link xlink:href="0D1364DA-5B30-4D42-8E6B-03378343343F">[&lt;topic://cpConFormattingOverview&gt;]</link>
          <link xlink:href="A316261D-41ED-49E4-9E4F-E695B982FE3E">[&lt;topic://cpConDateTimeFormatStrings&gt;]</link>
          <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.Globalization.CultureInfo</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.ToUniversalTime">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the value of the current <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object to Coordinated Universal Time (UTC).</para>
        </summary>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object whose <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> property is <codeEntityReference autoUpgrade="true">F:System.DateTimeKind.Utc</codeEntityReference>, and whose value is the UTC equivalent to the value of the current <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object, or <codeEntityReference autoUpgrade="true">F:System.DateTime.MaxValue</codeEntityReference> if the converted value is too large to be represented by a <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object, or <codeEntityReference autoUpgrade="true">F:System.DateTime.MinValue</codeEntityReference> if the converted value is too small to be represented by a <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object.</para>
        </returnValue>
        <remarks>
          <content>
            <para>The UTC time is equal to the local time minus the UTC offset. For more information about the UTC offset, see <codeEntityReference qualifyHint="true" autoUpgrade="true">M:System.TimeZone.GetUtcOffset(System.DateTime)</codeEntityReference>. The conversion also takes into account the daylight saving time rule that applies to the time represented by the current <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object. </para>
            <para>Starting with the .NET Framework version 2.0, the value returned by the <codeEntityReference autoUpgrade="true">M:System.DateTime.ToUniversalTime</codeEntityReference> method is determined by the <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> property of the current <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object. The following table describes the possible results. </para>
            <table>
              <tableHeader>
                <row>
                  <entry>
                    <para>Kind</para>
                  </entry>
                  <entry>
                    <para>Results</para>
                  </entry>
                </row>
              </tableHeader>
              <row>
                <entry>
                  <para>
                    <codeEntityReference autoUpgrade="true">F:System.DateTimeKind.Utc</codeEntityReference>
                  </para>
                </entry>
                <entry>
                  <para>No conversion is performed.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <codeEntityReference autoUpgrade="true">F:System.DateTimeKind.Local</codeEntityReference>
                  </para>
                </entry>
                <entry>
                  <para>The current <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object is converted to UTC.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <codeEntityReference autoUpgrade="true">F:System.DateTimeKind.Unspecified</codeEntityReference>
                  </para>
                </entry>
                <entry>
                  <para>The current <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object is assumed to be a local time, and the conversion is performed as if <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> were <codeEntityReference autoUpgrade="true">F:System.DateTimeKind.Local</codeEntityReference>.</para>
                </entry>
              </row>
            </table>
            <para>The value returned by this conversion is a <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object whose <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> property is <codeEntityReference autoUpgrade="true">F:System.DateTimeKind.Utc</codeEntityReference>. Consequently, a valid result is returned even if <codeEntityReference autoUpgrade="true">M:System.DateTime.ToUniversalTime</codeEntityReference> is applied repeatedly to the same <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object.</para>
            <para>This method always uses the local time zone when making calculations.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates the <codeEntityReference autoUpgrade="true">M:System.DateTime.ToUniversalTime</codeEntityReference> method.</para>
                <codeReference>DateTime.ToLocalTime ToUniversalTime#1</codeReference>
                <para>The following code example uses the <codeEntityReference autoUpgrade="true">M:System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)</codeEntityReference> method to demonstrate how the <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> property influences the <codeEntityReference autoUpgrade="true">M:System.DateTime.ToLocalTime</codeEntityReference> and <codeEntityReference autoUpgrade="true">M:System.DateTime.ToUniversalTime</codeEntityReference> conversion methods.</para>
                <codeReference>DateTime.Kind_Suite#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.ToLocalTime</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="Overload:System.DateTime.TryParse">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the specified string representation of a date and time to its <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> equivalent.</para>
        </summary>
      </dduexml>
    </member>
    <member name="M:System.DateTime.TryParse(System.String,System.DateTime@)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the specified string representation of a date and time to its <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> equivalent.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>s</parameterReference>
            <content>
              <para>A string containing a date and time to convert. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>result</parameterReference>
            <content>
              <para>When this method returns, contains the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> value equivalent to the date and time contained in <parameterReference>s</parameterReference>, if the conversion succeeded, or <codeEntityReference autoUpgrade="true">F:System.DateTime.MinValue</codeEntityReference> if the conversion failed. The conversion fails if the <parameterReference>s</parameterReference> parameter is <languageKeyword>null</languageKeyword>, or does not contain a valid string representation of a date and time. This parameter is passed uninitialized. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>
            <languageKeyword>true</languageKeyword> if the <parameterReference>s</parameterReference> parameter was converted successfully; otherwise, <languageKeyword>false</languageKeyword>.</para>
        </returnValue>
        <remarks>
          <content>
            <para>The <codeEntityReference autoUpgrade="true">M:System.DateTime.TryParse(System.String,System.DateTime@)</codeEntityReference> method is similar to the <codeEntityReference autoUpgrade="true">M:System.DateTime.Parse(System.String)</codeEntityReference> method, except that this method does not throw an exception if the conversion fails.</para>
            <para>The string <parameterReference>s</parameterReference> is parsed using the formatting information in a <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference> object initialized for the current culture.</para>
            <para>This method attempts to ignore unrecognized data and parse <parameterReference>s</parameterReference> completely. It ignores unrecognized data if possible and fills in missing month, day, and year information with the current time. If <parameterReference>s</parameterReference> contains only a date and no time, this method assumes the time is 12:00 midnight. Any leading, inner, or trailing white space character in <parameterReference>s</parameterReference> is ignored. The date and time can be bracketed with a pair of leading and trailing NUMBER SIGN characters ('#', U+0023), and can be trailed with one or more NULL characters (U+0000).</para>
            <para>The <parameterReference>s</parameterReference> parameter must contain the representation of a date and time in one of the formats described in the <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference> class.</para>
          </content>
        </remarks>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.Parse(System.String)</codeEntityReference>
          <link xlink:href="0D1364DA-5B30-4D42-8E6B-03378343343F">[&lt;topic://cpConFormattingOverview&gt;]</link>
          <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.Globalization.CultureInfo</codeEntityReference>
          <codeEntityReference autoUpgrade="true">P:System.Globalization.DateTimeFormatInfo.CurrentInfo</codeEntityReference>
        </relatedTopics>
      <overload>
        <summary>
          <para>Converts the specified string representation of a date and time to its <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> equivalent.</para>
        </summary>
      </overload>
</dduexml>
    </member>
    <member name="M:System.DateTime.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the specified string representation of a date and time to its <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> equivalent using the specified culture-specific format information and formatting style.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>s</parameterReference>
            <content>
              <para>A string containing a date and time to convert. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>provider</parameterReference>
            <content>
              <para>An <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> object that supplies culture-specific formatting information about <parameterReference>s</parameterReference>. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>styles</parameterReference>
            <content>
              <para>A bitwise combination of <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeStyles</codeEntityReference> values that indicates the permitted format of <parameterReference>s</parameterReference>. A typical value to specify is <codeEntityReference autoUpgrade="true">F:System.Globalization.DateTimeStyles.None</codeEntityReference>.</para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>result</parameterReference>
            <content>
              <para>When this method returns, contains the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> value equivalent to the date and time contained in <parameterReference>s</parameterReference>, if the conversion succeeded, or <codeEntityReference autoUpgrade="true">F:System.DateTime.MinValue</codeEntityReference> if the conversion failed. The conversion fails if the <parameterReference>s</parameterReference> parameter is <languageKeyword>null</languageKeyword>, or does not contain a valid string representation of a date and time. This parameter is passed uninitialized. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>
            <languageKeyword>true</languageKeyword> if the <parameterReference>s</parameterReference> parameter was converted successfully; otherwise, <languageKeyword>false</languageKeyword>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentException</codeEntityReference>
            <content>
              <para>
                <parameterReference>styles</parameterReference> is not a valid <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeStyles</codeEntityReference> value.</para>
              <para>-or-</para>
              <para>
                <parameterReference>styles</parameterReference> contains an invalid combination of <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeStyles</codeEntityReference> values (for example, both <codeEntityReference autoUpgrade="true">F:System.Globalization.DateTimeStyles.AssumeLocal</codeEntityReference> and <codeEntityReference autoUpgrade="true">F:System.Globalization.DateTimeStyles.AssumeUniversal</codeEntityReference>).</para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The <codeEntityReference autoUpgrade="true">M:System.DateTime.TryParse(System.String,System.DateTime@)</codeEntityReference> method is similar to the <codeEntityReference autoUpgrade="true">M:System.DateTime.Parse(System.String)</codeEntityReference> method, except that this method does not throw an exception if the conversion fails.</para>
            <para>The string <parameterReference>s</parameterReference> is parsed using the formatting information in a <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference> object supplied by the <parameterReference>provider</parameterReference> parameter.</para>
            <para>This method attempts to ignore unrecognized data and parse <parameterReference>s</parameterReference> completely. If <parameterReference>s</parameterReference> contains a time but no date, the <parameterReference>style</parameterReference> parameter determines whether the current date or a default date is used. If <parameterReference>s</parameterReference> contains a date but no time, 12:00 midnight is used as the default time. Any leading, inner, or trailing white space character in <parameterReference>s</parameterReference> is ignored. The date and time can be bracketed with a pair of leading and trailing NUMBER SIGN characters ('#', U+0023), and can be trailed with one or more NULL characters (U+0000). The <parameterReference>s</parameterReference> parameter must contain the representation of a date and time in one of the formats described in the <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeFormatInfo</codeEntityReference> class.</para>
            <para>The <parameterReference>provider</parameterReference> parameter supplies culture-specific date and time formatting information. For example, it might supply the names of the days of the week in a particular language, or the preferred order of presentation for the month, day, and year. If <parameterReference>provider</parameterReference> is <languageKeyword>null</languageKeyword>, the current culture is used.</para>
          </content>
          <sections>
            <section>
              <title>Parsing Custom Cultures</title>
              <content>
                <para>If you parse a date and time string generated for a custom culture, use the <codeEntityReference autoUpgrade="true">Overload:System.DateTime.TryParseExact</codeEntityReference> method instead of the <codeEntityReference autoUpgrade="true">Overload:System.DateTime.TryParse</codeEntityReference> method to improve the probability that the parse operation will succeed. A custom culture date and time string can be complicated and difficult to parse. The <codeEntityReference autoUpgrade="true">Overload:System.DateTime.TryParse</codeEntityReference> method attempts to parse a string with several implicit parse patterns, all of which might fail. In contrast, the <codeEntityReference autoUpgrade="true">Overload:System.DateTime.TryParseExact</codeEntityReference> method  requires you to explicitly designate one or more exact parse patterns that are likely to succeed. </para>
                <para>For more information about custom cultures, see the <codeEntityReference qualifyHint="true" autoUpgrade="true">T:System.Globalization.CultureAndRegionInfoBuilder</codeEntityReference> class.</para>
              </content>
            </section>
          </sections>
        </remarks>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.Parse(System.String)</codeEntityReference>
          <link xlink:href="0D1364DA-5B30-4D42-8E6B-03378343343F">[&lt;topic://cpConFormattingOverview&gt;]</link>
          <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.Globalization.CultureInfo</codeEntityReference>
          <codeEntityReference autoUpgrade="true">P:System.Globalization.DateTimeFormatInfo.CurrentInfo</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="Overload:System.DateTime.TryParseExact">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the specified string representation of a date and time to its <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> equivalent. The format of the string representation must match a specified format exactly.</para>
        </summary>
      </dduexml>
    </member>
    <member name="M:System.DateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the specified string representation of a date and time to its <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>s</parameterReference>
            <content>
              <para>A string containing a date and time to convert. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>format</parameterReference>
            <content>
              <para>The expected format of <parameterReference>s</parameterReference>. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>provider</parameterReference>
            <content>
              <para>An <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> object that supplies culture-specific formatting information about <parameterReference>s</parameterReference>. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>style</parameterReference>
            <content>
              <para>A bitwise combination of one or more <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeStyles</codeEntityReference> values that indicate the permitted format of <parameterReference>s</parameterReference>. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>result</parameterReference>
            <content>
              <para>When this method returns, contains the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> value equivalent to the date and time contained in <parameterReference>s</parameterReference>, if the conversion succeeded, or <codeEntityReference autoUpgrade="true">F:System.DateTime.MinValue</codeEntityReference> if the conversion failed. The conversion fails if either the <parameterReference>s</parameterReference> or <parameterReference>format</parameterReference> parameter is <languageKeyword>null</languageKeyword>, is an empty string, or does not contain a date and time that correspond to the pattern specified in <parameterReference>format</parameterReference>. This parameter is passed uninitialized. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>
            <languageKeyword>true</languageKeyword> if <parameterReference>s</parameterReference> was converted successfully; otherwise, <languageKeyword>false</languageKeyword>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentException</codeEntityReference>
            <content>
              <para>
                <parameterReference>styles</parameterReference> is not a valid <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeStyles</codeEntityReference> value.</para>
              <para>-or-</para>
              <para>
                <parameterReference>styles</parameterReference> contains an invalid combination of <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeStyles</codeEntityReference> values (for example, both <codeEntityReference autoUpgrade="true">F:System.Globalization.DateTimeStyles.AssumeLocal</codeEntityReference> and <codeEntityReference autoUpgrade="true">F:System.Globalization.DateTimeStyles.AssumeUniversal</codeEntityReference>).</para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The <codeEntityReference autoUpgrade="true">M:System.DateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)</codeEntityReference> method is similar to the <codeEntityReference autoUpgrade="true">M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)</codeEntityReference> method, except that this method does not throw an exception if the conversion fails.</para>
            <para>The <parameterReference>s</parameterReference> parameter contains the date and time to parse. If the <parameterReference>s</parameterReference> parameter contains only a time and no date, the <parameterReference>style</parameterReference> parameter determines whether the current date or a default date is used. If the <parameterReference>s</parameterReference> parameter contains only a date and no time, midnight (00:00:00) is used. The <parameterReference>style</parameterReference> parameter also determines whether the <parameterReference>s</parameterReference> parameter can contain leading, inner, or trailing white space characters.</para>
            <para>The <parameterReference>format</parameterReference> parameter contains a pattern that corresponds to the expected format of the <parameterReference>s</parameterReference> parameter. The pattern in the <parameterReference>format</parameterReference> parameter consists of one or more custom format specifiers from the <link xlink:href="98b374e3-0cc2-4c78-ab44-efb671d71984">Custom DateTime Format Strings</link> table, or a single standard format specifier, which identifies a predefined pattern, from the <link xlink:href="bb79761a-ca08-44ee-b142-b06b3e2fc22b">Standard DateTime Format Strings</link> table. </para>
            <para>If you do not use date or time separators in a custom format pattern, use the invariant culture for the <parameterReference>provider</parameterReference> parameter and the widest form of each custom format specifier. For example, if you want to specify hours in the pattern, specify the wider form, "HH", instead of the narrower form, "H".</para>
            <para>The <parameterReference>provider</parameterReference> parameter supplies culture-specific date and time formatting information, such as the names of the days of the week in a particular language, or the preferred presentation order of the month, day, and year. The <parameterReference>format</parameterReference> parameter is typically a culture represented by a <codeEntityReference autoUpgrade="true">T:System.Globalization.CultureInfo</codeEntityReference> object. If <parameterReference>provider</parameterReference> is <languageKeyword>null</languageKeyword>, the current culture is used.</para>
          </content>
        </remarks>
        <relatedTopics>
          <link xlink:href="0D1364DA-5B30-4D42-8E6B-03378343343F">[&lt;topic://cpConFormattingOverview&gt;]</link>
          <link xlink:href="A316261D-41ED-49E4-9E4F-E695B982FE3E">[&lt;topic://cpConDateTimeFormatStrings&gt;]</link>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.Parse(System.String)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.Globalization.CultureInfo</codeEntityReference>
          <codeEntityReference autoUpgrade="true">P:System.Globalization.DateTimeFormatInfo.CurrentInfo</codeEntityReference>
        </relatedTopics>
      <overload>
        <summary>
          <para>Converts the specified string representation of a date and time to its <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> equivalent. The format of the string representation must match a specified format exactly.</para>
        </summary>
      </overload>
</dduexml>
    </member>
    <member name="M:System.DateTime.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Converts the specified string representation of a date and time to its <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> equivalent using the specified array of formats, culture-specific format information, and style. The format of the string representation must match at least one of the specified formats exactly.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>s</parameterReference>
            <content>
              <para>A string containing one or more dates and times to convert. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>formats</parameterReference>
            <content>
              <para>An array of expected formats of <parameterReference>s</parameterReference>. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>provider</parameterReference>
            <content>
              <para>An <codeEntityReference autoUpgrade="true">T:System.IFormatProvider</codeEntityReference> object that supplies culture-specific format information about <parameterReference>s</parameterReference>. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>style</parameterReference>
            <content>
              <para>A bitwise combination of <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeStyles</codeEntityReference> values that indicates the permitted format of <parameterReference>s</parameterReference>. A typical value to specify is <codeEntityReference autoUpgrade="true">F:System.Globalization.DateTimeStyles.None</codeEntityReference>.</para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>result</parameterReference>
            <content>
              <para>When this method returns, contains the <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> value equivalent to the date and time contained in <parameterReference>s</parameterReference>, if the conversion succeeded, or <codeEntityReference autoUpgrade="true">F:System.DateTime.MinValue</codeEntityReference> if the conversion failed. The conversion fails if <parameterReference>s</parameterReference> or <parameterReference>formats</parameterReference> is <languageKeyword>null</languageKeyword>, <parameterReference>s</parameterReference> or an element of <parameterReference>formats</parameterReference> is an empty string, or the format of <parameterReference>s</parameterReference> is not exactly as specified by at least one of the format patterns in <parameterReference>formats</parameterReference>. This parameter is passed uninitialized. </para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>
            <languageKeyword>true</languageKeyword> if the <parameterReference>s</parameterReference> parameter was converted successfully; otherwise, <languageKeyword>false</languageKeyword>.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentException</codeEntityReference>
            <content>
              <para>
                <parameterReference>styles</parameterReference> is not a valid <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeStyles</codeEntityReference> value.</para>
              <para>-or-</para>
              <para>
                <parameterReference>styles</parameterReference> contains an invalid combination of <codeEntityReference autoUpgrade="true">T:System.Globalization.DateTimeStyles</codeEntityReference> values (for example, both <codeEntityReference autoUpgrade="true">F:System.Globalization.DateTimeStyles.AssumeLocal</codeEntityReference> and <codeEntityReference autoUpgrade="true">F:System.Globalization.DateTimeStyles.AssumeUniversal</codeEntityReference>).</para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The <codeEntityReference autoUpgrade="true">M:System.DateTime.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)</codeEntityReference> method is like the <codeEntityReference autoUpgrade="true">M:System.DateTime.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)</codeEntityReference> method, except this method does not throw an exception if the conversion fails.</para>
            <para>The <parameterReference>s</parameterReference> parameter contains the date and time to parse. If the <parameterReference>s</parameterReference> parameter contains only a time and no date, the <parameterReference>style</parameterReference> parameter determines whether the current date or a default date is used. If the <parameterReference>s</parameterReference> parameter contains only a date and no time, midnight (00:00:00) is used. The <parameterReference>style</parameterReference> parameter also determines whether the <parameterReference>s</parameterReference> parameter can contain leading, inner, or trailing white space characters.</para>
            <para>The <parameterReference>format</parameterReference> parameter contains an array of patterns that correspond to the expected format of the <parameterReference>s</parameterReference> parameter. The patterns in the <parameterReference>format</parameterReference> parameter consist of one or more custom format specifiers from the <link xlink:href="98b374e3-0cc2-4c78-ab44-efb671d71984">Custom DateTime Format Strings</link> table, or a single standard format specifier, which identifies a predefined pattern, from the <link xlink:href="bb79761a-ca08-44ee-b142-b06b3e2fc22b">Standard DateTime Format Strings</link> table. </para>
            <para>If you do not use date or time separators in a custom format pattern, use the invariant culture for the <parameterReference>provider</parameterReference> parameter and the widest form of each custom format specifier. For example, if you want to specify hours in the pattern, specify the wider form, "HH", instead of the narrower form, "H".</para>
            <para>The <parameterReference>provider</parameterReference> parameter supplies culture-specific date and time formatting information, such as the names of the days of the week in a particular language, or the preferred presentation order of the month, day, and year. The <parameterReference>format</parameterReference> parameter is typically a culture represented by a <codeEntityReference autoUpgrade="true">T:System.Globalization.CultureInfo</codeEntityReference> object. If <parameterReference>provider</parameterReference> is <languageKeyword>null</languageKeyword>, the current culture is used.</para>
          </content>
        </remarks>
        <relatedTopics>
          <link xlink:href="0D1364DA-5B30-4D42-8E6B-03378343343F">[&lt;topic://cpConFormattingOverview&gt;]</link>
          <link xlink:href="A316261D-41ED-49E4-9E4F-E695B982FE3E">[&lt;topic://cpConDateTimeFormatStrings&gt;]</link>
          <codeEntityReference autoUpgrade="true">M:System.DateTime.Parse(System.String)</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.String</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.Globalization.CultureInfo</codeEntityReference>
          <codeEntityReference autoUpgrade="true">P:System.Globalization.DateTimeFormatInfo.CurrentInfo</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="P:System.DateTime.Date">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Gets the date component of this instance.</para>
        </summary>
        <returnValue>
          <para>A new <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> with the same date as this instance, and the time value set to 12:00:00 midnight (00:00:00).</para>
        </returnValue>
      </dduexml>
    </member>
    <member name="P:System.DateTime.Day">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Gets the day of the month represented by this instance.</para>
        </summary>
        <returnValue>
          <para>The day component, expressed as a value between 1 and 31.</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates the <codeEntityReference autoUpgrade="true">P:System.DateTime.Day</codeEntityReference> property.</para>
                <codeReference>System.DateTime.Minute etc#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="P:System.DateTime.DayOfWeek">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Gets the day of the week represented by this instance.</para>
        </summary>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.DayOfWeek</codeEntityReference> enumerated constant that indicates the day of the week. This property value ranges from zero, indicating Sunday, to six, indicating Saturday.</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates the <codeEntityReference autoUpgrade="true">P:System.DateTime.DayOfWeek</codeEntityReference> property and the <codeEntityReference qualifyHint="true" autoUpgrade="true">T:System.DayOfWeek</codeEntityReference> enumeration.</para>
                <codeReference>DateTime.DayOfWeek#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">P:System.DateTime.Ticks</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.Int32</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="P:System.DateTime.DayOfYear">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Gets the day of the year represented by this instance.</para>
        </summary>
        <returnValue>
          <para>The day of the year, expressed as a value between 1 and 366.</para>
        </returnValue>
      </dduexml>
    </member>
    <member name="P:System.DateTime.Hour">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Gets the hour component of the date represented by this instance.</para>
        </summary>
        <returnValue>
          <para>The hour component, expressed as a value between 0 and 23.</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates the <codeEntityReference autoUpgrade="true">P:System.DateTime.Hour</codeEntityReference> property.</para>
                <codeReference>System.DateTime.Minute etc#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="P:System.DateTime.Kind">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Gets a value that indicates whether the time represented by this instance is based on local time, Coordinated Universal Time (UTC), or neither.</para>
        </summary>
        <returnValue>
          <para>One of the <codeEntityReference autoUpgrade="true">T:System.DateTimeKind</codeEntityReference> values. The default is <codeEntityReference autoUpgrade="true">F:System.DateTimeKind.Unspecified</codeEntityReference>.</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example uses the <codeEntityReference autoUpgrade="true">M:System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)</codeEntityReference> method to demonstrate how the <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> property influences the <codeEntityReference autoUpgrade="true">M:System.DateTime.ToLocalTime</codeEntityReference> and <codeEntityReference autoUpgrade="true">M:System.DateTime.ToUniversalTime</codeEntityReference> conversion methods.</para>
                <codeReference>DateTime.Kind_Suite#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="P:System.DateTime.Millisecond">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Gets the milliseconds component of the date represented by this instance.</para>
        </summary>
        <returnValue>
          <para>The milliseconds component, expressed as a value between 0 and 999.</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates the <codeEntityReference autoUpgrade="true">P:System.DateTime.Millisecond</codeEntityReference> property.</para>
                <codeReference>System.DateTime.Minute etc#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="P:System.DateTime.Minute">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Gets the minute component of the date represented by this instance.</para>
        </summary>
        <returnValue>
          <para>The minute component, expressed as a value between 0 and 59.</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates the <codeEntityReference autoUpgrade="true">P:System.DateTime.Minute</codeEntityReference> property.</para>
                <codeReference>System.DateTime.Minute etc#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="P:System.DateTime.Month">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Gets the month component of the date represented by this instance.</para>
        </summary>
        <returnValue>
          <para>The month component, expressed as a value between 1 and 12.</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates the <codeEntityReference autoUpgrade="true">P:System.DateTime.Month</codeEntityReference> property.</para>
                <codeReference>System.DateTime.Minute etc#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="P:System.DateTime.Now">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Gets a <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object that is set to the current date and time on this computer, expressed as the local time.</para>
        </summary>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> whose value is the current local date and time.</para>
        </returnValue>
        <remarks>
          <content>
            <para>The resolution of this property depends on the system timer.</para>
            <table>
              <tableHeader>
                <row>
                  <entry>
                    <para>System </para>
                  </entry>
                  <entry>
                    <para>Approximate Resolution </para>
                  </entry>
                </row>
              </tableHeader>
              <row>
                <entry>
                  <para>Windows NT 3.5 and later </para>
                </entry>
                <entry>
                  <para>10 milliseconds </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>Windows 98 </para>
                </entry>
                <entry>
                  <para>55 milliseconds </para>
                </entry>
              </row>
            </table>
            <para>Starting with the .NET Framework version 2.0, the return value is a <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> whose <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> property returns <codeEntityReference autoUpgrade="true">F:System.DateTimeKind.Local</codeEntityReference>.</para>
          </content>
        </remarks>
        <platformNotes>
          <platformNote>
            <platforms>
              <platform>NETCF</platform>
            </platforms>
            <content>
              <para>In Windows CE, time is specific only to the second. You can get a more precise time span measurement, for example, in milliseconds, by using the <codeEntityReference autoUpgrade="true">P:System.Environment.TickCount</codeEntityReference>  property.</para>
            </content>
          </platformNote>
        </platformNotes>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example uses the <codeEntityReference autoUpgrade="true">M:System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)</codeEntityReference> method to demonstrate how the <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> property influences the <codeEntityReference autoUpgrade="true">M:System.DateTime.ToLocalTime</codeEntityReference> and <codeEntityReference autoUpgrade="true">M:System.DateTime.ToUniversalTime</codeEntityReference> conversion methods.</para>
                <codeReference>DateTime.Kind_Suite#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="P:System.DateTime.Second">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Gets the seconds component of the date represented by this instance.</para>
        </summary>
        <returnValue>
          <para>The seconds, between 0 and 59.</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates the <codeEntityReference autoUpgrade="true">P:System.DateTime.Second</codeEntityReference> property.</para>
                <codeReference>System.DateTime.Minute etc#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="P:System.DateTime.Ticks">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Gets the number of ticks that represent the date and time of this instance.</para>
        </summary>
        <returnValue>
          <para>The number of ticks that represent the date and time of this instance. The value is between <codeEntityReference autoUpgrade="true">F:System.DateTime.MinValue</codeEntityReference> and <codeEntityReference autoUpgrade="true">F:System.DateTime.MaxValue</codeEntityReference>.</para>
        </returnValue>
        <remarks>
          <content>
            <para>The value of this property represents the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight, January 1, 0001.</para>
          </content>
        </remarks>
      </dduexml>
    </member>
    <member name="P:System.DateTime.TimeOfDay">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Gets the time of day for this instance.</para>
        </summary>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.TimeSpan</codeEntityReference> that represents the fraction of the day that has elapsed since midnight.</para>
        </returnValue>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.TimeSpan</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="P:System.DateTime.Today">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Gets the current date.</para>
        </summary>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> set to today's date, with the time component set to 00:00:00.</para>
        </returnValue>
        <remarks>
          <content>
            <para>Starting with the .NET Framework version 2.0, the return value is a <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> whose <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> property returns <codeEntityReference autoUpgrade="true">F:System.DateTimeKind.Local</codeEntityReference>.</para>
          </content>
        </remarks>
      </dduexml>
    </member>
    <member name="P:System.DateTime.UtcNow">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Gets a <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object that is set to the current date and time on this computer, expressed as the Coordinated Universal Time (UTC).</para>
        </summary>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> whose value is the current UTC date and time.</para>
        </returnValue>
        <remarks>
          <content>
            <para>The resolution of this property depends on the system timer.</para>
            <table>
              <tableHeader>
                <row>
                  <entry>
                    <para>System </para>
                  </entry>
                  <entry>
                    <para>Approximate Resolution </para>
                  </entry>
                </row>
              </tableHeader>
              <row>
                <entry>
                  <para>Windows NT 3.5 and later </para>
                </entry>
                <entry>
                  <para>10 milliseconds </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>Windows 98 </para>
                </entry>
                <entry>
                  <para>55 milliseconds </para>
                </entry>
              </row>
            </table>
            <para>Starting with the .NET Framework version 2.0, the return value is a <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> whose <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> property returns <codeEntityReference autoUpgrade="true">F:System.DateTimeKind.Utc</codeEntityReference>.</para>
          </content>
        </remarks>
        <platformNotes>
          <platformNote>
            <platforms>
              <platform>NETCF</platform>
            </platforms>
            <content>
              <para>In Windows CE, time is specific only to the second. You can get a more precise time span measurement, for example, in milliseconds, by using the <codeEntityReference autoUpgrade="true">P:System.Environment.TickCount</codeEntityReference>  property.</para>
            </content>
          </platformNote>
        </platformNotes>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example uses the <codeEntityReference autoUpgrade="true">M:System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)</codeEntityReference> method to demonstrate how the <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> property influences the <codeEntityReference autoUpgrade="true">M:System.DateTime.ToLocalTime</codeEntityReference> and <codeEntityReference autoUpgrade="true">M:System.DateTime.ToUniversalTime</codeEntityReference> conversion methods.</para>
                <codeReference>DateTime.Kind_Suite#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">M:System.TimeZone.GetUtcOffset(System.DateTime)</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="P:System.DateTime.Year">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Gets the year component of the date represented by this instance.</para>
        </summary>
        <returnValue>
          <para>The year, between 1 and 9999.</para>
        </returnValue>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
                <para>The following code example demonstrates the <codeEntityReference autoUpgrade="true">P:System.DateTime.Year</codeEntityReference> property.</para>
                <codeReference>System.DateTime.Minute etc#1</codeReference>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
        <relatedTopics>
          <codeEntityReference autoUpgrade="true">T:System.Int32</codeEntityReference>
          <codeEntityReference autoUpgrade="true">T:System.Globalization.Calendar</codeEntityReference>
        </relatedTopics>
      </dduexml>
    </member>
    <member name="M:System.DateTime.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <useBase>
        </useBase>
        <summary>
          <para>Populates a <codeEntityReference autoUpgrade="true">T:System.Runtime.Serialization.SerializationInfo</codeEntityReference> object with the data needed to serialize the current <codeEntityReference autoUpgrade="true">T:System.DateTime</codeEntityReference> object.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>info</parameterReference>
            <content>
              <para>The <codeEntityReference autoUpgrade="true">T:System.Runtime.Serialization.SerializationInfo</codeEntityReference> object to populate with data. </para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>context</parameterReference>
            <content>
              <para>The destination for this serialization. (This parameter is not used; specify <languageKeyword>null</languageKeyword>.)</para>
            </content>
          </parameter>
        </parameters>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentNullException</codeEntityReference>
            <content>
              <para>
                <parameterReference>info </parameterReference>is <languageKeyword>null</languageKeyword>.</para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>The <codeEntityReference autoUpgrade="true">M:System.DateTime.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</codeEntityReference> method populates the <parameterReference>info</parameterReference> parameter with the <codeEntityReference autoUpgrade="true">P:System.DateTime.Ticks</codeEntityReference> and <codeEntityReference autoUpgrade="true">P:System.DateTime.Kind</codeEntityReference> property values.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
  </members>
</doc>