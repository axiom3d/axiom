<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:dev="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" fileAssetGuid="e42dc03b-08fb-45ab-9646-69592f60f809" revisionNumber="8">
  <assembly>
    <name>System</name>
  </assembly>
  <members>
    <member name="T:System.UriParser">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Parses a new URI scheme. This is an abstract class.</para>
        </summary>
        <remarks>
          <content>
            <para>The UriParser class enables you to create parsers for new URI schemes. You can write these parsers in their entirety, or the parsers can be derived from well-known schemes (HTTP, FTP, and other schemes based on network protocols). If you want to create a completely new parser, inherit from <codeEntityReference autoUpgrade="true">T:System.GenericUriParser</codeEntityReference>. If you want to create a parser that extends a well-known URI scheme, inherit from <codeEntityReference autoUpgrade="true">T:System.FtpStyleUriParser</codeEntityReference>, <codeEntityReference autoUpgrade="true">T:System.HttpStyleUriParser</codeEntityReference>, <codeEntityReference autoUpgrade="true">T:System.FileStyleUriParser</codeEntityReference>, <codeEntityReference autoUpgrade="true">T:System.GopherStyleUriParser</codeEntityReference>, or <codeEntityReference autoUpgrade="true">T:System.LdapStyleUriParser</codeEntityReference>.</para>
            <para>Microsoft strongly recommends that you use a parser shipped with the .NET Framework. Building your own parser increases the complexity of your application, and will not perform as well as the shipped parsers.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="M:System.UriParser.#ctor">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Constructs a default URI parser.</para>
        </summary>
        <remarks>
          <content>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Gets the components from a URI.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>uri</parameterReference>
            <content>
              <para>The URI to parse.</para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>components</parameterReference>
            <content>
              <para>The <codeEntityReference autoUpgrade="true">T:System.UriComponents</codeEntityReference> to retrieve from <parameterReference>uri.</parameterReference></para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>format</parameterReference>
            <content>
              <para>One of the <codeEntityReference autoUpgrade="true">T:System.UriFormat</codeEntityReference> values that controls how special characters are escaped.</para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>A string that contains the components.</para>
        </returnValue>
        <exceptions>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.ArgumentOutOfRangeException</codeEntityReference>
            <content>
              <para>
                <parameterReference>uriFormat</parameterReference> is invalid.</para>
              <para>- or -</para>
              <para>
                <parameterReference>uriComponents</parameterReference> is not a combination of valid <codeEntityReference autoUpgrade="true">T:System.UriComponents</codeEntityReference> values. </para>
            </content>
          </exception>
          <exception>
            <codeEntityReference autoUpgrade="true">T:System.InvalidOperationException</codeEntityReference>
            <content>
              <para>
                <parameterReference>uri</parameterReference> is not an absolute URI. Relative URIs cannot be used with this method.</para>
            </content>
          </exception>
        </exceptions>
        <remarks>
          <content>
            <para>Use the <codeEntityReference autoUpgrade="true">M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)</codeEntityReference> method to determine the value of various parts of the URI, such as the <codeEntityReference autoUpgrade="true">F:System.UriComponents.Scheme</codeEntityReference>, <codeEntityReference autoUpgrade="true">F:System.UriComponents.Host</codeEntityReference>, or <codeEntityReference autoUpgrade="true">F:System.UriComponents.Port</codeEntityReference>.</para>
            <para>The components are returned in the order that they appear in the URI. For example, if <codeEntityReference autoUpgrade="true">F:System.UriComponents.Scheme</codeEntityReference> is specified, it appears first.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="M:System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Initialize the state of the parser and validate the URI.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>uri</parameterReference>
            <content>
              <para>The T:System.Uri to validate.</para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>parsingError</parameterReference>
            <content>
              <para>Validation errors, if any.</para>
            </content>
          </parameter>
        </parameters>
        <remarks>
          <content>
            <para>The <codeEntityReference autoUpgrade="true">M:System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)</codeEntityReference> method is called every time a <codeEntityReference autoUpgrade="true">T:System.Uri</codeEntityReference> is instantiated.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="M:System.UriParser.IsBaseOf(System.Uri,System.Uri)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Determines whether <parameterReference>baseUri</parameterReference> is a base URI for <parameterReference>relativeUri</parameterReference>.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>baseUri</parameterReference>
            <content>
              <para>The base URI.</para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>relativeUri</parameterReference>
            <content>
              <para>The URI to test.</para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>
            <languageKeyword>true</languageKeyword> if <parameterReference>baseUri</parameterReference> is a base URI for <parameterReference>relativeUri</parameterReference>; otherwise, <languageKeyword>false</languageKeyword>.</para>
        </returnValue>
        <remarks>
          <content>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="M:System.UriParser.IsKnownScheme(System.String)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Indicates whether the parser for a scheme is registered.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>schemeName</parameterReference>
            <content>
              <para>The scheme name to check.</para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>
            <languageKeyword>true</languageKeyword> if <parameterReference>schemeName</parameterReference> has been registered; otherwise, <languageKeyword>false</languageKeyword>.</para>
        </returnValue>
        <remarks>
          <content>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="M:System.UriParser.IsWellFormedOriginalString(System.Uri)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Indicates whether a URI is well-formed.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>uri</parameterReference>
            <content>
              <para>The URI to check.</para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>
            <languageKeyword>true</languageKeyword> if <parameterReference>uri</parameterReference> is well-formed; otherwise, <languageKeyword>false</languageKeyword>.</para>
        </returnValue>
        <remarks>
          <content>
            <para>The <codeEntityReference autoUpgrade="true">M:System.UriParser.IsWellFormedOriginalString(System.Uri)</codeEntityReference> method will return false if:</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="M:System.UriParser.OnNewUri">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Invoked by a <codeEntityReference autoUpgrade="true">T:System.Uri</codeEntityReference> constructor to get a <codeEntityReference autoUpgrade="true">T:System.UriParser</codeEntityReference> instance</para>
        </summary>
        <returnValue>
          <para>A <codeEntityReference autoUpgrade="true">T:System.UriParser</codeEntityReference> for the constructed <codeEntityReference autoUpgrade="true">T:System.Uri</codeEntityReference>.</para>
        </returnValue>
        <remarks>
          <content>
            <para>The default implementation returns the same UriParser instance. You may need to override this method and return a different <codeEntityReference autoUpgrade="true">T:System.UriParser</codeEntityReference> for each invocation if you are operating in a multithreaded environment.</para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="M:System.UriParser.OnRegister(System.String,System.Int32)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Invoked by the Framework when a <codeEntityReference autoUpgrade="true">T:System.UriParser</codeEntityReference> method is registered.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>schemeName</parameterReference>
            <content>
              <para>The scheme that is associated with this <codeEntityReference autoUpgrade="true">T:System.UriParser</codeEntityReference>.</para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>defaultPort</parameterReference>
            <content>
              <para>The port number of the scheme.</para>
            </content>
          </parameter>
        </parameters>
        <remarks>
          <content>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="M:System.UriParser.Register(System.UriParser,System.String,System.Int32)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Associates a scheme and port number with a <codeEntityReference autoUpgrade="true">T:System.UriParser</codeEntityReference>.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>uriParser</parameterReference>
            <content>
              <para>The URI parser to register.</para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>schemeName</parameterReference>
            <content>
              <para>The name of the scheme that is associated with this parser.</para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>defaultPort</parameterReference>
            <content>
              <para>The default port number for the specified scheme.</para>
            </content>
          </parameter>
        </parameters>
        <remarks>
          <content>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
    <member name="M:System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)">
      <dduexml xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
        <summary>
          <para>Called by <codeEntityReference autoUpgrade="true">T:System.Uri</codeEntityReference> constructors and <codeEntityReference qualifyHint="true" autoUpgrade="false">Overload:System.Uri.TryCreate</codeEntityReference> to resolve a relative URI.</para>
        </summary>
        <parameters>
          <parameter>
            <parameterReference>baseUri</parameterReference>
            <content>
              <para>A base URI.</para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>relativeUri</parameterReference>
            <content>
              <para>A relative URI.</para>
            </content>
          </parameter>
          <parameter>
            <parameterReference>parsingError</parameterReference>
            <content>
              <para>Errors during the resolve process, if any.</para>
            </content>
          </parameter>
        </parameters>
        <returnValue>
          <para>The resolved URI string.</para>
        </returnValue>
        <remarks>
          <content>
            <para>
              <codeEntityReference autoUpgrade="true">T:System.Uri</codeEntityReference> constructors and <codeEntityReference qualifyHint="true" autoUpgrade="false">Overload:System.Uri.TryCreate</codeEntityReference> use <codeEntityReference autoUpgrade="true">M:System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)</codeEntityReference> to construct a URI from <parameterReference>baseUri</parameterReference> and <parameterReference>relativeUri.</parameterReference></para>
          </content>
        </remarks>
        <codeExamples>
          <codeExample>
            <legacy>
              <content>
              </content>
            </legacy>
          </codeExample>
        </codeExamples>
      </dduexml>
    </member>
  </members>
</doc>