<configuration>
  <dduetools>
    <builder>
      <context>
        <namespace prefix="ddue" uri="http://ddue.schemas.microsoft.com/authoring/2003/5" />
      </context>
      <components>

        <!-- Create skeleton document -->
        <component type="Microsoft.Ddue.Tools.CopyFromFileComponent" assembly="..\..\ProductionTools\BuildComponents\BuildComponents.dll">
	  <data file="..\..\Presentation\transforms\skeleton.xml" />
	  <copy source="/*" target="/" />
	</component>

        <!-- Copy in reflection data -->
	<component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="..\..\ProductionTools\BuildComponents\BuildComponents.dll">
          <index name="reflection" value="/reflection/apis/api" key="@id" cache="10">
            <data files="reflection.xml" />
          </index>
          <copy name="reflection" source="*" target="/document/reference" />
	</component>

	<!-- Copy in container data -->
	<component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="..\..\ProductionTools\BuildComponents\BuildComponents.dll">
          <copy name="reflection" key="string(/document/reference/containers/container/@namespace)" source="*[not(local-name()='elements')]" target="/document/reference/containers/container[@namespace]" />
	</component>
	<component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="..\..\ProductionTools\BuildComponents\BuildComponents.dll">
          <copy name="reflection" key="string(/document/reference/containers/container/@type)" source="*[not(local-name()='elements')]" target="/document/reference/containers/container[@type]" />
	</component>
	
	<!-- Generate syntax -->
	<component type="Microsoft.Ddue.Tools.IfThenComponent" assembly="..\..\ProductionTools\BuildComponents\BuildComponents.dll">
	  <if condition="not(starts-with($key,'Overload:') or starts-with($key,'R:'))" />
          <then>
	  <component type="Microsoft.Ddue.Tools.SyntaxComponent" assembly="..\..\ProductionTools\BuildComponents\BuildComponents.dll">
	    <syntax input="/document/reference" output="/document/syntax" />
	    <generators>
              <generator type="Microsoft.Ddue.Tools.CSharpDeclarationSyntaxGenerator" assembly="..\..\ProductionTools\BuildComponents\SyntaxGenerators.dll" />
              <generator type="Microsoft.Ddue.Tools.VisualBasicDeclarationSyntaxGenerator" assembly="..\..\ProductionTools\BuildComponents\SyntaxGenerators.dll" />
            </generators>
          </component>
          </then>
	</component>
	
	<!-- Copy in comments -->
	<component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="..\..\ProductionTools\BuildComponents\BuildComponents.dll">
          <context prefix="ddue" name="http://ddue.schemas.microsoft.com/authoring/2003/5" />
          <index name="comments" value="/doc/members/member" key="@name" cache="100">
            <data files="comments\*.xml" />
          </index>
          <copy name="comments" source="*" target="/document/comments" />
	</component>

	<!-- Resolve code snippets -->
<!--
	<component type="Microsoft.Ddue.Tools.ExampleComponent" assembly="..\..\ProductionTools\BuildComponents\BuildComponents.dll">
	  <examples file="..\cpref\CodeSnippet.xml" />
	</component>
-->

	<!-- Copy in reflection data and comments for members -->
        <component type="Microsoft.Ddue.Tools.ForEachComponent" assembly="..\..\ProductionTools\BuildComponents\BuildComponents.dll">
          <variable expression="/document/reference/elements/element/@api" />
          <components>
            <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="..\..\ProductionTools\BuildComponents\BuildComponents.dll">
	      <copy name="reflection" source="*[not(local-name()='elements')]" target="/document/reference/elements/element[@api=$key]" />
	    </component>
            <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="..\..\ProductionTools\BuildComponents\BuildComponents.dll">
              <context prefix="ddue" name="http://ddue.schemas.microsoft.com/authoring/2003/5" />
              <copy name="comments" source="ddue:dduexml/ddue:summary" target="/document/reference/elements/element[@api=$key]" />
            </component>
          </components>
        </component>

	<!-- transform -->
        <component type="Microsoft.Ddue.Tools.TransformComponent" assembly="..\..\ProductionTools\BuildComponents\BuildComponents.dll">
          <transform file="..\..\Presentation\transforms\main_reference.xsl" />
        </component>

	<!-- resolve shared content -->
        <component type="Microsoft.Ddue.Tools.SharedContentComponent" assembly="..\..\ProductionTools\BuildComponents\BuildComponents.dll">
          <content file="..\..\Presentation\content\shared_content.xml" />
          <content file="..\..\Presentation\content\reference_content.xml" />
          <content file="content.xml" />
	</component>

	<!-- resolve conceptual links -->
        <component type="Microsoft.Ddue.Tools.ResolveConceptualLinksComponent" assembly="..\..\ProductionTools\BuildComponents\BuildComponents.dll">
          <targets file="..\XmlComp\{0}.cmp.xml" title="string(/metadata/topic/title)" type="index"/>
	</component>

	<!-- resolve reference links -->
	<component type="Microsoft.Ddue.Tools.ResolveReferenceLinksComponent" assembly="..\..\ProductionTools\BuildComponents\BuildComponents.dll">
	  <targets file="reflection.xml" type="local" map="manifest.xml" />
	</component>

	<!-- save the result -->
        <component type="Microsoft.Ddue.Tools.SaveComponent" assembly="..\..\ProductionTools\BuildComponents\BuildComponents.dll">
          <save path="concat('Output\html\',/html/head/meta[@name='guid']/@content,'.htm')" indent="false" omit-xml-declaration="true" />
        </component>

      </components>
    </builder>
  </dduetools>
</configuration>
