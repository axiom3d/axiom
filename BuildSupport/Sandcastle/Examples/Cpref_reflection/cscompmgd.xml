<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="cscompmgd" version="8.0.0.0" culture="" key="002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293" hash="SHA1">
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>8.0.50727.12</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>8.0.50727.12</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>c Microsoft Corporation. All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.CompilationRelaxationsAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>8</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute" ref="true" />
          <assignment name="WrapNonExceptionThrows">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\RTM\Tools\devdiv\FinalPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>8.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>cscompmgd.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" ref="true" />
          <argument>
            <type api="T:System.Runtime.ConstrainedExecution.Consistency" ref="false" />
            <enumValue>
              <field name="MayCorruptProcess" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Runtime.ConstrainedExecution.Cer" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft (R) Visual Studio (R) 2005</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>cscompmgd.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>cscompmgd.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Diagnostics.DebuggableAttribute" ref="true" />
          <argument>
            <type api="T:System.Diagnostics.DebuggableAttribute.DebuggingModes" ref="false" />
            <enumValue>
              <field name="IgnoreSymbolStoreSequencePoints" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="RequestMinimum" />
            </enumValue>
          </argument>
          <assignment name="SkipVerification">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="T:Microsoft.CSharp.Compiler">
      <apidata name="Compiler" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microsoft.CSharp.Compiler.Compile(System.String[],System.String[],System.String,System.String[],System.Collections.IDictionary)" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="cscompmgd" module="cscompmgd" />
        <namespace api="N:Microsoft.CSharp" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The recommended alternative is Microsoft.CSharp.CSharpCodeProvider and System.CodeDom.Compiler.ICodeCompiler.  The CSharpCodeProvider and CodeDom ICodeCompiler provide a much richer set of functionality for specifying how to launch the compiler.</value>
          </argument>
        </attribute>
      </attributes>
      <file name="6210e5cd-9910-779c-96b4-ee5054f8c2ab" />
    </api>
    <api id="M:Microsoft.CSharp.Compiler.Compile(System.String[],System.String[],System.String,System.String[],System.Collections.IDictionary)">
      <apidata name="Compile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" special="false" />
      <proceduredata abstract="false" virtual="false" final="false" />
      <parameters>
        <parameter name="sourceTexts">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="sourceTextNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="target">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="imports">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="options">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:Microsoft.CSharp.CompilerError" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="cscompmgd" module="cscompmgd" />
        <namespace api="N:Microsoft.CSharp" />
        <type api="T:Microsoft.CSharp.Compiler" ref="true" />
      </containers>
      <file name="5e7dcdd0-6098-dffa-4af5-77663388a476" />
    </api>
    <api id="T:Microsoft.CSharp.CompilerError">
      <apidata name="CompilerError" group="type" subgroup="class" />
      <typedata visibility="public" abstract="false" sealed="false" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:Microsoft.CSharp.CompilerError.SourceFile" />
        <element api="F:Microsoft.CSharp.CompilerError.SourceLine" />
        <element api="F:Microsoft.CSharp.CompilerError.SourceColumn" />
        <element api="F:Microsoft.CSharp.CompilerError.ErrorNumber" />
        <element api="F:Microsoft.CSharp.CompilerError.ErrorMessage" />
        <element api="F:Microsoft.CSharp.CompilerError.ErrorLevel" />
        <element api="M:Microsoft.CSharp.CompilerError.ToString" />
        <element api="M:Microsoft.CSharp.CompilerError.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="cscompmgd" module="cscompmgd" />
        <namespace api="N:Microsoft.CSharp" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The recommended alternative is Microsoft.CSharp.CSharpCodeProvider and System.CodeDom.Compiler.ICodeCompiler.  The CSharpCodeProvider and CodeDom ICodeCompiler provide a much richer set of functionality for specifying how to launch the compiler.</value>
          </argument>
        </attribute>
      </attributes>
      <file name="275da543-5fa8-17cd-90a3-9571ff4280ec" />
    </api>
    <api id="M:Microsoft.CSharp.CompilerError.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" static="false" special="true" />
      <containers>
        <library assembly="cscompmgd" module="cscompmgd" />
        <namespace api="N:Microsoft.CSharp" />
        <type api="T:Microsoft.CSharp.CompilerError" ref="true" />
      </containers>
      <file name="b64273e6-224f-0c26-8553-ca9837c45909" />
    </api>
    <api id="F:Microsoft.CSharp.CompilerError.ErrorLevel">
      <apidata name="ErrorLevel" group="member" subgroup="field" />
      <memberdata visibility="public" static="false" special="false" />
      <fielddata literal="false" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.CSharp.ErrorLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="cscompmgd" module="cscompmgd" />
        <namespace api="N:Microsoft.CSharp" />
        <type api="T:Microsoft.CSharp.CompilerError" ref="true" />
      </containers>
      <file name="43d93380-7625-2e7b-a743-cdf1db4aec65" />
    </api>
    <api id="F:Microsoft.CSharp.CompilerError.ErrorMessage">
      <apidata name="ErrorMessage" group="member" subgroup="field" />
      <memberdata visibility="public" static="false" special="false" />
      <fielddata literal="false" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="cscompmgd" module="cscompmgd" />
        <namespace api="N:Microsoft.CSharp" />
        <type api="T:Microsoft.CSharp.CompilerError" ref="true" />
      </containers>
      <file name="19eca173-e2da-f111-285f-8f770ad0a898" />
    </api>
    <api id="F:Microsoft.CSharp.CompilerError.ErrorNumber">
      <apidata name="ErrorNumber" group="member" subgroup="field" />
      <memberdata visibility="public" static="false" special="false" />
      <fielddata literal="false" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="cscompmgd" module="cscompmgd" />
        <namespace api="N:Microsoft.CSharp" />
        <type api="T:Microsoft.CSharp.CompilerError" ref="true" />
      </containers>
      <file name="67a3e4eb-b9dc-02ec-e6ad-0436e35e3e84" />
    </api>
    <api id="F:Microsoft.CSharp.CompilerError.SourceColumn">
      <apidata name="SourceColumn" group="member" subgroup="field" />
      <memberdata visibility="public" static="false" special="false" />
      <fielddata literal="false" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="cscompmgd" module="cscompmgd" />
        <namespace api="N:Microsoft.CSharp" />
        <type api="T:Microsoft.CSharp.CompilerError" ref="true" />
      </containers>
      <file name="727ed54d-3b73-7068-0b25-aaa204346903" />
    </api>
    <api id="F:Microsoft.CSharp.CompilerError.SourceFile">
      <apidata name="SourceFile" group="member" subgroup="field" />
      <memberdata visibility="public" static="false" special="false" />
      <fielddata literal="false" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="cscompmgd" module="cscompmgd" />
        <namespace api="N:Microsoft.CSharp" />
        <type api="T:Microsoft.CSharp.CompilerError" ref="true" />
      </containers>
      <file name="0dc9dcf3-e96d-466f-785a-5444b09f2f1b" />
    </api>
    <api id="F:Microsoft.CSharp.CompilerError.SourceLine">
      <apidata name="SourceLine" group="member" subgroup="field" />
      <memberdata visibility="public" static="false" special="false" />
      <fielddata literal="false" initonly="false" volatile="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="cscompmgd" module="cscompmgd" />
        <namespace api="N:Microsoft.CSharp" />
        <type api="T:Microsoft.CSharp.CompilerError" ref="true" />
      </containers>
      <file name="460e458c-d88f-820b-1ccb-c64b5efbf5a4" />
    </api>
    <api id="M:Microsoft.CSharp.CompilerError.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" static="false" special="false" />
      <proceduredata abstract="false" virtual="true" final="false" overrides="M:System.Object.ToString" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="cscompmgd" module="cscompmgd" />
        <namespace api="N:Microsoft.CSharp" />
        <type api="T:Microsoft.CSharp.CompilerError" ref="true" />
      </containers>
      <file name="88703378-78e7-dcea-8d0f-2da5a9ed70e8" />
    </api>
    <api id="T:Microsoft.CSharp.ErrorLevel">
      <apidata name="ErrorLevel" group="type" subgroup="enumeration" />
      <typedata visibility="public" abstract="false" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:Microsoft.CSharp.ErrorLevel.None" />
        <element api="F:Microsoft.CSharp.ErrorLevel.Warning" />
        <element api="F:Microsoft.CSharp.ErrorLevel.Error" />
        <element api="F:Microsoft.CSharp.ErrorLevel.FatalError" />
      </elements>
      <containers>
        <library assembly="cscompmgd" module="cscompmgd" />
        <namespace api="N:Microsoft.CSharp" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The recommended alternative is Microsoft.CSharp.CSharpCodeProvider and System.CodeDom.Compiler.ICodeCompiler.  The CSharpCodeProvider and CodeDom ICodeCompiler provide a much richer set of functionality for specifying how to launch the compiler.</value>
          </argument>
        </attribute>
      </attributes>
      <file name="1af8fc19-1916-f668-23cb-37db30f04eb7" />
    </api>
  </apis>
</reflection>