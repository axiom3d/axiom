<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tao.OpenAl</name>
    </assembly>
    <members>
        <member name="T:Tao.OpenAl.Al">
            <summary>
                OpenAL binding for .NET, implementing AL 1.1.
            </summary>
            <remarks>
                Binds functions and definitions in OpenAL32.dll or libAL.so.
            </remarks>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_NATIVE_LIBRARY">
            <summary>
                Specifies OpenAl's native library archive.
            </summary>
            <remarks>
                Specifies OpenAl32.dll everywhere; will be mapped via .config for mono.
            </remarks>
        </member>
        <member name="F:Tao.OpenAl.Al.CALLING_CONVENTION">
            <summary>
                Specifies the calling convention.
            </summary>
            <remarks>
                Specifies <see cref="F:System.Runtime.InteropServices.CallingConvention.Cdecl"/>.
            </remarks>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_INVALID">
            <summary>
                Bad value.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_NONE">
            <summary>
                Disable value.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_FALSE">
            <summary>
                bool false.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_TRUE">
            <summary>
                bool true.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_SOURCE_TYPE">
            <summary>
                Indicates the type of AL_SOURCE.  Sources can be spatialized.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_SOURCE_RELATIVE">
            <summary>
                Indicates source has listener-relative coordinates.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_CONE_INNER_ANGLE">
            <summary>
                Directional source, inner cone angle, in degrees.  The accepted range is 0 to
                360, the default value is 360.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_CONE_OUTER_ANGLE">
            <summary>
                Directional source, outer cone angle, in degrees.  The accepted range is 0 to
                360, the default value is 360.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_PITCH">
            <summary>
                Specifies the pitch to be applied, either at source, or on mixer results, at
                listener.  The accepted range is 0.5 to 2.0, the default value is 1.0.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_POSITION">
            <summary>
                Specifies the current location in three dimensional space.  OpenAL, like OpenGL,
                uses a right-handed coordinate system, where in a frontal default view X (thumb)
                points right, Y points up (index finger), and Z points towards the viewer/camera
                (middle finger).  To switch to a left-handed coordinate system, flip the sign on
                the Z coordinate.  Listener position is always in the world coordinate system.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_DIRECTION">
            <summary>
                Specifies the current direction as forward vector.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_VELOCITY">
            <summary>
                Specifies the current velocity in three dimensional space.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_LOOPING">
            <summary>
                Indicates whether source has to loop infinitely.  The accepted values are
                <see cref="F:Tao.OpenAl.Al.AL_TRUE"/> or <see cref="F:Tao.OpenAl.Al.AL_FALSE"/>, the default value is
                <see cref="F:Tao.OpenAl.Al.AL_FALSE"/>.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_STATIC">
            <summary>
                Indicates whether source is meant to be static.  The accepted values are
                <see cref="F:Tao.OpenAl.Al.AL_TRUE"/> or <see cref="F:Tao.OpenAl.Al.AL_FALSE"/>, the default value is
                <see cref="F:Tao.OpenAl.Al.AL_FALSE"/>.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_STREAMING">
            <summary>
                Indicates whether source is meant to be streaming.  The accepted values are
                <see cref="F:Tao.OpenAl.Al.AL_TRUE"/> or <see cref="F:Tao.OpenAl.Al.AL_FALSE"/>, the default value is
                <see cref="F:Tao.OpenAl.Al.AL_FALSE"/>.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_UNDETERMINED">
            <summary>
                Indicates whether source is meant to be undetermined.  The accepted values are
                <see cref="F:Tao.OpenAl.Al.AL_TRUE"/> or <see cref="F:Tao.OpenAl.Al.AL_FALSE"/>, the default value is
                <see cref="F:Tao.OpenAl.Al.AL_FALSE"/>.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_BUFFER">
            <summary>
                Indicates the buffer to provide sound samples.  The accepted range is any valid
                buffer ID.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_GAIN">
            <summary>
                Indicates the gain (volume amplification) applied.  The accepted range is 0.0
                or above.  A value of 1.0 means unattenuated/unchanged.  Each division by 2 equals
                an attenuation of -6dB.  Each multiplication by 2 equals an amplification of +6dB.
                A value of 0.0 is meaningless with respect to a logarithmic scale; it is
                interpreted as zero volume, the channel is effectively disabled.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_MIN_GAIN">
            <summary>
                Indicates minimum source attenuation.  The accepted range is 0.0 to 1.0.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_MAX_GAIN">
            <summary>
                Indicates maximum source attenuation.  The accepted range is 0.0 to 1.0.
            </summary>
            #define AL_MAX_GAIN 0x100E
        </member>
        <member name="F:Tao.OpenAl.Al.AL_ORIENTATION">
            <summary>
                Specifies the current orientation.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_REFERENCE_DISTANCE">
            <summary>
                byte offset into source (in canon format).  -1 if source is not playing.  Do not
                set this, only get this value.  The accepted range is 0.0 or above.  The default
                value is 1.0.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_ROLLOFF_FACTOR">
            <summary>
                Indicates the rolloff factor for the source.  The accepted range is 0.0 or
                above.  The default value is 1.0.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_CONE_OUTER_GAIN">
            <summary>
                Indicates the gain (volume amplification) applied.  The accepted range is 0.0 or
                above.  A value of 1.0 means unattenuated/unchanged.  Each division by 2 equals an
                attenuation of -6dB.  Each multiplication by 2 equals an amplification of +6dB.
                A value of 0.0 is meaningless with respect to a logarithmic scale; it is
                interpreted as zero volume, the channel is effectively disabled.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_MAX_DISTANCE">
            <summary>
                Specifies the maximum distance.  The accepted range is 0.0 or above.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_CHANNEL_MASK">
            <summary>
                Specifies the channel mask.  The accepted range is 0 to 255.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_SOURCE_STATE">
            <summary>
                Source state information.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_INITIAL">
            <summary>
                Source initialized.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_PLAYING">
            <summary>
                Source playing.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_PAUSED">
            <summary>
                Source paused.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_STOPPED">
            <summary>
                Source stopped.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_BUFFERS_QUEUED">
            <summary>
                Buffers are queued.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_BUFFERS_PROCESSED">
            <summary>
                Buffers are processed.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_SEC_OFFSET">
            <summary>
                Source buffer position information.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_SAMPLE_OFFSET">
            <summary>
                Source buffer position information.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_BYTE_OFFSET">
            <summary>
                Source buffer position information.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_FORMAT_MONO8">
            <summary>
                8-bit mono buffer.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_FORMAT_MONO16">
            <summary>
                16-bit mono buffer.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_FORMAT_STEREO8">
            <summary>
                8-bit stereo buffer.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_FORMAT_STEREO16">
            <summary>
                16-bit stereo buffer.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_FREQUENCY">
            <summary>
                Buffer frequency, in units of Hertz (Hz).  This is the number of samples per
                second.  Half of the sample frequency marks the maximum significant frequency
                component.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_BITS">
            <summary>
                Buffer bit depth.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_CHANNELS">
            <summary>
                Buffer channels.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_SIZE">
            <summary>
                Buffer size.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_DATA">
            <summary>
                Buffer data.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_UNUSED">
            <summary>
                Buffer unused.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_QUEUED">
            <summary>
                Buffer queued.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_PENDING">
            <summary>
                Buffer pending.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_CURRENT">
            <summary>
                Buffer current.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_PROCESSED">
            <summary>
                Buffer processed.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_NO_ERROR">
            <summary>
                No error.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_INVALID_NAME">
            <summary>
                Illegal name passed as an argument to an AL call.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_ILLEGAL_ENUM">
            <summary>
                Illegal enum passed as an argument to an AL call.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_INVALID_ENUM">
            <summary>
                Illegal enum passed as an argument to an AL call.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_INVALID_VALUE">
            <summary>
                Illegal value passed as an argument to an AL call.  Applies to parameter
                values, but not to enumerations.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_ILLEGAL_COMMAND">
            <summary>
                A function was called at an inappropriate time or in an inappropriate way,
                causing an illegal state.  This can be an incompatible value, object ID, and/or
                function.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_INVALID_OPERATION">
            <summary>
                A function was called at an inappropriate time or in an inappropriate way,
                causing an illegal state.  This can be an incompatible value, object ID, and/or
                function.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_OUT_OF_MEMORY">
            <summary>
                A function could not be completed, because there is not enough memory available.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_VENDOR">
            <summary>
                Vendor name.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_VERSION">
            <summary>
                Version.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_RENDERER">
            <summary>
                Renderer.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_EXTENSIONS">
            <summary>
                Extensions.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_DOPPLER_FACTOR">
            <summary>
                Doppler scale.  The default value is 1.0.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_DOPPLER_VELOCITY">
            <summary>
                Doppler velocity.  The default value is 1.0.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_SPEED_OF_SOUND">
            <summary>
                Speed of Sound
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_DISTANCE_SCALE">
            <summary>
                Distance scaling.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_DISTANCE_MODEL">
            <summary>
                Distance model.  The default value is <see cref="F:Tao.OpenAl.Al.AL_INVERSE_DISTANCE_CLAMPED"/>.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_INVERSE_DISTANCE">
            <summary>
                Inverse distance model.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_INVERSE_DISTANCE_CLAMPED">
            <summary>
                Inverse distance clamped model.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_LINEAR_DISTANCE">
            <summary>
                
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_LINEAR_DISTANCE_CLAMPED">
            <summary>
                
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_EXPONENT_DISTANCE">
            <summary>
                
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_EXPONENT_DISTANCE_CLAMPED">
            <summary>
                
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_ENV_ROOM_IASIG">
            <summary>
                Room.  The accepted range is -10000 to 0.  The default value is -10000.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_ENV_ROOM_HIGH_FREQUENCY_IASIG">
            <summary>
                Room high frequency.  The accepted range is -10000 to 0.  The default value is 0.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_ENV_ROOM_ROLLOFF_FACTOR">
            <summary>
                Room rolloff factor.  The accepted range is 0.1 to 20.0.  The default value is
                0.0.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_ENV_DECAY_TIME_IASIG">
            <summary>
                Decay time.  The accepted range is 0.1 to 20.0.  The default value is 1.0.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_ENV_DECAY_HIGH_FREQUENCY_RATIO_IASIG">
            <summary>
                Decay high frequency ratio.  The accepted range is 0.1 to 2.0.  The default value
                is 0.5.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_ENV_REFLECTIONS_IASIG">
            <summary>
                Reflections.  The accepted range is -10000 to 1000.  The default value is -10000.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_ENV_REFLECTIONS_DELAY_IASIG">
            <summary>
                Reflections delay.  The accepted range is 0.0 to 0.3.  The default value is 0.02.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_ENV_REVERB_IASIG">
            <summary>
                Reverb.  The accepted range is -10000 to 2000.  The default value is -10000.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_ENV_REVERB_DELAY_IASIG">
            <summary>
                Reverb delay.  The accepted range is 0.0 to 0.1.  The default value is 0.04.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_ENV_DIFFUSION_IASIG">
            <summary>
                Diffusion.  The accepted range is 0.0 to 100.0.  The default value is 100.0.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_ENV_DENSITY_IASIG">
            <summary>
                Density.  The accepted range is 0.0 to 100.0.  The default value is 100.0.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_ENV_HIGH_FREQUENCY_REFERENCE_IASIG">
            <summary>
                High frequency reference.  The accepted range is 20.0 to 20000.0.  The default
                value is 5000.0.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_CHORUS_WAVEFORM">
            * Chorus Parameters */
        </member>
        <member name="F:Tao.OpenAl.Al.AL_DISTORTION_EDGE">
            * Distortion Parameters */
        </member>
        <member name="F:Tao.OpenAl.Al.AL_ECHO_DELAY">
            * Echo Parameters */
        </member>
        <member name="F:Tao.OpenAl.Al.AL_FLANGER_WAVEFORM">
            * Flanger Parameters */
        </member>
        <member name="F:Tao.OpenAl.Al.AL_FREQUENCY_SHIFTER_FREQUENCY">
            * Frequencyshifter Parameters */
        </member>
        <member name="F:Tao.OpenAl.Al.AL_VOCAL_MORPHER_PHONEMEA">
            * Vocalmorpher Parameters */
        </member>
        <member name="F:Tao.OpenAl.Al.AL_PITCH_SHIFTER_COARSE_TUNE">
            * Pitchshifter Parameters */
        </member>
        <member name="F:Tao.OpenAl.Al.AL_RING_MODULATOR_FREQUENCY">
            * Ringmodulator Parameters */
        </member>
        <member name="F:Tao.OpenAl.Al.AL_AUTOWAH_ATTACK_TIME">
            * Autowah Parameters */
        </member>
        <member name="F:Tao.OpenAl.Al.AL_COMPRESSOR_ONOFF">
            * Compressor Parameters */
        </member>
        <member name="F:Tao.OpenAl.Al.AL_EQUALIZER_LOW_GAIN">
            * Equalizer Parameters */
        </member>
        <member name="F:Tao.OpenAl.Al.AL_HIGHPASS_GAIN">
            * Highpass Parameters */
        </member>
        <member name="F:Tao.OpenAl.Al.AL_BANDPASS_GAIN">
            * Bandpass Parameters */
        </member>
        <member name="F:Tao.OpenAl.Al.AL_FILTER_FIRST_PARAMETER">
            * Filter type */
        </member>
        <member name="F:Tao.OpenAl.Al.AL_FILTER_NULL">
            * Filter type definitions to be used with AL_FILTER_TYPE. */
        </member>
        <member name="F:Tao.OpenAl.Al.AL_FORMAT_QUAD16">
            <summary>
                Format specifier for 16bit 4-channel audio.
            </summary>
            <remarks>
            Note that if the enumeration value is not supported by the current OpenAl implementation,
            an OpenAL error is generated the first, but only the first time this field is accessed.
            The field then has a value of zero.
            </remarks>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_FORMAT_51CHN16">
            <summary>
                Format specifier for 16bit 6-channel audio.
            </summary>
            <remarks>
            Note that if the enumeration value is not supported by the current OpenAl implementation,
            an OpenAL error is generated the first, but only the first time this field is accessed.
            The field then has a value of zero.
            </remarks>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_FORMAT_61CHN16">
            <summary>
                Format specifier for 16bit 7-channel audio.
            </summary>
            <remarks>
            Note that if the enumeration value is not supported by the current OpenAl implementation,
            an OpenAL error is generated the first, but only the first time this field is accessed.
            The field then has a value of zero.
            </remarks>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_FORMAT_71CHN16">
            <summary>
                Format specifier for 16bit 8-channel audio.
            </summary>
            <remarks>
            Note that if the enumeration value is not supported by the current OpenAl implementation,
            an OpenAL error is generated the first, but only the first time this field is accessed.
            The field then has a value of zero.
            </remarks>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_STORAGE_AUTOMATIC">
            <summary>
                See 'OpenAL Programmer's Guide' for more information.
            </summary>
            <remarks>
            Note that if the enumeration value is not supported by the current OpenAl implementation,
            an OpenAL error is generated the first, but only the first time this field is accessed.
            The field then has a value of zero.
            </remarks>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_STORAGE_HARDWARE">
            <summary>
                See 'OpenAL Programmer's Guide' for more information.
            </summary>
            <remarks>
            Note that if the enumeration value is not supported by the current OpenAl implementation,
            an OpenAL error is generated the first, but only the first time this field is accessed.
            The field then has a value of zero.
            </remarks>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_STORAGE_ACCESSIBLE">
            <summary>
                See 'OpenAL Programmer's Guide' for more information.
            </summary>
            <remarks>
            Note that if the enumeration value is not supported by the current OpenAl implementation,
            an OpenAL error is generated the first, but only the first time this field is accessed.
            The field then has a value of zero.
            </remarks>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_EAX_RAM_SIZE">
            <summary>
                See 'OpenAL Programmer's Guide' for more information.
            </summary>
            <remarks>
            Note that if the enumeration value is not supported by the current OpenAl implementation,
            an OpenAL error is generated the first, but only the first time this field is accessed.
            The field then has a value of zero.
            </remarks>
        </member>
        <member name="F:Tao.OpenAl.Al.AL_EAX_RAM_FREE">
            <summary>
                See 'OpenAL Programmer's Guide' for more information.
            </summary>
            <remarks>
            Note that if the enumeration value is not supported by the current OpenAl implementation,
            an OpenAL error is generated the first, but only the first time this field is accessed.
            The field then has a value of zero.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alBufferData(System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
                Fills a buffer with audio data.
            </summary>
            <param name="buffer">
                Buffer name to be filled with data.
            </param>
            <param name="format">
                <para>
                    Format type from among the following:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_FORMAT_MONO8"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_FORMAT_MONO16"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_FORMAT_STEREO8"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_FORMAT_STEREO16"/></item>
                    </list>
                </para>
            </param>
            <param name="data">
                Pointer to the audio data.
            </param>
            <param name="size">
                The size of the audio data in bytes.
            </param>
            <param name="frequency">
                The frequency of the audio data.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alBufferData(System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32)">
            <summary>
                Fills a buffer with audio data.
            </summary>
            <param name="buffer">
                Buffer name to be filled with data.
            </param>
            <param name="format">
                <para>
                    Format type from among the following:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_FORMAT_MONO8"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_FORMAT_MONO16"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_FORMAT_STEREO8"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_FORMAT_STEREO16"/></item>
                    </list>
                </para>
            </param>
            <param name="data">
                Pointer to the audio data.
            </param>
            <param name="size">
                The size of the audio data in bytes.
            </param>
            <param name="frequency">
                The frequency of the audio data.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alBufferData(System.Int32,System.Int32,System.Void*,System.Int32,System.Int32)">
            <summary>
                Fills a buffer with audio data.
            </summary>
            <param name="buffer">
                Buffer name to be filled with data.
            </param>
            <param name="format">
                <para>
                    Format type from among the following:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_FORMAT_MONO8"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_FORMAT_MONO16"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_FORMAT_STEREO8"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_FORMAT_STEREO16"/></item>
                    </list>
                </para>
            </param>
            <param name="data">
                Pointer to the audio data.
            </param>
            <param name="size">
                The size of the audio data in bytes.
            </param>
            <param name="frequency">
                The frequency of the audio data.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alBufferf(System.Int32,System.Int32,System.Single)">
            <summary>
                Set Buffer parameters.
            </summary>
        </member>
        <member name="M:Tao.OpenAl.Al.alBuffer3f(System.Int32,System.Int32,System.Single,System.Single,System.Single)">
            <summary>
                Set Buffer parameters.
            </summary>
        </member>
        <member name="M:Tao.OpenAl.Al.alBufferfv(System.Int32,System.Int32,System.Single@)">
            <summary>
                Set Buffer parameters.
            </summary>
        </member>
        <member name="M:Tao.OpenAl.Al.alBufferi(System.Int32,System.Int32,System.Int32)">
            <summary>
                Set Buffer parameters.
            </summary>
        </member>
        <member name="M:Tao.OpenAl.Al.alBuffer3i(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Set Buffer parameters.
            </summary>
        </member>
        <member name="M:Tao.OpenAl.Al.alBufferiv(System.Int32,System.Int32,System.Int32@)">
            <summary>
                Set Buffer parameters.
            </summary>
        </member>
        <member name="M:Tao.OpenAl.Al.alDeleteBuffers(System.Int32,System.Int32@)">
            <summary>
                Deletes one or more buffers.
            </summary>
            <param name="number">
                The number of buffers to be deleted.
            </param>
            <param name="buffer">
                Pointer to an array of buffer names identifying the buffers to be deleted.
            </param>
            <remarks>
                If the requested number of buffers cannot be deleted, an error will be
                generated which can be detected with <see cref="M:Tao.OpenAl.Al.alGetError"/>.  If an error
                occurs, no buffers will be deleted.  If <i>number</i> equals zero,
                <b>alDeleteBuffers</b> does nothing and will not return an error.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alDeleteBuffers(System.Int32,System.Int32[])">
            <summary>
                Deletes one or more buffers.
            </summary>
            <param name="number">
                The number of buffers to be deleted.
            </param>
            <param name="buffers">
                Pointer to an array of buffer names identifying the buffers to be deleted.
            </param>
            <remarks>
                If the requested number of buffers cannot be deleted, an error will be
                generated which can be detected with <see cref="M:Tao.OpenAl.Al.alGetError"/>.  If an error
                occurs, no buffers will be deleted.  If <i>number</i> equals zero,
                <b>alDeleteBuffers</b> does nothing and will not return an error.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alDeleteBuffers(System.Int32,System.IntPtr)">
            <summary>
                Deletes one or more buffers.
            </summary>
            <param name="number">
                The number of buffers to be deleted.
            </param>
            <param name="buffers">
                Pointer to an array of buffer names identifying the buffers to be deleted.
            </param>
            <remarks>
                If the requested number of buffers cannot be deleted, an error will be
                generated which can be detected with <see cref="M:Tao.OpenAl.Al.alGetError"/>.  If an error
                occurs, no buffers will be deleted.  If <i>number</i> equals zero,
                <b>alDeleteBuffers</b> does nothing and will not return an error.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alDeleteBuffers(System.Int32,System.Int32*)">
            <summary>
                Deletes one or more buffers.
            </summary>
            <param name="number">
                The number of buffers to be deleted.
            </param>
            <param name="buffers">
                Pointer to an array of buffer names identifying the buffers to be deleted.
            </param>
            <remarks>
                If the requested number of buffers cannot be deleted, an error will be
                generated which can be detected with <see cref="M:Tao.OpenAl.Al.alGetError"/>.  If an error
                occurs, no buffers will be deleted.  If <i>number</i> equals zero,
                <b>alDeleteBuffers</b> does nothing and will not return an error.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alDeleteSources(System.Int32,System.Int32@)">
            <summary>
                Deletes one or more sources.
            </summary>
            <param name="number">
                The number of sources to be deleted.
            </param>
            <param name="sources">
                Pointer to an array of source names identifying the sources to be deleted.
            </param>
            <remarks>
                If the requested number of sources cannot be deleted, an error will be generated
                which can be detected with <see cref="M:Tao.OpenAl.Al.alGetError"/>.  If an error occurs, no
                sources will be deleted.  If <i>number</i> equals zero, <b>alDeleteSources</b>
                does nothing and will not return an error.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alDeleteSources(System.Int32,System.Int32[])">
            <summary>
                Deletes one or more sources.
            </summary>
            <param name="number">
                The number of sources to be deleted.
            </param>
            <param name="sources">
                Pointer to an array of source names identifying the sources to be deleted.
            </param>
            <remarks>
                If the requested number of sources cannot be deleted, an error will be generated
                which can be detected with <see cref="M:Tao.OpenAl.Al.alGetError"/>.  If an error occurs, no
                sources will be deleted.  If <i>number</i> equals zero, <b>alDeleteSources</b>
                does nothing and will not return an error.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alDeleteSources(System.Int32,System.IntPtr)">
            <summary>
                Deletes one or more sources.
            </summary>
            <param name="number">
                The number of sources to be deleted.
            </param>
            <param name="sources">
                Pointer to an array of source names identifying the sources to be deleted.
            </param>
            <remarks>
                If the requested number of sources cannot be deleted, an error will be generated
                which can be detected with <see cref="M:Tao.OpenAl.Al.alGetError"/>.  If an error occurs, no
                sources will be deleted.  If <i>number</i> equals zero, <b>alDeleteSources</b>
                does nothing and will not return an error.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alDeleteSources(System.Int32,System.Int32*)">
            <summary>
                Deletes one or more sources.
            </summary>
            <param name="number">
                The number of sources to be deleted.
            </param>
            <param name="sources">
                Pointer to an array of source names identifying the sources to be deleted.
            </param>
            <remarks>
                If the requested number of sources cannot be deleted, an error will be generated
                which can be detected with <see cref="M:Tao.OpenAl.Al.alGetError"/>.  If an error occurs, no
                sources will be deleted.  If <i>number</i> equals zero, <b>alDeleteSources</b>
                does nothing and will not return an error.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alDisable(System.Int32)">
            <summary>
                Disables a feature of the OpenAL driver.
            </summary>
            <param name="capability">
                The capability to disable.
            </param>
            <remarks>
                At the time of this writing, there are no features to be disabled using this
                function, so if it is called the error <see cref="F:Tao.OpenAl.Al.AL_INVALID_ENUM"/> will be
                generated.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alDistanceModel(System.Int32)">
            <summary>
                Selects the OpenAL distance model.
            </summary>
            <param name="val">
                <para>
                    The distance model to be set:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_NONE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_INVERSE_DISTANCE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_INVERSE_DISTANCE_CLAMPED"/></item>
                    </list>
                </para>
            </param>
            <remarks>
                <para>
                    The default distance model in OpenAL is <see cref="F:Tao.OpenAl.Al.AL_INVERSE_DISTANCE"/>.
                </para>
                <para>
                    The <see cref="F:Tao.OpenAl.Al.AL_INVERSE_DISTANCE"/> model works according to the following
                    formula:
                </para>
                <para>
                    <c>
                        G_dB = AL_GAIN – 20log10(1 + AL_ROLLOFF_FACTOR * (distance – AL_REFERENCE_DISTANCE) / AL_REFERENCE_DISTANCE));
                        G_dB = min(G_dB, AL_MAX_GAIN);
                        G_dB = max(G_dB, AL_MIN_GAIN);
                    </c>
                </para>
                <para>
                    The <see cref="F:Tao.OpenAl.Al.AL_INVERSE_DISTANCE_CLAMPED"/> model works according to the
                    following formula:
                </para>
                <para>
                    <c>
                        distance = max(distance, AL_REFERENCE_DISTANCE);
                        distance = min(distance, AL_MAX_DISTANCE);
                        G_dB = AL_GAIN – 20log10(1 + AL_ROLLOFF_FACTOR * (distance – AL_REFERENCE_DISTANCE) / AL_REFERENCE_DISTANCE));
                        G_dB = min(G_dB, AL_MAX_GAIN);
                        G_dB = max(G_dB, AL_MIN_GAIN);
                    </c>
                </para>
                <para>
                    The <see cref="F:Tao.OpenAl.Al.AL_NONE"/> model works according to the following formula:
                </para>
                <para>
                    <c>
                        G_db = AL_GAIN;
                    </c>
                </para>
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alDopplerFactor(System.Single)">
            <summary>
                Selects the OpenAL Doppler factor value.
            </summary>
            <param name="val">
                The Doppler scale value to set.
            </param>
            <remarks>
                The default Doppler factor value is 1.0.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alDopplerVelocity(System.Single)">
            <summary>
                Selects the OpenAL Doppler velocity value.
            </summary>
            <param name="val">
                The Doppler velocity value to set.
            </param>
            <remarks>
                The default Doppler velocity value is 343.3.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alSpeedOfSound(System.Single)">
            <summary>
                Selects the OpenAL Speed of Sound value.
            </summary>
            <param name="val">
                The Speed of Sound value to set.
            </param>
            <remarks>
                
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alEnable(System.Int32)">
            <summary>
                Enables a feature of the OpenAL driver.
            </summary>
            <param name="capability">
                The capability to enable.
            </param>
            <remarks>
                At the time of this writing, there are no features to be enabled using this
                function, so if it is called the error <see cref="F:Tao.OpenAl.Al.AL_INVALID_ENUM"/> will be
                generated.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGenBuffers(System.Int32,System.Int32@)">
            <summary>
                Generates one or more buffers.
            </summary>
            <param name="number">
                The number of buffers to be generated.
            </param>
            <param name="buffer">
                Pointer to an array of integer values which will store the names of the new
                buffers.
            </param>
            <remarks>
                If the requested number of buffers cannot be created, an error will be generated
                which can be detected with <see cref="M:Tao.OpenAl.Al.alGetError"/>.  If an error occurs, no
                buffers will be generated.  If <i>number</i> equals zero, <b>alGenBuffers</b>
                does nothing and does not return an error.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGenBuffers(System.Int32,System.Int32[])">
            <summary>
                Generates one or more buffers.
            </summary>
            <param name="number">
                The number of buffers to be generated.
            </param>
            <param name="buffers">
                Pointer to an array of integer values which will store the names of the new
                buffers.
            </param>
            <remarks>
                If the requested number of buffers cannot be created, an error will be generated
                which can be detected with <see cref="M:Tao.OpenAl.Al.alGetError"/>.  If an error occurs, no
                buffers will be generated.  If <i>number</i> equals zero, <b>alGenBuffers</b>
                does nothing and does not return an error.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGenBuffers(System.Int32,System.IntPtr)">
            <summary>
                Generates one or more buffers.
            </summary>
            <param name="number">
                The number of buffers to be generated.
            </param>
            <param name="buffers">
                Pointer to an array of integer values which will store the names of the new
                buffers.
            </param>
            <remarks>
                If the requested number of buffers cannot be created, an error will be generated
                which can be detected with <see cref="M:Tao.OpenAl.Al.alGetError"/>.  If an error occurs, no
                buffers will be generated.  If <i>number</i> equals zero, <b>alGenBuffers</b>
                does nothing and does not return an error.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGenBuffers(System.Int32,System.Int32*)">
            <summary>
                Generates one or more buffers.
            </summary>
            <param name="number">
                The number of buffers to be generated.
            </param>
            <param name="buffers">
                Pointer to an array of integer values which will store the names of the new
                buffers.
            </param>
            <remarks>
                If the requested number of buffers cannot be created, an error will be generated
                which can be detected with <see cref="M:Tao.OpenAl.Al.alGetError"/>.  If an error occurs, no
                buffers will be generated.  If <i>number</i> equals zero, <b>alGenBuffers</b>
                does nothing and does not return an error.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGenSources(System.Int32,System.Int32@)">
            <summary>
                Generates one or more sources.
            </summary>
            <param name="number">
                The number of sources to be generated.
            </param>
            <param name="source">
                Pointer to an array of integer values which will store the names of the new
                sources.
            </param>
            <remarks>
                If the requested number of sources cannot be created, an error will be generated
                which can be detected with <see cref="M:Tao.OpenAl.Al.alGetError"/>.  If an error occurs, no
                sources will be generated.  If <i>number</i> equals zero, <b>alGenSources</b>
                does nothing and does not return an error.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGenSources(System.Int32,System.Int32[])">
            <summary>
                Generates one or more sources.
            </summary>
            <param name="number">
                The number of sources to be generated.
            </param>
            <param name="sources">
                Pointer to an array of integer values which will store the names of the new
                sources.
            </param>
            <remarks>
                If the requested number of sources cannot be created, an error will be generated
                which can be detected with <see cref="M:Tao.OpenAl.Al.alGetError"/>.  If an error occurs, no
                sources will be generated.  If <i>number</i> equals zero, <b>alGenSources</b>
                does nothing and does not return an error.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGenSources(System.Int32,System.IntPtr)">
            <summary>
                Generates one or more sources.
            </summary>
            <param name="number">
                The number of sources to be generated.
            </param>
            <param name="sources">
                Pointer to an array of integer values which will store the names of the new
                sources.
            </param>
            <remarks>
                If the requested number of sources cannot be created, an error will be generated
                which can be detected with <see cref="M:Tao.OpenAl.Al.alGetError"/>.  If an error occurs, no
                sources will be generated.  If <i>number</i> equals zero, <b>alGenSources</b>
                does nothing and does not return an error.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGenSources(System.Int32,System.Int32*)">
            <summary>
                Generates one or more sources.
            </summary>
            <param name="number">
                The number of sources to be generated.
            </param>
            <param name="sources">
                Pointer to an array of integer values which will store the names of the new
                sources.
            </param>
            <remarks>
                If the requested number of sources cannot be created, an error will be generated
                which can be detected with <see cref="M:Tao.OpenAl.Al.alGetError"/>.  If an error occurs, no
                sources will be generated.  If <i>number</i> equals zero, <b>alGenSources</b>
                does nothing and does not return an error.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetBoolean(System.Int32)">
            <summary>
                Returns a boolean OpenAL state.
            </summary>
            <param name="state">
                The state to be queried.
            </param>
            <returns>
                The boolean value (<see cref="F:Tao.OpenAl.Al.AL_TRUE"/> or <see cref="F:Tao.OpenAl.Al.AL_FALSE"/>) described
                by <i>state</i> will be returned.
            </returns>
            <remarks>
                There aren’t any boolean states defined at the time of this writing, so this
                function will always generate the error <see cref="F:Tao.OpenAl.Al.AL_INVALID_ENUM"/>.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetBooleanv(System.Int32,System.Int32@)">
            <summary>
                Retrieves a boolean OpenAL state.
            </summary>
            <param name="state">
                The state to be queried.
            </param>
            <param name="output">
                A pointer to the location where the state will be stored.
            </param>
            <remarks>
                There aren’t any boolean states defined at the time of this writing, so this
                function will always generate the error <see cref="F:Tao.OpenAl.Al.AL_INVALID_ENUM"/>.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetBooleanv(System.Int32,System.Int32[])">
            <summary>
                Retrieves a boolean OpenAL state.
            </summary>
            <param name="state">
                The state to be queried.
            </param>
            <param name="output">
                A pointer to the location where the state will be stored.
            </param>
            <remarks>
                There aren’t any boolean states defined at the time of this writing, so this
                function will always generate the error <see cref="F:Tao.OpenAl.Al.AL_INVALID_ENUM"/>.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetBooleanv(System.Int32,System.IntPtr)">
            <summary>
                Retrieves a boolean OpenAL state.
            </summary>
            <param name="state">
                The state to be queried.
            </param>
            <param name="output">
                A pointer to the location where the state will be stored.
            </param>
            <remarks>
                There aren’t any boolean states defined at the time of this writing, so this
                function will always generate the error <see cref="F:Tao.OpenAl.Al.AL_INVALID_ENUM"/>.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetBooleanv(System.Int32,System.Int32*)">
            <summary>
                Retrieves a boolean OpenAL state.
            </summary>
            <param name="state">
                The state to be queried.
            </param>
            <param name="output">
                A pointer to the location where the state will be stored.
            </param>
            <remarks>
                There aren’t any boolean states defined at the time of this writing, so this
                function will always generate the error <see cref="F:Tao.OpenAl.Al.AL_INVALID_ENUM"/>.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetBufferf(System.Int32,System.Int32,System.Int32@)">
            <summary>
                Retrieves a floating point property of a buffer.
            </summary>
            <param name="buffer">
                Buffer name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                The name of the attribute to be retrieved.
            </param>
            <param name="val">
                A pointer to an float to hold the retrieved data.
            </param>
            <remarks>
                There are no float attributes for buffers at this time.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetBufferf(System.Int32,System.Int32,System.Int32[])">
            <summary>
                Retrieves a floating point property of a buffer.
            </summary>
            <param name="buffer">
                Buffer name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                The name of the attribute to be retrieved.
            </param>
            <param name="val">
                A pointer to an float to hold the retrieved data.
            </param>
            <remarks>
                There are no float attributes for buffers at this time.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetBufferf(System.Int32,System.Int32,System.IntPtr)">
            <summary>
                Retrieves a floating point property of a buffer.
            </summary>
            <param name="buffer">
                Buffer name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                The name of the attribute to be retrieved.
            </param>
            <param name="val">
                A pointer to an float to hold the retrieved data.
            </param>
            <remarks>
                There are no float attributes for buffers at this time.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetBufferf(System.Int32,System.Int32,System.Single*)">
            <summary>
                Retrieves a floating point property of a buffer.
            </summary>
            <param name="buffer">
                Buffer name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                The name of the attribute to be retrieved.
            </param>
            <param name="val">
                A pointer to an float to hold the retrieved data.
            </param>
            <remarks>
                There are no float attributes for buffers at this time.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetBuffer3f(System.Int32,System.Int32,System.Single@,System.Single@,System.Single@)">
            <summary>
                Retrieves a floating point property of a buffer.
            </summary>
            <param name="buffer">
                Buffer name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                The name of the attribute to be retrieved.
            </param>
            <param name="value1">
                A pointer to an float to hold the retrieved data.
            </param>
            <param name="value2">
                A pointer to an float to hold the retrieved data.
            </param>
            <param name="value3">
                A pointer to an float to hold the retrieved data.
            </param>
            <remarks>
                There are no float attributes for buffers at this time.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetBufferfv(System.Int32,System.Int32,System.Single@)">
            <summary>
                Retrieves a floating point property of a buffer.
            </summary>
            <param name="buffer">
                Buffer name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                The name of the attribute to be retrieved.
            </param>
            <param name="val">
                A pointer to an float to hold the retrieved data.
            </param>
            <remarks>
                There are no float attributes for buffers at this time.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetBufferfv(System.Int32,System.Int32,System.Single[])">
            <summary>
                Retrieves a floating point property of a buffer.
            </summary>
            <param name="buffer">
                Buffer name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                The name of the attribute to be retrieved.
            </param>
            <param name="val">
                A pointer to an float to hold the retrieved data.
            </param>
            <remarks>
                There are no float attributes for buffers at this time.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetBufferfv(System.Int32,System.Int32,System.IntPtr)">
            <summary>
                Retrieves a floating point property of a buffer.
            </summary>
            <param name="buffer">
                Buffer name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                The name of the attribute to be retrieved.
            </param>
            <param name="val">
                A pointer to an float to hold the retrieved data.
            </param>
            <remarks>
                There are no float attributes for buffers at this time.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetBufferfv(System.Int32,System.Int32,System.Single*)">
            <summary>
                Retrieves a floating point property of a buffer.
            </summary>
            <param name="buffer">
                Buffer name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                The name of the attribute to be retrieved.
            </param>
            <param name="val">
                A pointer to an float to hold the retrieved data.
            </param>
            <remarks>
                There are no float attributes for buffers at this time.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetBufferi(System.Int32,System.Int32,System.Int32@)">
            <summary>
                Retrieves an integer property of a buffer.
            </summary>
            <param name="buffer">
                Buffer name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute to be retrieved:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_FREQUENCY"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_BITS"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_CHANNELS"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_SIZE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_DATA"/></item>
                    </list>
                </para>
            </param>
            <param name="val">
                A pointer to an integer to hold the retrieved data.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetBufferi(System.Int32,System.Int32,System.Int32[])">
            <summary>
                Retrieves an integer property of a buffer.
            </summary>
            <param name="buffer">
                Buffer name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute to be retrieved:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_FREQUENCY"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_BITS"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_CHANNELS"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_SIZE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_DATA"/></item>
                    </list>
                </para>
            </param>
            <param name="val">
                A pointer to an integer to hold the retrieved data.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetBufferi(System.Int32,System.Int32,System.IntPtr)">
            <summary>
                Retrieves an integer property of a buffer.
            </summary>
            <param name="buffer">
                Buffer name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute to be retrieved:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_FREQUENCY"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_BITS"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_CHANNELS"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_SIZE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_DATA"/></item>
                    </list>
                </para>
            </param>
            <param name="val">
                A pointer to an integer to hold the retrieved data.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetBufferi(System.Int32,System.Int32,System.Int32*)">
            <summary>
                Retrieves an integer property of a buffer.
            </summary>
            <param name="buffer">
                Buffer name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute to be retrieved:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_FREQUENCY"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_BITS"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_CHANNELS"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_SIZE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_DATA"/></item>
                    </list>
                </para>
            </param>
            <param name="val">
                A pointer to an integer to hold the retrieved data.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetBuffer3i(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
                Retrieves an integer property of a buffer.
            </summary>
            <param name="buffer">
                Buffer name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                The name of the attribute to be retrieved.
            </param>
            <param name="value1">
                A pointer to an int to hold the retrieved data.
            </param>
            <param name="value2">
                A pointer to an int to hold the retrieved data.
            </param>
            <param name="value3">
                A pointer to an int to hold the retrieved data.
            </param>
            <remarks>
                There are no int attributes for buffers at this time.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetBufferiv(System.Int32,System.Int32,System.Int32@)">
            <summary>
                Retrieves an integer property of a buffer.
            </summary>
            <param name="buffer">
                Buffer name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute to be retrieved:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_FREQUENCY"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_BITS"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_CHANNELS"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_SIZE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_DATA"/></item>
                    </list>
                </para>
            </param>
            <param name="val">
                A pointer to an integer to hold the retrieved data.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetBufferiv(System.Int32,System.Int32,System.Int32[])">
            <summary>
                Retrieves an integer property of a buffer.
            </summary>
            <param name="buffer">
                Buffer name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute to be retrieved:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_FREQUENCY"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_BITS"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_CHANNELS"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_SIZE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_DATA"/></item>
                    </list>
                </para>
            </param>
            <param name="val">
                A pointer to an integer to hold the retrieved data.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetBufferiv(System.Int32,System.Int32,System.IntPtr)">
            <summary>
                Retrieves an integer property of a buffer.
            </summary>
            <param name="buffer">
                Buffer name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute to be retrieved:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_FREQUENCY"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_BITS"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_CHANNELS"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_SIZE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_DATA"/></item>
                    </list>
                </para>
            </param>
            <param name="val">
                A pointer to an integer to hold the retrieved data.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetBufferiv(System.Int32,System.Int32,System.Int32*)">
            <summary>
                Retrieves an integer property of a buffer.
            </summary>
            <param name="buffer">
                Buffer name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute to be retrieved:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_FREQUENCY"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_BITS"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_CHANNELS"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_SIZE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_DATA"/></item>
                    </list>
                </para>
            </param>
            <param name="val">
                A pointer to an integer to hold the retrieved data.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetDouble(System.Int32)">
            <summary>
                Returns a double precision floating point OpenAL state.
            </summary>
            <param name="state">
                The state to be queried.
            </param>
            <returns>
                The double value described by <i>state</i> will be returned.
            </returns>
            <remarks>
                There aren’t any double precision floating point states defined at the time of
                this writing, so this function will always generate the error
                <see cref="F:Tao.OpenAl.Al.AL_INVALID_ENUM"/>.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetDoublev(System.Int32,System.Double@)">
            <summary>
                Retrieves a double precision floating point OpenAL state.
            </summary>
            <param name="state">
                The state to be queried.
            </param>
            <param name="output">
                A pointer to the location where the state will be stored.
            </param>
            <remarks>
                There aren’t any double precision floating point states defined at the time of
                this writing, so this function will always generate the error
                <see cref="F:Tao.OpenAl.Al.AL_INVALID_ENUM"/>.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetDoublev(System.Int32,System.Double[])">
            <summary>
                Retrieves a double precision floating point OpenAL state.
            </summary>
            <param name="state">
                The state to be queried.
            </param>
            <param name="output">
                A pointer to the location where the state will be stored.
            </param>
            <remarks>
                There aren’t any double precision floating point states defined at the time of
                this writing, so this function will always generate the error
                <see cref="F:Tao.OpenAl.Al.AL_INVALID_ENUM"/>.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetDoublev(System.Int32,System.IntPtr)">
            <summary>
                Retrieves a double precision floating point OpenAL state.
            </summary>
            <param name="state">
                The state to be queried.
            </param>
            <param name="output">
                A pointer to the location where the state will be stored.
            </param>
            <remarks>
                There aren’t any double precision floating point states defined at the time of
                this writing, so this function will always generate the error
                <see cref="F:Tao.OpenAl.Al.AL_INVALID_ENUM"/>.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetDoublev(System.Int32,System.Double*)">
            <summary>
                Retrieves a double precision floating point OpenAL state.
            </summary>
            <param name="state">
                The state to be queried.
            </param>
            <param name="output">
                A pointer to the location where the state will be stored.
            </param>
            <remarks>
                There aren’t any double precision floating point states defined at the time of
                this writing, so this function will always generate the error
                <see cref="F:Tao.OpenAl.Al.AL_INVALID_ENUM"/>.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetEnumValue(System.String)">
            <summary>
                Returns the enumeration value of an OpenAL enum described by a string.
            </summary>
            <param name="enumName">
                A string describing an OpenAL enum.
            </param>
            <returns>
                The actual value for the described enum is returned.
            </returns>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetError">
            <summary>
                Returns the current error state and then clears the error state.
            </summary>
            <returns>
                The error state.
            </returns>
            <remarks>
                When an OpenAL error occurs, the error state is set and will not be changed until
                the error state is retrieved using <b>alGetError</b>.  Whenever <b>alGetError</b>
                is called, the error state is cleared and the last state (the current state when
                the call was made) is returned.  To isolate error detection to a specific portion
                of code, <b>alGetError</b> should be called before the isolated section to clear
                the current error state.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetFloat(System.Int32)">
            <summary>
                Returns a floating point OpenAL state.
            </summary>
            <param name="state">
                <para>
                    The state to be queried:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_DOPPLER_FACTOR"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_DOPPLER_VELOCITY"/></item>
                    </list>
                </para>
            </param>
            <returns>
                The floating point value described by <i>state</i> will be returned.
            </returns>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetFloatv(System.Int32,System.Single@)">
            <summary>
                Retrieves a floating point OpenAL state.
            </summary>
            <param name="state">
                <para>
                    The state to be queried:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_DOPPLER_FACTOR"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_DOPPLER_VELOCITY"/></item>
                    </list>
                </para>
            </param>
            <param name="output">
                A pointer to the location where the state will be stored.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetFloatv(System.Int32,System.Single[])">
            <summary>
                Retrieves a floating point OpenAL state.
            </summary>
            <param name="state">
                <para>
                    The state to be queried:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_DOPPLER_FACTOR"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_DOPPLER_VELOCITY"/></item>
                    </list>
                </para>
            </param>
            <param name="output">
                A pointer to the location where the state will be stored.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetFloatv(System.Int32,System.IntPtr)">
            <summary>
                Retrieves a floating point OpenAL state.
            </summary>
            <param name="state">
                <para>
                    The state to be queried:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_DOPPLER_FACTOR"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_DOPPLER_VELOCITY"/></item>
                    </list>
                </para>
            </param>
            <param name="output">
                A pointer to the location where the state will be stored.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetFloatv(System.Int32,System.Single*)">
            <summary>
                Retrieves a floating point OpenAL state.
            </summary>
            <param name="state">
                <para>
                    The state to be queried:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_DOPPLER_FACTOR"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_DOPPLER_VELOCITY"/></item>
                    </list>
                </para>
            </param>
            <param name="output">
                A pointer to the location where the state will be stored.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetInteger(System.Int32)">
            <summary>
                Returns an integer OpenAL state.
            </summary>
            <param name="state">
                <para>
                    The state to be queried:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_DISTANCE_MODEL"/></item>
                    </list>
                </para>
            </param>
            <returns>
                The integer value described by <i>state</i> will be returned.
            </returns>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetIntegerv(System.Int32,System.Int32@)">
            <summary>
                Retrieves an integer OpenAL state.
            </summary>
            <param name="state">
                <para>
                    The state to be queried:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_DISTANCE_MODEL"/></item>
                    </list>
                </para>
            </param>
            <param name="output">
                A pointer to the location where the state will be stored.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetIntegerv(System.Int32,System.Int32[])">
            <summary>
                Retrieves an integer OpenAL state.
            </summary>
            <param name="state">
                <para>
                    The state to be queried:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_DISTANCE_MODEL"/></item>
                    </list>
                </para>
            </param>
            <param name="output">
                A pointer to the location where the state will be stored.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetIntegerv(System.Int32,System.IntPtr)">
            <summary>
                Retrieves an integer OpenAL state.
            </summary>
            <param name="state">
                <para>
                    The state to be queried:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_DISTANCE_MODEL"/></item>
                    </list>
                </para>
            </param>
            <param name="output">
                A pointer to the location where the state will be stored.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetIntegerv(System.Int32,System.Int32*)">
            <summary>
                Retrieves an integer OpenAL state.
            </summary>
            <param name="state">
                <para>
                    The state to be queried:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_DISTANCE_MODEL"/></item>
                    </list>
                </para>
            </param>
            <param name="output">
                A pointer to the location where the state will be stored.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetListener3f(System.Int32,System.Single@,System.Single@,System.Single@)">
            <summary>
                Retrieves a set of three floating point values from a property of the listener.
            </summary>
            <param name="attribute">
                <para>
                    The name of the attribute to be queried:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_POSITION"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_VELOCITY"/></item>
                    </list>
                </para>
            </param>
            <param name="output1">
                Pointer to the the floating point being retrieved.
            </param>
            <param name="output2">
                Pointer to the the floating point being retrieved.
            </param>
            <param name="output3">
                Pointer to the the floating point being retrieved.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetListener3f(System.Int32,System.Single[],System.Single[],System.Single[])">
            <summary>
                Retrieves a set of three floating point values from a property of the listener.
            </summary>
            <param name="attribute">
                <para>
                    The name of the attribute to be queried:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_POSITION"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_VELOCITY"/></item>
                    </list>
                </para>
            </param>
            <param name="output1">
                Pointer to the the floating point being retrieved.
            </param>
            <param name="output2">
                Pointer to the the floating point being retrieved.
            </param>
            <param name="output3">
                Pointer to the the floating point being retrieved.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetListener3f(System.Int32,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
                Retrieves a set of three floating point values from a property of the listener.
            </summary>
            <param name="attribute">
                <para>
                    The name of the attribute to be queried:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_POSITION"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_VELOCITY"/></item>
                    </list>
                </para>
            </param>
            <param name="output1">
                Pointer to the the floating point being retrieved.
            </param>
            <param name="output2">
                Pointer to the the floating point being retrieved.
            </param>
            <param name="output3">
                Pointer to the the floating point being retrieved.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetListener3f(System.Int32,System.Single*,System.Single*,System.Single*)">
            <summary>
                Retrieves a set of three floating point values from a property of the listener.
            </summary>
            <param name="attribute">
                <para>
                    The name of the attribute to be queried:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_POSITION"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_VELOCITY"/></item>
                    </list>
                </para>
            </param>
            <param name="output1">
                Pointer to the the floating point being retrieved.
            </param>
            <param name="output2">
                Pointer to the the floating point being retrieved.
            </param>
            <param name="output3">
                Pointer to the the floating point being retrieved.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetListenerf(System.Int32,System.Single@)">
            <summary>
                Retrieves a floating point property of the listener.
            </summary>
            <param name="attribute">
                <para>
                    The name of the attribute to be queried:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_GAIN"/></item>
                    </list>
                </para>
            </param>
            <param name="output">
                A pointer to the floating point value being retrieved.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetListenerf(System.Int32,System.Single[])">
            <summary>
                Retrieves a floating point property of the listener.
            </summary>
            <param name="attribute">
                <para>
                    The name of the attribute to be queried:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_GAIN"/></item>
                    </list>
                </para>
            </param>
            <param name="output">
                A pointer to the floating point value being retrieved.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetListenerf(System.Int32,System.IntPtr)">
            <summary>
                Retrieves a floating point property of the listener.
            </summary>
            <param name="attribute">
                <para>
                    The name of the attribute to be queried:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_GAIN"/></item>
                    </list>
                </para>
            </param>
            <param name="output">
                A pointer to the floating point value being retrieved.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetListenerf(System.Int32,System.Single*)">
            <summary>
                Retrieves a floating point property of the listener.
            </summary>
            <param name="attribute">
                <para>
                    The name of the attribute to be queried:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_GAIN"/></item>
                    </list>
                </para>
            </param>
            <param name="output">
                A pointer to the floating point value being retrieved.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetListenerfv(System.Int32,System.Single@)">
            <summary>
                Retrieves a floating point-vector property of the listener.
            </summary>
            <param name="attribute">
                <para>
                    The name of the attribute to be queried:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_POSITION"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_VELOCITY"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_ORIENTATION"/></item>
                    </list>
                </para>
            </param>
            <param name="output">
                A pointer to the floating point-vector value being retrieved.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetListenerfv(System.Int32,System.Single[])">
            <summary>
                Retrieves a floating point-vector property of the listener.
            </summary>
            <param name="attribute">
                <para>
                    The name of the attribute to be queried:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_POSITION"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_VELOCITY"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_ORIENTATION"/></item>
                    </list>
                </para>
            </param>
            <param name="output">
                A pointer to the floating point-vector value being retrieved.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetListenerfv(System.Int32,System.IntPtr)">
            <summary>
                Retrieves a floating point-vector property of the listener.
            </summary>
            <param name="attribute">
                <para>
                    The name of the attribute to be queried:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_POSITION"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_VELOCITY"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_ORIENTATION"/></item>
                    </list>
                </para>
            </param>
            <param name="output">
                A pointer to the floating point-vector value being retrieved.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetListenerfv(System.Int32,System.Single*)">
            <summary>
                Retrieves a floating point-vector property of the listener.
            </summary>
            <param name="attribute">
                <para>
                    The name of the attribute to be queried:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_POSITION"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_VELOCITY"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_ORIENTATION"/></item>
                    </list>
                </para>
            </param>
            <param name="output">
                A pointer to the floating point-vector value being retrieved.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetListeneri(System.Int32,System.Int32@)">
            <summary>
                Retrieves an integer property of the listener.
            </summary>
            <param name="attribute">
                The name of the attribute to be queried.
            </param>
            <param name="output">
                A pointer to the integer value being retrieved.
            </param>
            <remarks>
                There are no integer listener attributes at this time.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetListeneri(System.Int32,System.Int32[])">
            <summary>
                Retrieves an integer property of the listener.
            </summary>
            <param name="attribute">
                The name of the attribute to be queried.
            </param>
            <param name="output">
                A pointer to the integer value being retrieved.
            </param>
            <remarks>
                There are no integer listener attributes at this time.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetListeneri(System.Int32,System.IntPtr)">
            <summary>
                Retrieves an integer property of the listener.
            </summary>
            <param name="attribute">
                The name of the attribute to be queried.
            </param>
            <param name="output">
                A pointer to the integer value being retrieved.
            </param>
            <remarks>
                There are no integer listener attributes at this time.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetListeneri(System.Int32,System.Int32*)">
            <summary>
                Retrieves an integer property of the listener.
            </summary>
            <param name="attribute">
                The name of the attribute to be queried.
            </param>
            <param name="output">
                A pointer to the integer value being retrieved.
            </param>
            <remarks>
                There are no integer listener attributes at this time.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetListener3i(System.Int32,System.Int32*,System.Int32*,System.Int32*)">
            <summary>
                Retrieves a set of three integer values from a property of the listener.
            </summary>
            <param name="attribute">
                <para>
                    The name of the attribute to be queried:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_POSITION"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_VELOCITY"/></item>
                    </list>
                </para>
            </param>
            <param name="output1">
                Pointer to the integer being retrieved.
            </param>
            <param name="output2">
                Pointer to the integer being retrieved.
            </param>
            <param name="output3">
                Pointer to the intger being retrieved.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetListeneriv(System.Int32,System.Int32@)">
            <summary>
                Retrieves an integer property of the listener.
            </summary>
            <param name="attribute">
                The name of the attribute to be queried.
            </param>
            <param name="output">
                A pointer to the integer value being retrieved.
            </param>
            <remarks>
                There are no integer listener attributes at this time.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetListeneriv(System.Int32,System.Int32[])">
            <summary>
                Retrieves an integer property of the listener.
            </summary>
            <param name="attribute">
                The name of the attribute to be queried.
            </param>
            <param name="output">
                A pointer to the integer value being retrieved.
            </param>
            <remarks>
                There are no integer listener attributes at this time.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetListeneriv(System.Int32,System.IntPtr)">
            <summary>
                Retrieves an integer property of the listener.
            </summary>
            <param name="attribute">
                The name of the attribute to be queried.
            </param>
            <param name="output">
                A pointer to the integer value being retrieved.
            </param>
            <remarks>
                There are no integer listener attributes at this time.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetListeneriv(System.Int32,System.Int32*)">
            <summary>
                Retrieves an integer property of the listener.
            </summary>
            <param name="attribute">
                The name of the attribute to be queried.
            </param>
            <param name="output">
                A pointer to the integer value being retrieved.
            </param>
            <remarks>
                There are no integer listener attributes at this time.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetProcAddress(System.String)">
            <summary>
                Returns the address of an OpenAL extension function.
            </summary>
            <param name="functionName">
                A string containing the function name.
            </param>
            <returns>
                A pointer to the desired function is returned.
            </returns>
            <remarks>
                The return value will be IntPtr.Zero if the function is not found.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetSource3f(System.Int32,System.Int32,System.Single@,System.Single@,System.Single@)">
            <summary>
                Retrieves an integer property of a source.
            </summary>
            <param name="source">
                Source name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute to retrieve:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_POSITION"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_VELOCITY"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_DIRECTION"/></item>
                    </list>
                </para>
            </param>
            <param name="value1">
                The float values which the attribute will be set to.
            </param>
            <param name="value2">
                The float values which the attribute will be set to.
            </param>
            <param name="value3">
                The float values which the attribute will be set to.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetSource3f(System.Int32,System.Int32,System.Single[],System.Single[],System.Single[])">
            <summary>
                Retrieves an integer property of a source.
            </summary>
            <param name="source">
                Source name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute to retrieve:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_POSITION"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_VELOCITY"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_DIRECTION"/></item>
                    </list>
                </para>
            </param>
            <param name="value1">
                The float values which the attribute will be set to.
            </param>
            <param name="value2">
                The float values which the attribute will be set to.
            </param>
            <param name="value3">
                The float values which the attribute will be set to.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetSource3f(System.Int32,System.Int32,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
                Retrieves an integer property of a source.
            </summary>
            <param name="source">
                Source name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute to retrieve:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_POSITION"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_VELOCITY"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_DIRECTION"/></item>
                    </list>
                </para>
            </param>
            <param name="value1">
                The float values which the attribute will be set to.
            </param>
            <param name="value2">
                The float values which the attribute will be set to.
            </param>
            <param name="value3">
                The float values which the attribute will be set to.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetSource3f(System.Int32,System.Int32,System.Single*,System.Single*,System.Single*)">
            <summary>
                Retrieves an integer property of a source.
            </summary>
            <param name="source">
                Source name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute to retrieve:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_POSITION"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_VELOCITY"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_DIRECTION"/></item>
                    </list>
                </para>
            </param>
            <param name="value1">
                The float values which the attribute will be set to.
            </param>
            <param name="value2">
                The float values which the attribute will be set to.
            </param>
            <param name="value3">
                The float values which the attribute will be set to.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetSourcef(System.Int32,System.Int32,System.Single@)">
            <summary>
                Retrieves a floating point property of a source.
            </summary>
            <param name="source">
                Source name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute to retrieve:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_PITCH"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_GAIN"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_MIN_GAIN"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_MAX_GAIN"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_MAX_DISTANCE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_ROLLOFF_FACTOR"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_CONE_OUTER_GAIN"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_CONE_INNER_ANGLE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_CONE_OUTER_ANGLE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_REFERENCE_DISTANCE"/></item>
                    </list>
                </para>
            </param>
            <param name="val">
                A pointer to the floating point value being retrieved.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetSourcef(System.Int32,System.Int32,System.Single[])">
            <summary>
                Retrieves a floating point property of a source.
            </summary>
            <param name="source">
                Source name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute to retrieve:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_PITCH"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_GAIN"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_MIN_GAIN"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_MAX_GAIN"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_MAX_DISTANCE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_ROLLOFF_FACTOR"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_CONE_OUTER_GAIN"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_CONE_INNER_ANGLE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_CONE_OUTER_ANGLE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_REFERENCE_DISTANCE"/></item>
                    </list>
                </para>
            </param>
            <param name="val">
                A pointer to the floating point value being retrieved.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetSourcef(System.Int32,System.Int32,System.IntPtr)">
            <summary>
                Retrieves a floating point property of a source.
            </summary>
            <param name="source">
                Source name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute to retrieve:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_PITCH"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_GAIN"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_MIN_GAIN"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_MAX_GAIN"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_MAX_DISTANCE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_ROLLOFF_FACTOR"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_CONE_OUTER_GAIN"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_CONE_INNER_ANGLE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_CONE_OUTER_ANGLE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_REFERENCE_DISTANCE"/></item>
                    </list>
                </para>
            </param>
            <param name="val">
                A pointer to the floating point value being retrieved.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetSourcef(System.Int32,System.Int32,System.Single*)">
            <summary>
                Retrieves a floating point property of a source.
            </summary>
            <param name="source">
                Source name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute to retrieve:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_PITCH"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_GAIN"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_MIN_GAIN"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_MAX_GAIN"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_MAX_DISTANCE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_ROLLOFF_FACTOR"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_CONE_OUTER_GAIN"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_CONE_INNER_ANGLE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_CONE_OUTER_ANGLE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_REFERENCE_DISTANCE"/></item>
                    </list>
                </para>
            </param>
            <param name="val">
                A pointer to the floating point value being retrieved.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetSourcefv(System.Int32,System.Int32,System.Single@)">
            <summary>
                Retrieves a floating point-vector property of a source.
            </summary>
            <param name="source">
                Source name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute being retrieved:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_POSITION"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_VELOCITY"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_DIRECTION"/></item>
                    </list>
                </para>
            </param>
            <param name="val">
                A pointer to the vector to retrieve.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetSourcefv(System.Int32,System.Int32,System.Single[])">
            <summary>
                Retrieves a floating point-vector property of a source.
            </summary>
            <param name="source">
                Source name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute being retrieved:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_POSITION"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_VELOCITY"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_DIRECTION"/></item>
                    </list>
                </para>
            </param>
            <param name="values">
                A pointer to the vector to retrieve.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetSourcefv(System.Int32,System.Int32,System.IntPtr)">
            <summary>
                Retrieves a floating point-vector property of a source.
            </summary>
            <param name="source">
                Source name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute being retrieved:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_POSITION"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_VELOCITY"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_DIRECTION"/></item>
                    </list>
                </para>
            </param>
            <param name="values">
                A pointer to the vector to retrieve.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetSourcefv(System.Int32,System.Int32,System.Single*)">
            <summary>
                Retrieves a floating point-vector property of a source.
            </summary>
            <param name="source">
                Source name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute being retrieved:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_POSITION"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_VELOCITY"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_DIRECTION"/></item>
                    </list>
                </para>
            </param>
            <param name="values">
                A pointer to the vector to retrieve.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetSourcei(System.Int32,System.Int32,System.Int32@)">
            <summary>
                Retrieves an integer property of a source.
            </summary>
            <param name="source">
                Source name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute to retrieve:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_SOURCE_RELATIVE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_BUFFER"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_SOURCE_STATE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_BUFFERS_QUEUED"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_BUFFERS_PROCESSED"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_CONE_INNER_ANGLE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_CONE_OUTER_ANGLE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_LOOPING"/></item>
                    </list>
                </para>
            </param>
            <param name="val">
                A pointer to the integer value being retrieved.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetSourcei(System.Int32,System.Int32,System.Int32[])">
            <summary>
                Retrieves an integer property of a source.
            </summary>
            <param name="source">
                Source name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute to retrieve:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_SOURCE_RELATIVE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_BUFFER"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_SOURCE_STATE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_BUFFERS_QUEUED"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_BUFFERS_PROCESSED"/></item>
                    </list>
                </para>
            </param>
            <param name="val">
                A pointer to the integer value being retrieved.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetSourcei(System.Int32,System.Int32,System.IntPtr)">
            <summary>
                Retrieves an integer property of a source.
            </summary>
            <param name="source">
                Source name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute to retrieve:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_SOURCE_RELATIVE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_BUFFER"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_SOURCE_STATE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_BUFFERS_QUEUED"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_BUFFERS_PROCESSED"/></item>
                    </list>
                </para>
            </param>
            <param name="val">
                A pointer to the integer value being retrieved.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetSourcei(System.Int32,System.Int32,System.Int32*)">
            <summary>
                Retrieves an integer property of a source.
            </summary>
            <param name="source">
                Source name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute to retrieve:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_SOURCE_RELATIVE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_BUFFER"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_SOURCE_STATE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_BUFFERS_QUEUED"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_BUFFERS_PROCESSED"/></item>
                    </list>
                </para>
            </param>
            <param name="val">
                A pointer to the integer value being retrieved.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetSource3i(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
                Retrieves an integer property of a source.
            </summary>
            <param name="source">
                Source name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute to retrieve:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_POSITION"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_VELOCITY"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_DIRECTION"/></item>
                    </list>
                </para>
            </param>
            <param name="value1">
                The int values which the attribute will be set to.
            </param>
            <param name="value2">
                The int values which the attribute will be set to.
            </param>
            <param name="value3">
                The int values which the attribute will be set to.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetSourceiv(System.Int32,System.Int32,System.Int32@)">
            <summary>
                Retrieves an integer property of a source.
            </summary>
            <param name="source">
                Source name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute to retrieve:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_SOURCE_RELATIVE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_BUFFER"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_SOURCE_STATE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_BUFFERS_QUEUED"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_BUFFERS_PROCESSED"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_CONE_INNER_ANGLE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_CONE_OUTER_ANGLE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_LOOPING"/></item>
                    </list>
                </para>
            </param>
            <param name="val">
                A pointer to the integer value being retrieved.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetSourceiv(System.Int32,System.Int32,System.Int32[])">
            <summary>
                Retrieves an integer property of a source.
            </summary>
            <param name="source">
                Source name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute to retrieve:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_SOURCE_RELATIVE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_BUFFER"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_SOURCE_STATE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_BUFFERS_QUEUED"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_BUFFERS_PROCESSED"/></item>
                    </list>
                </para>
            </param>
            <param name="val">
                A pointer to the integer value being retrieved.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetSourceiv(System.Int32,System.Int32,System.IntPtr)">
            <summary>
                Retrieves an integer property of a source.
            </summary>
            <param name="source">
                Source name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute to retrieve:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_SOURCE_RELATIVE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_BUFFER"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_SOURCE_STATE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_BUFFERS_QUEUED"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_BUFFERS_PROCESSED"/></item>
                    </list>
                </para>
            </param>
            <param name="val">
                A pointer to the integer value being retrieved.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetSourceiv(System.Int32,System.Int32,System.Int32*)">
            <summary>
                Retrieves an integer property of a source.
            </summary>
            <param name="source">
                Source name whose attribute is being retrieved.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute to retrieve:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_SOURCE_RELATIVE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_BUFFER"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_SOURCE_STATE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_BUFFERS_QUEUED"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_BUFFERS_PROCESSED"/></item>
                    </list>
                </para>
            </param>
            <param name="val">
                A pointer to the integer value being retrieved.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alGetString(System.Int32)">
            <summary>
                Retrieves an OpenAL string property.
            </summary>
            <param name="state">
                <para>
                    The property to be queried:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_VENDOR"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_VERSION"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_RENDERER"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_EXTENSIONS"/></item>
                    </list>
                </para>
            </param>
            <returns>
                A pointer to a null-terminated string.
            </returns>
        </member>
        <member name="M:Tao.OpenAl.Al.alHint(System.Int32,System.Int32)">
            <summary>
                Sets application preferences for driver performance choices.
            </summary>
            <param name="target">
                Unknown.
            </param>
            <param name="mode">
                Unknown.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alIsBuffer(System.Int32)">
            <summary>
                Tests if a buffer name is valid.
            </summary>
            <param name="buffer">
                A buffer name to be tested for validity.
            </param>
            <returns>
                bool value <see cref="F:Tao.OpenAl.Al.AL_TRUE"/> if the buffer name is valid or
                <see cref="F:Tao.OpenAl.Al.AL_FALSE"/> if the buffer name is not valid.
            </returns>
        </member>
        <member name="M:Tao.OpenAl.Al.alIsEnabled(System.Int32)">
            <summary>
                Returns a value indicating if a specific feature is enabled in the OpenAL driver.
            </summary>
            <param name="capability">
                The capability to query.
            </param>
            <returns>
                <see cref="F:Tao.OpenAl.Al.AL_TRUE"/> if the capability is enabled, <see cref="F:Tao.OpenAl.Al.AL_FALSE"/> if
                the capability is disabled.
            </returns>
            <remarks>
                At the time of this writing, this function always returns <see cref="F:Tao.OpenAl.Al.AL_FALSE"/>,
                and since there are no capabilities defined yet, the error
                <see cref="F:Tao.OpenAl.Al.AL_INVALID_ENUM"/> will also be set.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alIsExtensionPresent(System.String)">
            <summary>
                Tests if a specific extension is available for the OpenAL driver.
            </summary>
            <param name="extensionName">
                A string describing the desired extension.
            </param>
            <returns>
                <see cref="F:Tao.OpenAl.Al.AL_TRUE"/> if the extension is available, <see cref="F:Tao.OpenAl.Al.AL_FALSE"/> if
                the extension is not available.
            </returns>
        </member>
        <member name="M:Tao.OpenAl.Al.alIsSource(System.Int32)">
            <summary>
                Tests if a source name is valid.
            </summary>
            <param name="id">
                A source name to be tested for validity.
            </param>
            <returns>
                bool value <see cref="F:Tao.OpenAl.Al.AL_TRUE"/> if the source name is valid or
                <see cref="F:Tao.OpenAl.Al.AL_FALSE"/> if the source name is not valid.
            </returns>
        </member>
        <member name="M:Tao.OpenAl.Al.alListener3f(System.Int32,System.Single,System.Single,System.Single)">
            <summary>
                Sets a floating point property for the listener.
            </summary>
            <param name="attribute">
                <para>
                    The name of the attribute to set:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_POSITION"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_VELOCITY"/></item>
                    </list>
                </para>
            </param>
            <param name="value1">
                The value to set the attribute to.
            </param>
            <param name="value2">
                The value to set the attribute to.
            </param>
            <param name="value3">
                The value to set the attribute to.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alListenerf(System.Int32,System.Single)">
            <summary>
                Sets a floating point property for the listener.
            </summary>
            <param name="attribute">
                The name of the attribute to be set.
            </param>
            <param name="val">
                The float value to set the attribute to.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alListenerfv(System.Int32,System.Single@)">
            <summary>
                Sets a floating point-vector property of the listener.
            </summary>
            <param name="attribute">
                <para>
                    The name of the attribute to be set:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_POSITION"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_VELOCITY"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_ORIENTATION"/></item>
                    </list>
                </para>
            </param>
            <param name="values">
                Pointer to floating point-vector values.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alListenerfv(System.Int32,System.Single[])">
            <summary>
                Sets a floating point-vector property of the listener.
            </summary>
            <param name="attribute">
                <para>
                    The name of the attribute to be set:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_POSITION"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_VELOCITY"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_ORIENTATION"/></item>
                    </list>
                </para>
            </param>
            <param name="values">
                Pointer to floating point-vector values.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alListenerfv(System.Int32,System.IntPtr)">
            <summary>
                Sets a floating point-vector property of the listener.
            </summary>
            <param name="attribute">
                <para>
                    The name of the attribute to be set:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_POSITION"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_VELOCITY"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_ORIENTATION"/></item>
                    </list>
                </para>
            </param>
            <param name="values">
                Pointer to floating point-vector values.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alListenerfv(System.Int32,System.Single*)">
            <summary>
                Sets a floating point-vector property of the listener.
            </summary>
            <param name="attribute">
                <para>
                    The name of the attribute to be set:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_POSITION"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_VELOCITY"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_ORIENTATION"/></item>
                    </list>
                </para>
            </param>
            <param name="values">
                Pointer to floating point-vector values.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alListeneri(System.Int32,System.Int32)">
            <summary>
                Sets an integer property of the listener.
            </summary>
            <param name="attribute">
                The name of the attribute to be set.
            </param>
            <param name="val">
                The integer value to set the attribute to.
            </param>
            <remarks>
                There are no integer listener attributes at this time.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alListener3i(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Sets an integer property for the listener.
            </summary>
            <param name="attribute">
                <para>
                    The name of the attribute to set:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_POSITION"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_VELOCITY"/></item>
                    </list>
                </para>
            </param>
            <param name="value1">
                The value to set the attribute to.
            </param>
            <param name="value2">
                The value to set the attribute to.
            </param>
            <param name="value3">
                The value to set the attribute to.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alListeneriv(System.Int32,System.Int32@)">
            <summary>
                Sets a integer-vector property of the listener.
            </summary>
            <param name="attribute">
                <para>
                    The name of the attribute to be set:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_POSITION"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_VELOCITY"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_ORIENTATION"/></item>
                    </list>
                </para>
            </param>
            <param name="values">
                Pointer to integer-vector values.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alQueuei(System.Int32,System.Int32,System.Int32)">
            <summary>
                Unknown.
            </summary>
            <param name="source">
                Unknown.
            </param>
            <param name="attribute">
                Unknown.
            </param>
            <param name="val">
                Unknown.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alSource3f(System.Int32,System.Int32,System.Single,System.Single,System.Single)">
            <summary>
                Sets a source property requiring three floating point values.
            </summary>
            <param name="source">
                Source name whose attribute is being set.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute to set:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_POSITION"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_VELOCITY"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_DIRECTION"/></item>
                    </list>
                </para>
            </param>
            <param name="value1">
                The float values which the attribute will be set to.
            </param>
            <param name="value2">
                The float values which the attribute will be set to.
            </param>
            <param name="value3">
                The float values which the attribute will be set to.
            </param>
            <remarks>
                This function is an alternative to <see cref="M:Tao.OpenAl.Al.alSourcefv(System.Int32,System.Int32,System.IntPtr)"/>.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alSourcef(System.Int32,System.Int32,System.Single)">
            <summary>
                Sets a floating point property of a source.
            </summary>
            <param name="source">
                Source name whose attribute is being set.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute to set:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_PITCH"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_GAIN"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_MAX_DISTANCE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_ROLLOFF_FACTOR"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_REFERENCE_DISTANCE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_MIN_GAIN"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_MAX_GAIN"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_CONE_OUTER_GAIN"/></item>
                    </list>
                </para>
            </param>
            <param name="val">
                The value to set the attribute to.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alSourcefv(System.Int32,System.Int32,System.Single@)">
            <summary>
                Sets a floating point-vector property of a source.
            </summary>
            <param name="source">
                Source name whose attribute is being set.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute being set:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_POSITION"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_VELOCITY"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_DIRECTION"/></item>
                    </list>
                </para>
            </param>
            <param name="values">
                A pointer to the vector to set the attribute to.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alSourcefv(System.Int32,System.Int32,System.Single[])">
            <summary>
                Sets a floating point-vector property of a source.
            </summary>
            <param name="source">
                Source name whose attribute is being set.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute being set:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_POSITION"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_VELOCITY"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_DIRECTION"/></item>
                    </list>
                </para>
            </param>
            <param name="values">
                A pointer to the vector to set the attribute to.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alSourcefv(System.Int32,System.Int32,System.IntPtr)">
            <summary>
                Sets a floating point-vector property of a source.
            </summary>
            <param name="source">
                Source name whose attribute is being set.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute being set:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_POSITION"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_VELOCITY"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_DIRECTION"/></item>
                    </list>
                </para>
            </param>
            <param name="values">
                A pointer to the vector to set the attribute to.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alSourcefv(System.Int32,System.Int32,System.Single*)">
            <summary>
                Sets a floating point-vector property of a source.
            </summary>
            <param name="source">
                Source name whose attribute is being set.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute being set:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_POSITION"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_VELOCITY"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_DIRECTION"/></item>
                    </list>
                </para>
            </param>
            <param name="values">
                A pointer to the vector to set the attribute to.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alSourcei(System.Int32,System.Int32,System.Int32)">
            <summary>
                Sets an integer property of a source.
            </summary>
            <param name="source">
                Source name whose attribute is being set.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute to set:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_SOURCE_RELATIVE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_CONE_INNER_ANGLE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_CONE_OUTER_ANGLE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_LOOPING"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_BUFFER"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_SOURCE_STATE"/></item>
                    </list>
                </para>
            </param>
            <param name="val">
                The value to set the attribute to.
            </param>
            <remarks>
                The buffer name zero is reserved as a “Null Buffer" and is accepted by
                <b>alSourcei(…, Al.AL_BUFFER, …)</b> as a valid buffer of zero length.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alSourceiv(System.Int32,System.Int32,System.Int32*)">
            <summary>
                Sets a integer-vector property of a source.
            </summary>
            <param name="source">
                Source name whose attribute is being set.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute being set:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_POSITION"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_VELOCITY"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_DIRECTION"/></item>
                    </list>
                </para>
            </param>
            <param name="values">
                A pointer to the vector to set the attribute to.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alSource3i(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Sets a source property requiring three integer values.
            </summary>
            <param name="source">
                Source name whose attribute is being set.
            </param>
            <param name="attribute">
                <para>
                    The name of the attribute to set:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_POSITION"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_VELOCITY"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_DIRECTION"/></item>
                    </list>
                </para>
            </param>
            <param name="value1">
                The int values which the attribute will be set to.
            </param>
            <param name="value2">
                The int values which the attribute will be set to.
            </param>
            <param name="value3">
                The int values which the attribute will be set to.
            </param>
            <remarks>
                This function is an alternative to <see cref="M:Tao.OpenAl.Al.alSourceiv(System.Int32,System.Int32,System.Int32*)"/>.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alSourcePause(System.Int32)">
            <summary>
                Pauses a source.
            </summary>
            <param name="source">
                The name of the source to be paused.
            </param>
            <remarks>
                The paused source will have its state changed to <see cref="F:Tao.OpenAl.Al.AL_PAUSED"/>.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alSourcePausev(System.Int32,System.Int32@)">
            <summary>
                Pauses a set of sources.
            </summary>
            <param name="number">
                The number of sources to be paused.
            </param>
            <param name="source">
                A pointer to an array of sources to be paused.
            </param>
            <remarks>
                The paused sources will have their state changed to <see cref="F:Tao.OpenAl.Al.AL_PAUSED"/>.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alSourcePausev(System.Int32,System.Int32[])">
            <summary>
                Pauses a set of sources.
            </summary>
            <param name="number">
                The number of sources to be paused.
            </param>
            <param name="sources">
                A pointer to an array of sources to be paused.
            </param>
            <remarks>
                The paused sources will have their state changed to <see cref="F:Tao.OpenAl.Al.AL_PAUSED"/>.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alSourcePausev(System.Int32,System.IntPtr)">
            <summary>
                Pauses a set of sources.
            </summary>
            <param name="number">
                The number of sources to be paused.
            </param>
            <param name="sources">
                A pointer to an array of sources to be paused.
            </param>
            <remarks>
                The paused sources will have their state changed to <see cref="F:Tao.OpenAl.Al.AL_PAUSED"/>.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alSourcePausev(System.Int32,System.Int32*)">
            <summary>
                Pauses a set of sources.
            </summary>
            <param name="number">
                The number of sources to be paused.
            </param>
            <param name="sources">
                A pointer to an array of sources to be paused.
            </param>
            <remarks>
                The paused sources will have their state changed to <see cref="F:Tao.OpenAl.Al.AL_PAUSED"/>.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alSourcePlay(System.Int32)">
            <summary>
                Plays a source.
            </summary>
            <param name="source">
                The name of the source to be played.
            </param>
            <remarks>
                The playing source will have its state changed to <see cref="F:Tao.OpenAl.Al.AL_PLAYING"/>.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alSourcePlayv(System.Int32,System.Int32@)">
            <summary>
                Plays a set of sources.
            </summary>
            <param name="number">
                The number of sources to be played.
            </param>
            <param name="source">
                A pointer to an array of sources to be played.
            </param>
            <remarks>
                The playing sources will have their state changed to <see cref="F:Tao.OpenAl.Al.AL_PLAYING"/>.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alSourcePlayv(System.Int32,System.Int32[])">
            <summary>
                Plays a set of sources.
            </summary>
            <param name="number">
                The number of sources to be played.
            </param>
            <param name="sources">
                A pointer to an array of sources to be played.
            </param>
            <remarks>
                The playing sources will have their state changed to <see cref="F:Tao.OpenAl.Al.AL_PLAYING"/>.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alSourcePlayv(System.Int32,System.IntPtr)">
            <summary>
                Plays a set of sources.
            </summary>
            <param name="number">
                The number of sources to be played.
            </param>
            <param name="sources">
                A pointer to an array of sources to be played.
            </param>
            <remarks>
                The playing sources will have their state changed to <see cref="F:Tao.OpenAl.Al.AL_PLAYING"/>.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alSourcePlayv(System.Int32,System.Int32*)">
            <summary>
                Plays a set of sources.
            </summary>
            <param name="number">
                The number of sources to be played.
            </param>
            <param name="sources">
                A pointer to an array of sources to be played.
            </param>
            <remarks>
                The playing sources will have their state changed to <see cref="F:Tao.OpenAl.Al.AL_PLAYING"/>.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alSourceQueueBuffers(System.Int32,System.Int32,System.Int32@)">
            <summary>
                Queues a set of buffers on a source.
            </summary>
            <param name="source">
                The name of the source to queue buffers onto.
            </param>
            <param name="number">
                The number of buffers to be queued.
            </param>
            <param name="buffer">
                A pointer to an array of buffer names to be queued.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alSourceQueueBuffers(System.Int32,System.Int32,System.Int32[])">
            <summary>
                Queues a set of buffers on a source.
            </summary>
            <param name="source">
                The name of the source to queue buffers onto.
            </param>
            <param name="number">
                The number of buffers to be queued.
            </param>
            <param name="buffers">
                A pointer to an array of buffer names to be queued.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alSourceQueueBuffers(System.Int32,System.Int32,System.IntPtr)">
            <summary>
                Queues a set of buffers on a source.
            </summary>
            <param name="source">
                The name of the source to queue buffers onto.
            </param>
            <param name="number">
                The number of buffers to be queued.
            </param>
            <param name="buffers">
                A pointer to an array of buffer names to be queued.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alSourceQueueBuffers(System.Int32,System.Int32,System.Int32*)">
            <summary>
                Queues a set of buffers on a source.
            </summary>
            <param name="source">
                The name of the source to queue buffers onto.
            </param>
            <param name="number">
                The number of buffers to be queued.
            </param>
            <param name="buffers">
                A pointer to an array of buffer names to be queued.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alSourceRewind(System.Int32)">
            <summary>
                Stops the source and sets its state to <see cref="F:Tao.OpenAl.Al.AL_INITIAL"/>.
            </summary>
            <param name="source">
                The name of the source to be rewound.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alSourceRewindv(System.Int32,System.Int32@)">
            <summary>
                Stops a set of sources and sets all their states to <see cref="F:Tao.OpenAl.Al.AL_INITIAL"/>.
            </summary>
            <param name="number">
                The number of sources to be rewound.
            </param>
            <param name="source">
                A pointer to an array of sources to be rewound.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alSourceRewindv(System.Int32,System.Int32[])">
            <summary>
                Stops a set of sources and sets all their states to <see cref="F:Tao.OpenAl.Al.AL_INITIAL"/>.
            </summary>
            <param name="number">
                The number of sources to be rewound.
            </param>
            <param name="sources">
                A pointer to an array of sources to be rewound.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alSourceRewindv(System.Int32,System.IntPtr)">
            <summary>
                Stops a set of sources and sets all their states to <see cref="F:Tao.OpenAl.Al.AL_INITIAL"/>.
            </summary>
            <param name="number">
                The number of sources to be rewound.
            </param>
            <param name="sources">
                A pointer to an array of sources to be rewound.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alSourceRewindv(System.Int32,System.Int32*)">
            <summary>
                Stops a set of sources and sets all their states to <see cref="F:Tao.OpenAl.Al.AL_INITIAL"/>.
            </summary>
            <param name="number">
                The number of sources to be rewound.
            </param>
            <param name="sources">
                A pointer to an array of sources to be rewound.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alSourceStop(System.Int32)">
            <summary>
                Stops a source.
            </summary>
            <param name="source">
                The name of the source to be stopped.
            </param>
            <remarks>
                The stopped source will have its state changed to <see cref="F:Tao.OpenAl.Al.AL_STOPPED"/>.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alSourceStopv(System.Int32,System.Int32@)">
            <summary>
                Stops a set of sources.
            </summary>
            <param name="number">
                The number of sources to stop.
            </param>
            <param name="source">
                A pointer to an array of sources to be stopped.
            </param>
            <remarks>
                The stopped sources will have their state changed to <see cref="F:Tao.OpenAl.Al.AL_STOPPED"/>.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alSourceStopv(System.Int32,System.Int32[])">
            <summary>
                Stops a set of sources.
            </summary>
            <param name="number">
                The number of sources to stop.
            </param>
            <param name="sources">
                A pointer to an array of sources to be stopped.
            </param>
            <remarks>
                The stopped sources will have their state changed to <see cref="F:Tao.OpenAl.Al.AL_STOPPED"/>.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alSourceStopv(System.Int32,System.IntPtr)">
            <summary>
                Stops a set of sources.
            </summary>
            <param name="number">
                The number of sources to stop.
            </param>
            <param name="sources">
                A pointer to an array of sources to be stopped.
            </param>
            <remarks>
                The stopped sources will have their state changed to <see cref="F:Tao.OpenAl.Al.AL_STOPPED"/>.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alSourceStopv(System.Int32,System.Int32*)">
            <summary>
                Stops a set of sources.
            </summary>
            <param name="number">
                The number of sources to stop.
            </param>
            <param name="sources">
                A pointer to an array of sources to be stopped.
            </param>
            <remarks>
                The stopped sources will have their state changed to <see cref="F:Tao.OpenAl.Al.AL_STOPPED"/>.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alSourceUnqueueBuffers(System.Int32,System.Int32,System.Int32@)">
            <summary>
                Unqueues a set of buffers attached to a source.
            </summary>
            <param name="source">
                The name of the source to unqueue buffers from.
            </param>
            <param name="number">
                The number of buffers to be unqueued.
            </param>
            <param name="buffer">
                A pointer to an array of buffer names that were removed.
            </param>
            <remarks>
                The unqueue operation will only take place if all <i>number</i> buffers can be
                removed from the queue.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alSourceUnqueueBuffers(System.Int32,System.Int32,System.Int32[])">
            <summary>
                Unqueues a set of buffers attached to a source.
            </summary>
            <param name="source">
                The name of the source to unqueue buffers from.
            </param>
            <param name="number">
                The number of buffers to be unqueued.
            </param>
            <param name="buffers">
                A pointer to an array of buffer names that were removed.
            </param>
            <remarks>
                The unqueue operation will only take place if all <i>number</i> buffers can be
                removed from the queue.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alSourceUnqueueBuffers(System.Int32,System.Int32,System.IntPtr)">
            <summary>
                Unqueues a set of buffers attached to a source.
            </summary>
            <param name="source">
                The name of the source to unqueue buffers from.
            </param>
            <param name="number">
                The number of buffers to be unqueued.
            </param>
            <param name="buffers">
                A pointer to an array of buffer names that were removed.
            </param>
            <remarks>
                The unqueue operation will only take place if all <i>number</i> buffers can be
                removed from the queue.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alSourceUnqueueBuffers(System.Int32,System.Int32,System.Int32*)">
            <summary>
                Unqueues a set of buffers attached to a source.
            </summary>
            <param name="source">
                The name of the source to unqueue buffers from.
            </param>
            <param name="number">
                The number of buffers to be unqueued.
            </param>
            <param name="buffers">
                A pointer to an array of buffer names that were removed.
            </param>
            <remarks>
                The unqueue operation will only take place if all <i>number</i> buffers can be
                removed from the queue.
            </remarks>
        </member>
        <member name="M:Tao.OpenAl.Al.alGenEnvironmentIASIG(System.Int32,System.Int32@)">
            <summary>
                Unknown.
            </summary>
            <param name="number">
                Unknown.
            </param>
            <param name="environments">
                Unknown.
            </param>
            <returns>
                Unknown.
            </returns>
        </member>
        <member name="M:Tao.OpenAl.Al.alGenEnvironmentIASIG(System.Int32,System.Int32[])">
            <summary>
                Unknown.
            </summary>
            <param name="number">
                Unknown.
            </param>
            <param name="environments">
                Unknown.
            </param>
            <returns>
                Unknown.
            </returns>
        </member>
        <member name="M:Tao.OpenAl.Al.alGenEnvironmentIASIG(System.Int32,System.IntPtr)">
            <summary>
                Unknown.
            </summary>
            <param name="number">
                Unknown.
            </param>
            <param name="environments">
                Unknown.
            </param>
            <returns>
                Unknown.
            </returns>
        </member>
        <member name="M:Tao.OpenAl.Al.alGenEnvironmentIASIG(System.Int32,System.Int32*)">
            <summary>
                Unknown.
            </summary>
            <param name="number">
                Unknown.
            </param>
            <param name="environments">
                Unknown.
            </param>
            <returns>
                Unknown.
            </returns>
        </member>
        <member name="M:Tao.OpenAl.Al.alDeleteEnvironmentIASIG(System.Int32,System.Int32@)">
            <summary>
                Unknown.
            </summary>
            <param name="number">
                Unknown.
            </param>
            <param name="environments">
                Unknown.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alDeleteEnvironmentIASIG(System.Int32,System.Int32[])">
            <summary>
                Unknown.
            </summary>
            <param name="number">
                Unknown.
            </param>
            <param name="environments">
                Unknown.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alDeleteEnvironmentIASIG(System.Int32,System.IntPtr)">
            <summary>
                Unknown.
            </summary>
            <param name="number">
                Unknown.
            </param>
            <param name="environments">
                Unknown.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alDeleteEnvironmentIASIG(System.Int32,System.Int32*)">
            <summary>
                Unknown.
            </summary>
            <param name="number">
                Unknown.
            </param>
            <param name="environments">
                Unknown.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alIsEnvironmentIASIG(System.Int32)">
            <summary>
                Unknown.
            </summary>
            <param name="environment">
                Unknown.
            </param>
            <returns>
                Unknown.
            </returns>
        </member>
        <member name="M:Tao.OpenAl.Al.alEnvironmentiIASIG(System.Int32,System.Int32,System.Int32)">
            <summary>
                Unknown.
            </summary>
            <param name="environmentId">
                Unknown.
            </param>
            <param name="attribute">
                Unknown.
            </param>
            <param name="val">
                Unknown.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.alEnvironmentfIASIG(System.Int32,System.Int32,System.Int32)">
            <summary>
                Unknown.
            </summary>
            <param name="environmentId">
                Unknown.
            </param>
            <param name="attribute">
                Unknown.
            </param>
            <param name="val">
                Unknown.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.EAXSetBufferMode(System.Int32,System.Int32*,System.Int32)">
            <summary>
                Sets the X-RAM mode for the specified buffers.
            </summary>
            <param name="n">
                The number of buffers to set.
            </param>
            <param name="buffers">
                A pointer to an array of buffers to set.
            </param>
            <param name="mode">
                <para>
                    The X-RAM buffer mode for the specified buffers.
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_STORAGE_AUTOMATIC"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_STORAGE_HARDWARE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_STORAGE_ACCESSIBLE"/></item>
                    </list>
                </para>
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.EAXSetBufferMode(System.Int32,System.Int32[],System.Int32)">
            <summary>
                Sets the X-RAM mode for the specified buffers.
            </summary>
            <param name="n">
                The number of buffers to set.
            </param>
            <param name="buffers">
                An array of buffers to set, with minimum n elements.
            </param>
            <param name="mode">
                <para>
                    The X-RAM buffer mode for the specified buffers.
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_STORAGE_AUTOMATIC"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_STORAGE_HARDWARE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_STORAGE_ACCESSIBLE"/></item>
                    </list>
                </para>
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.EAXSetBufferMode(System.Int32,System.Int32@,System.Int32)">
            <summary>
                Sets the X-RAM mode for the specified buffers.
            </summary>
            <param name="n">
                The number of buffers to set.
            </param>
            <param name="buffers">
                A pointer to an array of buffers to set.
            </param>
            <param name="mode">
                <para>
                    The X-RAM buffer mode for the specified buffers.
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_STORAGE_AUTOMATIC"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_STORAGE_HARDWARE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_STORAGE_ACCESSIBLE"/></item>
                    </list>
                </para>
            </param>
        </member>
        <member name="M:Tao.OpenAl.Al.EAXGetBufferMode(System.Int32,System.Int32*)">
            <summary>
                Gets the X-RAM mode for the specified buffer.
            </summary>
            <param name="buffer">
                Buffer to retreive the property for.
            </param>
            <param name="reserved">
            Not used yet.
            </param>
            <returns>
                <para>
                    One of the following values:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_STORAGE_AUTOMATIC"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_STORAGE_HARDWARE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_STORAGE_ACCESSIBLE"/></item>
                    </list>
                </para>
            </returns>
        </member>
        <member name="M:Tao.OpenAl.Al.EAXGetBufferMode(System.Int32,System.Int32[])">
            <summary>
                Gets the X-RAM mode for the specified buffer.
            </summary>
            <param name="buffer">
                Buffer to retreive the property for.
            </param>
            <param name="reserved">
            Not used yet.
            </param>
            <returns>
                <para>
                    One of the following values:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_STORAGE_AUTOMATIC"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_STORAGE_HARDWARE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_STORAGE_ACCESSIBLE"/></item>
                    </list>
                </para>
            </returns>
        </member>
        <member name="M:Tao.OpenAl.Al.EAXGetBufferMode(System.Int32,System.Int32@)">
            <summary>
                Gets the X-RAM mode for the specified buffer.
            </summary>
            <param name="buffer">
                Buffer to retreive the property for.
            </param>
            <param name="reserved">
            Not used yet.
            </param>
            <returns>
                <para>
                    One of the following values:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Al.AL_STORAGE_AUTOMATIC"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_STORAGE_HARDWARE"/></item>
                        <item><see cref="F:Tao.OpenAl.Al.AL_STORAGE_ACCESSIBLE"/></item>
                    </list>
                </para>
            </returns>
        </member>
        <member name="M:Tao.OpenAl.Al.ReloadFunctions">
            <summary>
            Reloads OpenAL extension functions.
            </summary>
            <remarks>
            <para>
            Call this function to reload context-dependent extension OpenAL entry points. This should be done 
            whenever you change the current OpenAL context, or in the case you cannot (or do not want)
            to use the automatic initialisation.
            </para>
            <para>
            Calling this function before the automatic initialisation has taken place will result
            in the Al class being initialised twice. This is harmless, but, given the choice, 
            the automatic initialisation should be preferred.
            </para>
            </remarks>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALENABLEDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALDISABLEDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALISENABLEDDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALGETSTRINGDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALGETBOOLEANVDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALGETINTEGERVDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALGETFLOATVDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALGETDOUBLEVDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALGETBOOLEANDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALGETINTEGERDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALGETFLOATDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALGETDOUBLEDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALGETERRORDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALISEXTENSIONPRESENTDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALGETPROCADDRESSDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALGETENUMVALUEDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALLISTENERFDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALLISTENER3FDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALLISTENERFVDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALLISTENERIDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALLISTENER3IDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALLISTENERIVDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALGETLISTENERFDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALGETLISTENER3FDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALGETLISTENERFVDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALGETLISTENERIDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALGETLISTENER3IDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALGETLISTENERIVDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALGENSOURCESDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALDELETESOURCESDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALISSOURCEDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALSOURCEFDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALSOURCE3FDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALSOURCEFVDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALSOURCEIDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALSOURCE3IDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALSOURCEIVDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALGETSOURCEFDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALGETSOURCE3FDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALGETSOURCEFVDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALGETSOURCEIDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALGETSOURCE3IDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALGETSOURCEIVDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALSOURCEPLAYVDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALSOURCESTOPVDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALSOURCEREWINDVDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALSOURCEPAUSEVDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALSOURCEPLAYDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALSOURCESTOPDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALSOURCEREWINDDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALSOURCEPAUSEDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALSOURCEQUEUEBUFFERSDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALSOURCEUNQUEUEBUFFERSDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALGENBUFFERSDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALDELETEBUFFERSDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALISBUFFERDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALBUFFERDATADelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALBUFFERFDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALBUFFER3FDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALBUFFERFVDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALBUFFERIDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALBUFFER3IDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALBUFFERIVDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALGETBUFFERFDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALGETBUFFER3FDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALGETBUFFERFVDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALGETBUFFERIDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALGETBUFFER3IDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALGETBUFFERIVDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALDOPPLERFACTORDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALDOPPLERVELOCITYDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALSPEEDOFSOUNDDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Al.LPALDISTANCEMODELDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Alut">
            <summary>
            OpenAL binding for .NET, implementing ALUT 1.1.
            </summary>
            <remarks>
            ALUT is non-standard.
            </remarks>
        </member>
        <member name="F:Tao.OpenAl.Alut.ALUT_NATIVE_LIBRARY">
            <summary>
            Specifies OpenAl's native library archive.
            </summary>
            <remarks>
            Specifies OpenAl32.dll everywhere; will be mapped via .config for mono.
            </remarks>
        </member>
        <member name="F:Tao.OpenAl.Alut.CALLING_CONVENTION">
            <summary>
            Specifies the calling convention.
            </summary>
            <remarks>
            Specifies <see cref="F:System.Runtime.InteropServices.CallingConvention.Cdecl"/>.
            </remarks>
        </member>
        <member name="F:Tao.OpenAl.Alut.ALUT_API_MAJOR_VERSION">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alut.ALUT_API_MINOR_VERSION">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alut.ALUT_ERROR_NO_ERROR">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alut.ALUT_ERROR_OUT_OF_MEMORY">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alut.ALUT_ERROR_INVALID_ENUM">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alut.ALUT_ERROR_INVALID_VALUE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alut.ALUT_ERROR_INVALID_OPERATION">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alut.ALUT_ERROR_NO_CURRENT_CONTEXT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alut.ALUT_ERROR_AL_ERROR_ON_ENTRY">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alut.ALUT_ERROR_ALC_ERROR_ON_ENTRY">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alut.ALUT_ERROR_OPEN_DEVICE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alut.ALUT_ERROR_CLOSE_DEVICE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alut.ALUT_ERROR_CREATE_CONTEXT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alut.ALUT_ERROR_MAKE_CONTEXT_CURRENT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alut.ALUT_ERROR_DESTROY_CONTEXT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alut.ALUT_ERROR_GEN_BUFFERS">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alut.ALUT_ERROR_BUFFER_DATA">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alut.ALUT_ERROR_IO_ERROR">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alut.ALUT_ERROR_UNSUPPORTED_FILE_TYPE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alut.ALUT_ERROR_UNSUPPORTED_FILE_SUBTYPE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alut.ALUT_ERROR_CORRUPT_OR_TRUNCATED_DATA">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alut.ALUT_WAVEFORM_SINE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alut.ALUT_WAVEFORM_SQUARE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alut.ALUT_WAVEFORM_SAWTOOTH">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alut.ALUT_WAVEFORM_WHITENOISE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alut.ALUT_WAVEFORM_IMPULSE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alut.ALUT_LOADER_BUFFER">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alut.ALUT_LOADER_MEMORY">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tao.OpenAl.Alut.alutInit(System.Int32[],System.String[])">
            <summary>
            
            </summary>
            <param name="argcp"></param>
            <param name="argv"></param>
            <returns></returns>
        </member>
        <member name="M:Tao.OpenAl.Alut.alutInit">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tao.OpenAl.Alut.alutInitWithoutContext(System.Int32[],System.String[])">
            <summary>
            
            </summary>
            <param name="argcp"></param>
            <param name="argv"></param>
            <returns></returns>
        </member>
        <member name="M:Tao.OpenAl.Alut.alutExit">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tao.OpenAl.Alut.alutGetError">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tao.OpenAl.Alut.alutGetErrorString(System.Int32)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tao.OpenAl.Alut.alutCreateBufferFromFile(System.String)">
            <summary>
            
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Tao.OpenAl.Alut.alutCreateBufferFromFileImage(System.IntPtr,System.Int32)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:Tao.OpenAl.Alut.alutCreateBufferHelloWorld">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tao.OpenAl.Alut.alutCreateBufferWaveform(System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="waveshape"></param>
            <param name="frequency"></param>
            <param name="phase"></param>
            <param name="duration"></param>
            <returns></returns>
        </member>
        <member name="M:Tao.OpenAl.Alut.alutLoadMemoryFromFile(System.String,System.Int32@,System.Int32@,System.Single@)">
            <summary>
            
            </summary>
            <param name="fileName"></param>
            <param name="format"></param>
            <param name="size"></param>
            <param name="frequency"></param>
            <returns></returns>
        </member>
        <member name="M:Tao.OpenAl.Alut.alutLoadMemoryFromFileImage(System.IntPtr,System.Int32,System.Int32@,System.Int32@,System.Single@)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="length"></param>
            <param name="format"></param>
            <param name="size"></param>
            <param name="frequency"></param>
            <returns></returns>
        </member>
        <member name="M:Tao.OpenAl.Alut.alutLoadMemoryHelloWorld(System.Int32@,System.Int32@,System.Single@)">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="size"></param>
            <param name="frequency"></param>
            <returns></returns>
        </member>
        <member name="M:Tao.OpenAl.Alut.alutLoadMemoryWaveform(System.Int32,System.Single,System.Single,System.Single,System.Int32@,System.Int32@,System.Single@)">
            <summary>
            
            </summary>
            <param name="waveshape"></param>
            <param name="frequency"></param>
            <param name="phase"></param>
            <param name="duration"></param>
            <param name="format"></param>
            <param name="size"></param>
            <param name="freq"></param>
            <returns></returns>
        </member>
        <member name="M:Tao.OpenAl.Alut.alutGetMIMETypes(System.Int32)">
            <summary>
            
            </summary>
            <param name="loader"></param>
            <returns></returns>
        </member>
        <member name="M:Tao.OpenAl.Alut.alutGetMajorVersion">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tao.OpenAl.Alut.alutGetMinorVersion">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tao.OpenAl.Alut.alutSleep(System.Single)">
            <summary>
            
            </summary>
            <param name="duration"></param>
            <returns></returns>
        </member>
        <member name="T:Tao.OpenAl.Alc">
            <summary>
                OpenAL binding for .NET, implementing ALC 1.1.
            </summary>
            <remarks>
                Binds functions and definitions in OpenAL32.dll or libAL.so.
            </remarks>
        </member>
        <member name="F:Tao.OpenAl.Alc.ALC_NATIVE_LIBRARY">
            <summary>
                Specifies OpenAl's native library archive.
            </summary>
            <remarks>
                Specifies OpenAl32.dll everywhere; will be mapped via .config for mono.
            </remarks>
        </member>
        <member name="F:Tao.OpenAl.Alc.CALLING_CONVENTION">
            <summary>
                Specifies the calling convention.
            </summary>
            <remarks>
                Specifies <see cref="F:System.Runtime.InteropServices.CallingConvention.Cdecl"/>.
            </remarks>
        </member>
        <member name="F:Tao.OpenAl.Alc.ALC_INVALID">
            <summary>
                Bad value.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alc.ALC_FALSE">
            <summary>
                bool false.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alc.ALC_TRUE">
            <summary>
                bool true.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alc.ALC_NO_ERROR">
            <summary>
                No error.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alc.ALC_MAJOR_VERSION">
            <summary>
                Major version.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alc.ALC_MINOR_VERSION">
            <summary>
                Minor version.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alc.ALC_ATTRIBUTES_SIZE">
            <summary>
                Attributes size.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alc.ALC_ALL_ATTRIBUTES">
            <summary>
                All attributes.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alc.ALC_CAPTURE_DEVICE_SPECIFIER">
            <summary>
                Capture device specifier.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alc.ALC_CAPTURE_DEFAULT_DEVICE_SPECIFIER">
            <summary>
                Capture default device specifier.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alc.ALC_CAPTURE_SAMPLES">
            <summary>
                Capture samples.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alc.ALC_DEFAULT_DEVICE_SPECIFIER">
            <summary>
                Default device specifier.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alc.ALC_DEVICE_SPECIFIER">
            <summary>
                Device specifier.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alc.ALC_EXTENSIONS">
            <summary>
                Extensions.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alc.ALC_FREQUENCY">
            <summary>
                Frequency.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alc.ALC_REFRESH">
            <summary>
                Refresh.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alc.ALC_SYNC">
            <summary>
                Sync.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alc.ALC_MONO_SOURCES">
            <summary>
                Num of requested Mono (3D) Sources
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alc.ALC_STEREO_SOURCES">
            <summary>
                Num of requested Stereo Sources
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alc.ALC_INVALID_DEVICE">
            <summary>
                The device argument does not name a valid device.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alc.ALC_INVALID_CONTEXT">
            <summary>
                The context argument does not name a valid context.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alc.ALC_INVALID_ENUM">
            <summary>
                A function was called at inappropriate time, or in an inappropriate way, causing
                an illegal state.  This can be an incompatible value, object ID, and/or function.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alc.ALC_INVALID_VALUE">
            <summary>
                Illegal value passed as an argument to an AL call.  Applies to parameter values,
                but not to enumerations.
            </summary>
        </member>
        <member name="F:Tao.OpenAl.Alc.ALC_OUT_OF_MEMORY">
            <summary>
                A function could not be completed, because there is not enough memory available.
            </summary>
        </member>
        <member name="M:Tao.OpenAl.Alc.alcCloseDevice(System.IntPtr)">
            <summary>
                Closes a device.
            </summary>
            <param name="device">
                A pointer to an opened device.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Alc.alcCreateContext(System.IntPtr,System.Int32@)">
            <summary>
                Creates a context using a specified device.
            </summary>
            <param name="device">
                A pointer to a device.
            </param>
            <param name="attribute">
                <para>
                    A pointer to a set of attributes:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Alc.ALC_FREQUENCY"/></item>
                        <item><see cref="F:Tao.OpenAl.Alc.ALC_REFRESH"/></item>
                        <item><see cref="F:Tao.OpenAl.Alc.ALC_SYNC"/></item>
                    </list>
                </para>
            </param>
            <returns>
                Returns a pointer to the new context (IntPtr.Zero on failure).
            </returns>
        </member>
        <member name="M:Tao.OpenAl.Alc.alcCreateContext(System.IntPtr,System.Int32[])">
            <summary>
                Creates a context using a specified device.
            </summary>
            <param name="device">
                A pointer to a device.
            </param>
            <param name="attribute">
                <para>
                    A pointer to a set of attributes:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Alc.ALC_FREQUENCY"/></item>
                        <item><see cref="F:Tao.OpenAl.Alc.ALC_REFRESH"/></item>
                        <item><see cref="F:Tao.OpenAl.Alc.ALC_SYNC"/></item>
                    </list>
                </para>
            </param>
            <returns>
                Returns a pointer to the new context (IntPtr.Zero on failure).
            </returns>
        </member>
        <member name="M:Tao.OpenAl.Alc.alcCreateContext(System.IntPtr,System.IntPtr)">
            <summary>
                Creates a context using a specified device.
            </summary>
            <param name="device">
                A pointer to a device.
            </param>
            <param name="attribute">
                <para>
                    A pointer to a set of attributes:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Alc.ALC_FREQUENCY"/></item>
                        <item><see cref="F:Tao.OpenAl.Alc.ALC_REFRESH"/></item>
                        <item><see cref="F:Tao.OpenAl.Alc.ALC_SYNC"/></item>
                    </list>
                </para>
            </param>
            <returns>
                Returns a pointer to the new context (IntPtr.Zero on failure).
            </returns>
        </member>
        <member name="M:Tao.OpenAl.Alc.alcCreateContext(System.IntPtr,System.Int32*)">
            <summary>
                Creates a context using a specified device.
            </summary>
            <param name="device">
                A pointer to a device.
            </param>
            <param name="attribute">
                <para>
                    A pointer to a set of attributes:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Alc.ALC_FREQUENCY"/></item>
                        <item><see cref="F:Tao.OpenAl.Alc.ALC_REFRESH"/></item>
                        <item><see cref="F:Tao.OpenAl.Alc.ALC_SYNC"/></item>
                    </list>
                </para>
            </param>
            <returns>
                Returns a pointer to the new context (IntPtr.Zero on failure).
            </returns>
        </member>
        <member name="M:Tao.OpenAl.Alc.alcDestroyContext(System.IntPtr)">
            <summary>
                Destroys a context.
            </summary>
            <param name="context">
                Pointer to the context to be destroyed.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Alc.alcGetContextsDevice(System.IntPtr)">
            <summary>
                Gets the device for a context.
            </summary>
            <param name="context">
                The context to query.
            </param>
            <returns>
                A pointer to a device or IntPtr.Zero on failue.
            </returns>
        </member>
        <member name="M:Tao.OpenAl.Alc.alcGetCurrentContext">
            <summary>
                Retrieves the current context.
            </summary>
            <returns>
                Returns a pointer to the current context or IntPtr.Zero on failure.
            </returns>
        </member>
        <member name="M:Tao.OpenAl.Alc.alcGetEnumValue(System.IntPtr,System.String)">
            <summary>
                Retrieves the enum value for a specified enumeration name.
            </summary>
            <param name="device">
                The device to be queried.
            </param>
            <param name="enumName">
                A null terminated string describing the enum value.
            </param>
            <returns>
                Returns the enum value described by the <i>enumName</i> string.
            </returns>
        </member>
        <member name="M:Tao.OpenAl.Alc.alcGetError(System.IntPtr)">
            <summary>
                Retrieves the current context error state.
            </summary>
            <param name="device">
                The device to query.
            </param>
            <returns>
                The current context error state will be returned.
            </returns>
        </member>
        <member name="M:Tao.OpenAl.Alc.alcGetIntegerv(System.IntPtr,System.Int32,System.Int32,System.Int32@)">
            <summary>
                Returns integers related to the context.
            </summary>
            <param name="device">
                The device to be queried.
            </param>
            <param name="attribute">
                <para>
                    An attribute to be retrieved:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Alc.ALC_MAJOR_VERSION"/></item>
                        <item><see cref="F:Tao.OpenAl.Alc.ALC_MINOR_VERSION"/></item>
                        <item><see cref="F:Tao.OpenAl.Alc.ALC_ATTRIBUTES_SIZE"/></item>
                        <item><see cref="F:Tao.OpenAl.Alc.ALC_ALL_ATTRIBUTES"/></item>
                    </list>
                </para>
            </param>
            <param name="size">
                The size of the destination buffer provided.
            </param>
            <param name="data">
                A pointer to the data to be returned.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Alc.alcGetIntegerv(System.IntPtr,System.Int32,System.Int32,System.Int32[])">
            <summary>
                Returns integers related to the context.
            </summary>
            <param name="device">
                The device to be queried.
            </param>
            <param name="attribute">
                <para>
                    An attribute to be retrieved:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Alc.ALC_MAJOR_VERSION"/></item>
                        <item><see cref="F:Tao.OpenAl.Alc.ALC_MINOR_VERSION"/></item>
                        <item><see cref="F:Tao.OpenAl.Alc.ALC_ATTRIBUTES_SIZE"/></item>
                        <item><see cref="F:Tao.OpenAl.Alc.ALC_ALL_ATTRIBUTES"/></item>
                    </list>
                </para>
            </param>
            <param name="size">
                The size of the destination buffer provided.
            </param>
            <param name="data">
                A pointer to the data to be returned.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Alc.alcGetIntegerv(System.IntPtr,System.Int32,System.Int32,System.IntPtr)">
            <summary>
                Returns integers related to the context.
            </summary>
            <param name="device">
                The device to be queried.
            </param>
            <param name="attribute">
                <para>
                    An attribute to be retrieved:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Alc.ALC_MAJOR_VERSION"/></item>
                        <item><see cref="F:Tao.OpenAl.Alc.ALC_MINOR_VERSION"/></item>
                        <item><see cref="F:Tao.OpenAl.Alc.ALC_ATTRIBUTES_SIZE"/></item>
                        <item><see cref="F:Tao.OpenAl.Alc.ALC_ALL_ATTRIBUTES"/></item>
                    </list>
                </para>
            </param>
            <param name="size">
                The size of the destination buffer provided.
            </param>
            <param name="data">
                A pointer to the data to be returned.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Alc.alcGetIntegerv(System.IntPtr,System.Int32,System.Int32,System.Int32*)">
            <summary>
                Returns integers related to the context.
            </summary>
            <param name="device">
                The device to be queried.
            </param>
            <param name="attribute">
                <para>
                    An attribute to be retrieved:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Alc.ALC_MAJOR_VERSION"/></item>
                        <item><see cref="F:Tao.OpenAl.Alc.ALC_MINOR_VERSION"/></item>
                        <item><see cref="F:Tao.OpenAl.Alc.ALC_ATTRIBUTES_SIZE"/></item>
                        <item><see cref="F:Tao.OpenAl.Alc.ALC_ALL_ATTRIBUTES"/></item>
                    </list>
                </para>
            </param>
            <param name="size">
                The size of the destination buffer provided.
            </param>
            <param name="data">
                A pointer to the data to be returned.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Alc.alcGetProcAddress(System.IntPtr,System.String)">
            <summary>
                Retrieves the address of a specified context extension function.
            </summary>
            <param name="device">
                The device to be queried for the function.
            </param>
            <param name="functionName">
                A null terminated string describing the function.
            </param>
            <returns>
                Returns the address of the function, or IntPtr.Zero if it is not found.
            </returns>
        </member>
        <member name="M:Tao.OpenAl.Alc.alcGetString(System.IntPtr,System.Int32)">
            <summary>
                Returns strings related to the context.
            </summary>
            <param name="device">
                The device to be queried.
            </param>
            <param name="attribute">
                <para>
                    An attribute to be retrieved:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Alc.ALC_DEFAULT_DEVICE_SPECIFIER"/></item>
                        <item><see cref="F:Tao.OpenAl.Alc.ALC_DEVICE_SPECIFIER"/></item>
                        <item><see cref="F:Tao.OpenAl.Alc.ALC_EXTENSIONS"/></item>
                    </list>
                </para>
            </param>
            <returns>
                Returns a pointer to a string.
            </returns>
        </member>
        <member name="M:Tao.OpenAl.Alc.alcGetStringv(System.IntPtr,System.Int32)">
            <summary>
                Returns strings related to the context.
            </summary>
            <param name="device">
                The device to be queried.
            </param>
            <param name="attribute">
                <para>
                    An attribute to be retrieved:
                </para>
                <para>
                    <list type="bullet">
                        <item><see cref="F:Tao.OpenAl.Alc.ALC_DEFAULT_DEVICE_SPECIFIER"/></item>
                        <item><see cref="F:Tao.OpenAl.Alc.ALC_DEVICE_SPECIFIER"/></item>
                        <item><see cref="F:Tao.OpenAl.Alc.ALC_EXTENSIONS"/></item>
                    </list>
                </para>
            </param>
            <returns>
                Returns a pointer to a string.
            </returns>
        </member>
        <member name="M:Tao.OpenAl.Alc.alcIsExtensionPresent(System.IntPtr,System.String)">
            <summary>
                Queries if a specified context extension is available.
            </summary>
            <param name="device">
                The device to be queried for an extension.
            </param>
            <param name="extensionName">
                A null terminated string describing the extension.
            </param>
            <returns>
                Returns <see cref="F:Tao.OpenAl.Alc.ALC_TRUE"/> if the extension is available,
                <see cref="F:Tao.OpenAl.Alc.ALC_FALSE"/> if the extension is not available.
            </returns>
        </member>
        <member name="M:Tao.OpenAl.Alc.alcMakeContextCurrent(System.IntPtr)">
            <summary>
                Makes a specified context the current context.
            </summary>
            <param name="context">
                Pointer to the new context.
            </param>
            <returns>
                Returns an error code on failure.
            </returns>
        </member>
        <member name="M:Tao.OpenAl.Alc.alcOpenDevice(System.String)">
            <summary>
                Opens a device by name.
            </summary>
            <param name="deviceName">
                A null-terminated string describing a device.
            </param>
            <returns>
                Returns a pointer to the opened device.
            </returns>
        </member>
        <member name="M:Tao.OpenAl.Alc.alcProcessContext(System.IntPtr)">
            <summary>
                Tells a context to begin processing.
            </summary>
            <param name="context">
                Pointer to the new context.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Alc.alcSuspendContext(System.IntPtr)">
            <summary>
                Suspends processing on a specified context.
            </summary>
            <param name="context">
                A pointer to the context to be suspended.
            </param>
        </member>
        <member name="M:Tao.OpenAl.Alc.alcCaptureOpenDevice(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
                
            </summary>
            <returns>
                The Open Device will be captured
            </returns>
        </member>
        <member name="M:Tao.OpenAl.Alc.alcCaptureCloseDevice(System.IntPtr)">
            <summary>
                
            </summary>
            <returns>
                
            </returns>
        </member>
        <member name="M:Tao.OpenAl.Alc.alcCaptureStart(System.IntPtr)">
            <summary>
                
            </summary>
            <returns>
                
            </returns>
        </member>
        <member name="M:Tao.OpenAl.Alc.alcCaptureStop(System.IntPtr)">
            <summary>
                
            </summary>
            <returns>
                
            </returns>
        </member>
        <member name="M:Tao.OpenAl.Alc.alcCaptureSamples(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
                
            </summary>
            <returns>
                
            </returns>
        </member>
        <member name="T:Tao.OpenAl.Alc.LPALCCREATECONTEXTDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Alc.LPALCMAKECONTEXTCURRENTDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Alc.LPALCPROCESSCONTEXTDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Alc.LPALCSUSPENDCONTEXTDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Alc.LPALCDESTROYCONTEXTDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Alc.LPALCGETCURRENTECONTEXTDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Alc.LPALCGETCONTEXTSDEVICEDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Alc.LPALCOPENDEVICEDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Alc.LPALCCLOSEDEVICEDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Alc.LPALCGETERRORDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Alc.LPALCISEXTENSIONPRESENTDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Alc.LPALCGETPROCADDRESSDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Alc.LPALCGETENUMVALUEDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Alc.LPALCGETSTRINGDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Alc.LPALCGETINTEGERVDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Alc.LPALCCAPTUREOPENDEVICEDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Alc.LPALCCAPTURECLOSEDEVICEDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Alc.LPALCCAPTURESTARTDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Alc.LPALCCAPTURESTOPDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tao.OpenAl.Alc.LPALCCAPTURESAMPLESDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tao.OpenAl.Delegates.GetDelegateForExtensionMethod(System.String,System.Type)">
            <summary>
            Creates a System.Delegate that can be used to call a dynamically exported OpenAL function.
            </summary>
            <param name="name">The function string for the OpenAL function</param>
            <param name="signature">The signature of the OpenAL function.</param>
            <returns>
            A System.Delegate that can be used to call this OpenAL function or null
            if the function is not available in the current OpenAL context.
            </returns>
        </member>
    </members>
</doc>
