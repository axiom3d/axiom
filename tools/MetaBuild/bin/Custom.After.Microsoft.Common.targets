<!--
 ! This stub enables MetaBuild to inject itself into unmodified common
 ! project files.  You should not need to refer to it directly.
 !
 ! IMPORTANT NOTE: This file must remain compatible with MSBuild v2
 !   so that it can work in the context of older Visual Studio 2005 projects.
 !-->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- Detect case where the MetaBuild targets have been loaded twice since both
       MetaBuild.Common.targets and Custom.After.Microsoft.Common.targets might be in play. -->
  <PropertyGroup Condition="'$(MetaBuildProjectType)'==''">
    <UsingCustomAfterMicrosoftCommonTargets>true</UsingCustomAfterMicrosoftCommonTargets>

    <!-- Locate the MetaBuild bin directory.
       We can find it because the bin directory contains this targets file
       and we know that the path of this targets file is stored in the
       $(CustomAfterMicrosoftCommonTargets) property by the calling project.
    -->
    <MetaBuildBinDir Condition="'$(MetaBuildBinDir)'=='' and Exists('$(CustomAfterMicrosoftCommonTargets)\..\MetaBuild.Common.targets')">$(CustomAfterMicrosoftCommonTargets)\..</MetaBuildBinDir>
    
    <MetaBuildProjectType>Common</MetaBuildProjectType>
    <MetaBuildContribDir Condition="'$(MetaBuildContribDir)'==''">$(MetaBuildBinDir)\..\contrib</MetaBuildContribDir>
    <MetaBuildConfigFile Condition="'$(MetaBuildConfigFile)'==''">$(MetaBuildBinDir)\MetaBuild.config</MetaBuildConfigFile>
  </PropertyGroup>

  <!-- Import the base MetaBuild targets to load the configuration file. -->
  <Import Project="MetaBuild.targets"
          Condition="'$(UsingCustomAfterMicrosoftCommonTargets)'=='true' and '$(MetaBuildBinDir)'!=''" />

  <!-- Import the global Custom.After.Microsoft.Common.targets file, if any.
       We do this to interoperate with extensions other tools may have
       installed.
  -->
  <PropertyGroup>
    <GlobalCustomAfterMicrosoftCommonTargets Condition="'$(GlobalCustomAfterMicrosoftCommonTargets)'=='' and '$(MSBuildToolsVersion)'=='3.5'">$(MSBuildExtensionsPath)\v3.5\Custom.After.Microsoft.Common.targets</GlobalCustomAfterMicrosoftCommonTargets>
    <GlobalCustomAfterMicrosoftCommonTargets Condition="'$(GlobalCustomAfterMicrosoftCommonTargets)'==''">$(MSBuildExtensionsPath)\v2.0\Custom.After.Microsoft.Common.targets</GlobalCustomAfterMicrosoftCommonTargets>
  </PropertyGroup>
  
  <Import Project="$(GlobalCustomAfterMicrosoftCommonTargets)" Condition="Exists('$(GlobalCustomAfterMicrosoftCommonTargets)')"/>  
</Project>
